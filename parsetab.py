
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COLON COMA CTE_F CTE_I CTE_STRING DIFFERENT DIVIDE DOUBLEEQUAL ELSE EQUAL FLOAT FOR FUNCTION ID IF INT LBRACE LOWERTHAN LPAREN MAIN MINUS MORETHAN OR PLUS PRINT PROGRAM RBRACE RPAREN SEMICOLON TIMES VAR VOID WHILEprogram : PROGRAM ID COLON vars main function\n               | PROGRAM ID COLON main function\n               | PROGRAM ID COLON vars main\n               | PROGRAM ID COLON main\n    main : MAIN LPAREN RPAREN LBRACE bloqueAux RBRACE\n            | MAIN LPAREN RPAREN LBRACE vars bloqueAux RBRACE\n    vars : VAR varAux1\n    varAux1 : tipo varAux2 SEMICOLON\n               | tipo varAux2 SEMICOLON varAux1\n    varAux2 : ID\n               | ID COMA varAux2\n    tipo : INT\n            | FLOAT\n            | CHAR\n    tipoFunc : INT\n            | FLOAT\n            | CHAR\n            | VOID\n    bloque : LBRACE RBRACE\n              | LBRACE bloqueAux RBRACE\n    function : FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE\n              | FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE\n              | FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE\n              | FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE\n              | FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE function\n              | FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function\n              | FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function\n              | FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function\n    bloqueAux : estatuto\n                 | estatuto bloqueAux\n    while : WHILE LPAREN expresion RPAREN bloque\n    estatuto : asignacion\n                | condicion\n                | escritura\n                | while\n                | comparacion\n    asignacion : ID EQUAL expresion SEMICOLON\n    comparacion : ID DOUBLEEQUAL expresion SEMICOLON\n    condicion : IF LPAREN expresion RPAREN bloque SEMICOLON\n                 | IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON\n    escritura : PRINT LPAREN escrituraAux RPAREN SEMICOLON\n    escrituraAux : expresion\n                    | CTE_STRING\n                    | expresion COMA escrituraAux\n                    | CTE_STRING COMA escrituraAux\n    expresion : exp\n                 | exp LOWERTHAN exp\n                 | exp MORETHAN exp\n                 | exp DIFFERENT exp\n    exp : termino\n           | termino PLUS exp\n           | termino MINUS exp\n    termino : factor\n               | factor TIMES termino\n               | factor DIVIDE termino\n    factor : LPAREN expresion RPAREN\n              | factorAux\n    factorAux : PLUS var_cte\n                 | MINUS var_cte\n                 | var_cte\n    var_cte : ID\n               | CTE_I\n               | CTE_F\n    '
    
_lr_action_items = {'CTE_STRING':([48,88,89,],[69,69,69,]),'VOID':([17,],[23,]),'EQUAL':([36,],[51,]),'CHAR':([7,17,28,],[11,25,11,]),'VAR':([4,27,45,75,96,],[7,7,7,7,7,]),'WHILE':([15,27,28,31,34,35,38,40,41,42,43,91,92,95,96,97,98,109,113,115,117,122,127,],[-7,32,-8,32,32,-33,-32,-35,-36,-34,-9,-38,-37,32,32,32,-31,-41,32,-19,-39,-20,-40,]),'PROGRAM':([0,],[2,]),'PRINT':([15,27,28,31,34,35,38,40,41,42,43,91,92,95,96,97,98,109,113,115,117,122,127,],[-7,33,-8,33,33,-33,-32,-35,-36,-34,-9,-38,-37,33,33,33,-31,-41,33,-19,-39,-20,-40,]),'MORETHAN':([59,61,63,64,65,66,67,68,79,80,99,100,101,105,106,],[-62,-63,-50,83,-53,-57,-60,-61,-59,-58,-56,-51,-52,-55,-54,]),'MINUS':([47,48,50,51,52,58,59,61,63,65,66,67,68,79,80,81,82,83,84,85,86,87,88,89,99,105,106,],[60,60,60,60,60,60,-62,-63,82,-53,-57,-60,-61,-59,-58,60,60,60,60,60,60,60,60,60,-56,-55,-54,]),'DIVIDE':([59,61,65,66,67,68,79,80,99,],[-62,-63,86,-57,-60,-61,-59,-58,-56,]),'RPAREN':([9,15,28,43,45,55,57,59,61,63,64,65,66,67,68,69,70,71,74,78,79,80,99,100,101,102,103,104,105,106,107,108,],[18,-7,-8,-9,54,76,77,-62,-63,-50,-46,-53,-57,-60,-61,-43,-42,90,93,99,-59,-58,-56,-51,-52,-48,-49,-47,-55,-54,-45,-44,]),'SEMICOLON':([20,21,44,59,61,63,64,65,66,67,68,72,73,79,80,90,99,100,101,102,103,104,105,106,110,115,122,123,],[28,-10,-11,-62,-63,-50,-46,-53,-57,-60,-61,91,92,-59,-58,109,-56,-51,-52,-48,-49,-47,-55,-54,117,-19,-20,127,]),'LOWERTHAN':([59,61,63,64,65,66,67,68,79,80,99,100,101,105,106,],[-62,-63,-50,85,-53,-57,-60,-61,-59,-58,-56,-51,-52,-55,-54,]),'COLON':([3,],[4,]),'CTE_I':([47,48,50,51,52,58,60,62,81,82,83,84,85,86,87,88,89,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'CTE_F':([47,48,50,51,52,58,60,62,81,82,83,84,85,86,87,88,89,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'PLUS':([47,48,50,51,52,58,59,61,63,65,66,67,68,79,80,81,82,83,84,85,86,87,88,89,99,105,106,],[62,62,62,62,62,62,-62,-63,81,-53,-57,-60,-61,-59,-58,62,62,62,62,62,62,62,62,62,-56,-55,-54,]),'$end':([1,8,10,16,19,53,56,94,111,119,121,124,125,126,128,],[0,-4,-3,-2,-1,-5,-6,-21,-25,-22,-23,-26,-24,-27,-28,]),'FUNCTION':([8,10,53,56,94,119,121,125,],[17,17,-5,-6,17,17,17,17,]),'DIFFERENT':([59,61,63,64,65,66,67,68,79,80,99,100,101,105,106,],[-62,-63,-50,84,-53,-57,-60,-61,-59,-58,-56,-51,-52,-55,-54,]),'RBRACE':([34,35,38,39,40,41,42,46,49,75,91,92,97,98,109,112,114,115,116,117,120,122,127,],[-29,-33,-32,53,-35,-36,-34,56,-30,94,-38,-37,115,-31,-41,119,121,-19,122,-39,125,-20,-40,]),'DOUBLEEQUAL':([36,],[50,]),'TIMES':([59,61,65,66,67,68,79,80,99,],[-62,-63,87,-57,-60,-61,-59,-58,-56,]),'LPAREN':([5,30,32,33,37,47,48,50,51,52,58,81,82,83,84,85,86,87,88,89,],[9,45,47,48,52,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'COMA':([21,59,61,63,64,65,66,67,68,69,70,79,80,99,100,101,102,103,104,105,106,],[29,-62,-63,-50,-46,-53,-57,-60,-61,88,89,-59,-58,-56,-51,-52,-48,-49,-47,-55,-54,]),'ELSE':([110,115,122,],[118,-19,-20,]),'ID':([2,11,12,13,14,15,22,23,24,25,26,27,28,29,31,34,35,38,40,41,42,43,47,48,50,51,52,58,60,62,81,82,83,84,85,86,87,88,89,91,92,95,96,97,98,109,113,115,117,122,127,],[3,-14,21,-12,-13,-7,-15,-18,-16,-17,30,36,-8,21,36,36,-33,-32,-35,-36,-34,-9,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-38,-37,36,36,36,-31,-41,36,-19,-39,-20,-40,]),'IF':([15,27,28,31,34,35,38,40,41,42,43,91,92,95,96,97,98,109,113,115,117,122,127,],[-7,37,-8,37,37,-33,-32,-35,-36,-34,-9,-38,-37,37,37,37,-31,-41,37,-19,-39,-20,-40,]),'LBRACE':([18,54,76,77,93,118,],[27,75,96,97,97,97,]),'INT':([7,17,28,],[13,22,13,]),'FLOAT':([7,17,28,],[14,24,14,]),'MAIN':([4,6,15,28,43,],[5,5,-7,-8,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([4,27,45,75,96,],[6,31,55,95,113,]),'var_cte':([47,48,50,51,52,58,60,62,81,82,83,84,85,86,87,88,89,],[67,67,67,67,67,67,79,80,67,67,67,67,67,67,67,67,67,]),'termino':([47,48,50,51,52,58,81,82,83,84,85,86,87,88,89,],[63,63,63,63,63,63,63,63,63,63,63,105,106,63,63,]),'tipoFunc':([17,],[26,]),'bloque':([77,93,118,],[98,110,123,]),'tipo':([7,28,],[12,12,]),'estatuto':([27,31,34,95,96,97,113,],[34,34,34,34,34,34,34,]),'varAux2':([12,29,],[20,44,]),'program':([0,],[1,]),'varAux1':([7,28,],[15,43,]),'factor':([47,48,50,51,52,58,81,82,83,84,85,86,87,88,89,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'main':([4,6,],[8,10,]),'function':([8,10,94,119,121,125,],[16,19,111,124,126,128,]),'escrituraAux':([48,88,89,],[71,107,108,]),'condicion':([27,31,34,95,96,97,113,],[35,35,35,35,35,35,35,]),'expresion':([47,48,50,51,52,58,88,89,],[57,70,72,73,74,78,70,70,]),'asignacion':([27,31,34,95,96,97,113,],[38,38,38,38,38,38,38,]),'bloqueAux':([27,31,34,95,96,97,113,],[39,46,49,112,114,116,120,]),'while':([27,31,34,95,96,97,113,],[40,40,40,40,40,40,40,]),'exp':([47,48,50,51,52,58,81,82,83,84,85,88,89,],[64,64,64,64,64,64,100,101,102,103,104,64,64,]),'factorAux':([47,48,50,51,52,58,81,82,83,84,85,86,87,88,89,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'comparacion':([27,31,34,95,96,97,113,],[41,41,41,41,41,41,41,]),'escritura':([27,31,34,95,96,97,113,],[42,42,42,42,42,42,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID COLON vars main function','program',6,'p_program','lexAndSyn.py',111),
  ('program -> PROGRAM ID COLON main function','program',5,'p_program','lexAndSyn.py',112),
  ('program -> PROGRAM ID COLON vars main','program',5,'p_program','lexAndSyn.py',113),
  ('program -> PROGRAM ID COLON main','program',4,'p_program','lexAndSyn.py',114),
  ('main -> MAIN LPAREN RPAREN LBRACE bloqueAux RBRACE','main',6,'p_main','lexAndSyn.py',118),
  ('main -> MAIN LPAREN RPAREN LBRACE vars bloqueAux RBRACE','main',7,'p_main','lexAndSyn.py',119),
  ('vars -> VAR varAux1','vars',2,'p_vars','lexAndSyn.py',126),
  ('varAux1 -> tipo varAux2 SEMICOLON','varAux1',3,'p_varAux1','lexAndSyn.py',130),
  ('varAux1 -> tipo varAux2 SEMICOLON varAux1','varAux1',4,'p_varAux1','lexAndSyn.py',131),
  ('varAux2 -> ID','varAux2',1,'p_varAux2','lexAndSyn.py',135),
  ('varAux2 -> ID COMA varAux2','varAux2',3,'p_varAux2','lexAndSyn.py',136),
  ('tipo -> INT','tipo',1,'p_tipo','lexAndSyn.py',153),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lexAndSyn.py',154),
  ('tipo -> CHAR','tipo',1,'p_tipo','lexAndSyn.py',155),
  ('tipoFunc -> INT','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',160),
  ('tipoFunc -> FLOAT','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',161),
  ('tipoFunc -> CHAR','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',162),
  ('tipoFunc -> VOID','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',163),
  ('bloque -> LBRACE RBRACE','bloque',2,'p_bloque','lexAndSyn.py',168),
  ('bloque -> LBRACE bloqueAux RBRACE','bloque',3,'p_bloque','lexAndSyn.py',169),
  ('function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE','function',7,'p_function','lexAndSyn.py',173),
  ('function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE','function',9,'p_function','lexAndSyn.py',174),
  ('function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE','function',9,'p_function','lexAndSyn.py',175),
  ('function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE','function',10,'p_function','lexAndSyn.py',176),
  ('function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE function','function',8,'p_function','lexAndSyn.py',177),
  ('function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function','function',10,'p_function','lexAndSyn.py',178),
  ('function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function','function',10,'p_function','lexAndSyn.py',179),
  ('function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function','function',11,'p_function','lexAndSyn.py',180),
  ('bloqueAux -> estatuto','bloqueAux',1,'p_bloqueAux','lexAndSyn.py',188),
  ('bloqueAux -> estatuto bloqueAux','bloqueAux',2,'p_bloqueAux','lexAndSyn.py',189),
  ('while -> WHILE LPAREN expresion RPAREN bloque','while',5,'p_while','lexAndSyn.py',193),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','lexAndSyn.py',197),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexAndSyn.py',198),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','lexAndSyn.py',199),
  ('estatuto -> while','estatuto',1,'p_estatuto','lexAndSyn.py',200),
  ('estatuto -> comparacion','estatuto',1,'p_estatuto','lexAndSyn.py',201),
  ('asignacion -> ID EQUAL expresion SEMICOLON','asignacion',4,'p_asignacion','lexAndSyn.py',205),
  ('comparacion -> ID DOUBLEEQUAL expresion SEMICOLON','comparacion',4,'p_comparacion','lexAndSyn.py',210),
  ('condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON','condicion',6,'p_condicion','lexAndSyn.py',214),
  ('condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON','condicion',8,'p_condicion','lexAndSyn.py',215),
  ('escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON','escritura',5,'p_escritura','lexAndSyn.py',219),
  ('escrituraAux -> expresion','escrituraAux',1,'p_escrituraAux','lexAndSyn.py',223),
  ('escrituraAux -> CTE_STRING','escrituraAux',1,'p_escrituraAux','lexAndSyn.py',224),
  ('escrituraAux -> expresion COMA escrituraAux','escrituraAux',3,'p_escrituraAux','lexAndSyn.py',225),
  ('escrituraAux -> CTE_STRING COMA escrituraAux','escrituraAux',3,'p_escrituraAux','lexAndSyn.py',226),
  ('expresion -> exp','expresion',1,'p_expresion','lexAndSyn.py',230),
  ('expresion -> exp LOWERTHAN exp','expresion',3,'p_expresion','lexAndSyn.py',231),
  ('expresion -> exp MORETHAN exp','expresion',3,'p_expresion','lexAndSyn.py',232),
  ('expresion -> exp DIFFERENT exp','expresion',3,'p_expresion','lexAndSyn.py',233),
  ('exp -> termino','exp',1,'p_exp','lexAndSyn.py',237),
  ('exp -> termino PLUS exp','exp',3,'p_exp','lexAndSyn.py',238),
  ('exp -> termino MINUS exp','exp',3,'p_exp','lexAndSyn.py',239),
  ('termino -> factor','termino',1,'p_termino','lexAndSyn.py',243),
  ('termino -> factor TIMES termino','termino',3,'p_termino','lexAndSyn.py',244),
  ('termino -> factor DIVIDE termino','termino',3,'p_termino','lexAndSyn.py',245),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','lexAndSyn.py',249),
  ('factor -> factorAux','factor',1,'p_factor','lexAndSyn.py',250),
  ('factorAux -> PLUS var_cte','factorAux',2,'p_factorAux','lexAndSyn.py',254),
  ('factorAux -> MINUS var_cte','factorAux',2,'p_factorAux','lexAndSyn.py',255),
  ('factorAux -> var_cte','factorAux',1,'p_factorAux','lexAndSyn.py',256),
  ('var_cte -> ID','var_cte',1,'p_var_cte','lexAndSyn.py',260),
  ('var_cte -> CTE_I','var_cte',1,'p_var_cte','lexAndSyn.py',261),
  ('var_cte -> CTE_F','var_cte',1,'p_var_cte','lexAndSyn.py',262),
]
