
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COLON COMA CTE_F CTE_I CTE_STRING DIFFERENT DIVIDE DOUBLEEQUAL ELSE EQUAL FLOAT FOR FUNCTION ID IF INT LBRACE LOWERTHAN LPAREN MAIN MINUS MORETHAN OR PLUS PRINT PROGRAM RBRACE RPAREN SEMICOLON TIMES VAR VOID WHILEprogram : PROGRAM ID COLON vars main function\n               | PROGRAM ID COLON main function\n               | PROGRAM ID COLON vars main\n               | PROGRAM ID COLON main\n    main : nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE\n            | nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE\n     nomMain : MAIN\n    vars : VAR varAux1\n    varAux1 : tipo varAux2 SEMICOLON\n               | tipo varAux2 SEMICOLON varAux1\n    varAux2 : ID\n            | ID COMA varAux2\n    tipo : INT\n            | FLOAT\n            | CHAR\n    tipoFunc : INT\n            | FLOAT\n            | CHAR\n            | VOID\n    bloque : LBRACE RBRACE\n              | LBRACE bloqueAux RBRACE\n    function : FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE\n              | FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE\n              | FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE function\n              | FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE function\n    nomFunc : ID\n    bloqueAux : estatuto\n                 | estatuto bloqueAux\n    while : WHILE LPAREN expresion RPAREN bloque\n    estatuto : asignacion\n                | condicion\n                | escritura\n                | while\n                | comparacion\n    asignacion : ID EQUAL expresion SEMICOLON\n    comparacion : ID DOUBLEEQUAL expresion SEMICOLON\n    condicion : IF LPAREN expresion RPAREN bloque SEMICOLON\n                 | IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON\n    escritura : PRINT LPAREN escrituraAux RPAREN SEMICOLON\n    escrituraAux : expresion\n                    | CTE_STRING\n                    | expresion COMA escrituraAux\n                    | CTE_STRING COMA escrituraAux\n    expresion : exp\n                 | exp LOWERTHAN exp\n                 | exp MORETHAN exp\n                 | exp DIFFERENT exp\n    exp : termino\n           | termino PLUS exp\n           | termino MINUS exp\n    termino : factor\n               | factor TIMES termino\n               | factor DIVIDE termino\n    factor : LPAREN expresion RPAREN\n              | factorAux\n    factorAux : PLUS var_cte\n                 | MINUS var_cte\n                 | var_cte\n    var_cte : ID\n               | CTE_I\n               | CTE_F\n    '
    
_lr_action_items = {'CTE_STRING':([49,81,82,],[64,64,64,]),'VOID':([18,],[24,]),'EQUAL':([37,],[52,]),'CHAR':([8,18,29,],[12,26,12,]),'VAR':([4,28,76,],[8,8,8,]),'WHILE':([16,28,29,33,35,36,39,42,43,44,45,90,91,95,103,107,109,112,114,117,120,],[-8,40,-9,40,40,-31,-30,-33,-34,-32,-10,-36,-35,40,-39,40,-29,-20,-37,-21,-38,]),'PROGRAM':([0,],[2,]),'PRINT':([16,28,29,33,35,36,39,42,43,44,45,90,91,95,103,107,109,112,114,117,120,],[-8,34,-9,34,34,-31,-30,-33,-34,-32,-10,-36,-35,34,-39,34,-29,-20,-37,-21,-38,]),'MORETHAN':([58,59,62,63,66,68,70,71,79,80,96,97,100,101,102,],[-58,-48,-60,-61,-51,-59,87,-55,-57,-56,-49,-50,-53,-52,-54,]),'MINUS':([49,51,52,53,54,58,59,62,63,66,67,68,71,77,78,79,80,81,82,83,84,87,88,89,100,101,102,],[60,60,60,60,60,-58,78,-60,-61,-51,60,-59,-55,60,60,-57,-56,60,60,60,60,60,60,60,-53,-52,-54,]),'DIVIDE':([58,62,63,66,68,71,79,80,102,],[-58,-60,-61,83,-59,-55,-57,-56,-54,]),'RPAREN':([11,47,58,59,62,63,64,65,66,68,69,70,71,74,75,79,80,85,96,97,98,99,100,101,102,104,105,106,],[20,56,-58,-48,-60,-61,-41,-40,-51,-59,86,-44,-55,92,93,-57,-56,102,-49,-50,-43,-42,-53,-52,-54,-46,-47,-45,]),'SEMICOLON':([21,22,46,58,59,62,63,66,68,70,71,72,73,79,80,86,96,97,100,101,102,104,105,106,108,112,117,118,],[29,-11,-12,-58,-48,-60,-61,-51,-59,-44,-55,90,91,-57,-56,103,-49,-50,-53,-52,-54,-46,-47,-45,114,-20,-21,120,]),'LOWERTHAN':([58,59,62,63,66,68,70,71,79,80,96,97,100,101,102,],[-58,-48,-60,-61,-51,-59,89,-55,-57,-56,-49,-50,-53,-52,-54,]),'COLON':([3,],[4,]),'CTE_I':([49,51,52,53,54,60,61,67,77,78,81,82,83,84,87,88,89,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'CTE_F':([49,51,52,53,54,60,61,67,77,78,81,82,83,84,87,88,89,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'PLUS':([49,51,52,53,54,58,59,62,63,66,67,68,71,77,78,79,80,81,82,83,84,87,88,89,100,101,102,],[61,61,61,61,61,-58,77,-60,-61,-51,61,-59,-55,61,61,-57,-56,61,61,61,61,61,61,61,-53,-52,-54,]),'$end':([1,9,10,17,19,55,57,94,110,116,119,],[0,-4,-3,-2,-1,-5,-6,-22,-24,-23,-25,]),'FUNCTION':([9,10,55,57,94,116,],[18,18,-5,-6,18,18,]),'DIFFERENT':([58,59,62,63,66,68,70,71,79,80,96,97,100,101,102,],[-58,-48,-60,-61,-51,-59,88,-55,-57,-56,-49,-50,-53,-52,-54,]),'RBRACE':([35,36,39,41,42,43,44,48,50,76,90,91,103,107,109,111,112,113,114,117,120,],[-27,-31,-30,55,-33,-34,-32,57,-28,94,-36,-35,-39,112,-29,116,-20,117,-37,-21,-38,]),'DOUBLEEQUAL':([37,],[51,]),'TIMES':([58,62,63,66,68,71,79,80,102,],[-58,-60,-61,84,-59,-55,-57,-56,-54,]),'LPAREN':([6,7,31,32,34,38,40,49,51,52,53,54,67,77,78,81,82,83,84,87,88,89,],[-7,11,47,-26,49,53,54,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'COMA':([22,58,59,62,63,64,65,66,68,70,71,79,80,96,97,100,101,102,104,105,106,],[30,-58,-48,-60,-61,81,82,-51,-59,-44,-55,-57,-56,-49,-50,-53,-52,-54,-46,-47,-45,]),'ELSE':([108,112,117,],[115,-20,-21,]),'ID':([2,12,13,14,15,16,23,24,25,26,27,28,29,30,33,35,36,39,42,43,44,45,49,51,52,53,54,60,61,67,77,78,81,82,83,84,87,88,89,90,91,95,103,107,109,112,114,117,120,],[3,-15,22,-13,-14,-8,-16,-19,-17,-18,32,37,-9,22,37,37,-31,-30,-33,-34,-32,-10,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-36,-35,37,-39,37,-29,-20,-37,-21,-38,]),'IF':([16,28,29,33,35,36,39,42,43,44,45,90,91,95,103,107,109,112,114,117,120,],[-8,38,-9,38,38,-31,-30,-33,-34,-32,-10,-36,-35,38,-39,38,-29,-20,-37,-21,-38,]),'LBRACE':([20,56,92,93,115,],[28,76,107,107,107,]),'INT':([8,18,29,],[14,23,14,]),'FLOAT':([8,18,29,],[15,25,15,]),'MAIN':([4,5,16,29,45,],[6,6,-8,-9,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([4,28,76,],[5,33,95,]),'var_cte':([49,51,52,53,54,60,61,67,77,78,81,82,83,84,87,88,89,],[58,58,58,58,58,79,80,58,58,58,58,58,58,58,58,58,58,]),'nomMain':([4,5,],[7,7,]),'termino':([49,51,52,53,54,67,77,78,81,82,83,84,87,88,89,],[59,59,59,59,59,59,59,59,59,59,100,101,59,59,59,]),'tipoFunc':([18,],[27,]),'bloque':([92,93,115,],[108,109,118,]),'tipo':([8,29,],[13,13,]),'estatuto':([28,33,35,95,107,],[35,35,35,35,35,]),'varAux2':([13,30,],[21,46,]),'program':([0,],[1,]),'varAux1':([8,29,],[16,45,]),'factor':([49,51,52,53,54,67,77,78,81,82,83,84,87,88,89,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'main':([4,5,],[9,10,]),'function':([9,10,94,116,],[17,19,110,119,]),'escrituraAux':([49,81,82,],[69,98,99,]),'condicion':([28,33,35,95,107,],[36,36,36,36,36,]),'expresion':([49,51,52,53,54,67,81,82,],[65,72,73,74,75,85,65,65,]),'asignacion':([28,33,35,95,107,],[39,39,39,39,39,]),'bloqueAux':([28,33,35,95,107,],[41,48,50,111,113,]),'while':([28,33,35,95,107,],[42,42,42,42,42,]),'exp':([49,51,52,53,54,67,77,78,81,82,87,88,89,],[70,70,70,70,70,70,96,97,70,70,104,105,106,]),'nomFunc':([27,],[31,]),'factorAux':([49,51,52,53,54,67,77,78,81,82,83,84,87,88,89,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'comparacion':([28,33,35,95,107,],[43,43,43,43,43,]),'escritura':([28,33,35,95,107,],[44,44,44,44,44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID COLON vars main function','program',6,'p_program','lexAndSyn.py',116),
  ('program -> PROGRAM ID COLON main function','program',5,'p_program','lexAndSyn.py',117),
  ('program -> PROGRAM ID COLON vars main','program',5,'p_program','lexAndSyn.py',118),
  ('program -> PROGRAM ID COLON main','program',4,'p_program','lexAndSyn.py',119),
  ('main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE','main',6,'p_main','lexAndSyn.py',125),
  ('main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE','main',7,'p_main','lexAndSyn.py',126),
  ('nomMain -> MAIN','nomMain',1,'p_nomMain','lexAndSyn.py',130),
  ('vars -> VAR varAux1','vars',2,'p_vars','lexAndSyn.py',141),
  ('varAux1 -> tipo varAux2 SEMICOLON','varAux1',3,'p_varAux1','lexAndSyn.py',145),
  ('varAux1 -> tipo varAux2 SEMICOLON varAux1','varAux1',4,'p_varAux1','lexAndSyn.py',146),
  ('varAux2 -> ID','varAux2',1,'p_varAux2','lexAndSyn.py',150),
  ('varAux2 -> ID COMA varAux2','varAux2',3,'p_varAux2','lexAndSyn.py',151),
  ('tipo -> INT','tipo',1,'p_tipo','lexAndSyn.py',169),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lexAndSyn.py',170),
  ('tipo -> CHAR','tipo',1,'p_tipo','lexAndSyn.py',171),
  ('tipoFunc -> INT','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',176),
  ('tipoFunc -> FLOAT','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',177),
  ('tipoFunc -> CHAR','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',178),
  ('tipoFunc -> VOID','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',179),
  ('bloque -> LBRACE RBRACE','bloque',2,'p_bloque','lexAndSyn.py',184),
  ('bloque -> LBRACE bloqueAux RBRACE','bloque',3,'p_bloque','lexAndSyn.py',185),
  ('function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE','function',7,'p_function','lexAndSyn.py',189),
  ('function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE','function',9,'p_function','lexAndSyn.py',190),
  ('function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE function','function',8,'p_function','lexAndSyn.py',191),
  ('function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE function','function',10,'p_function','lexAndSyn.py',192),
  ('nomFunc -> ID','nomFunc',1,'p_nomFunc','lexAndSyn.py',196),
  ('bloqueAux -> estatuto','bloqueAux',1,'p_bloqueAux','lexAndSyn.py',207),
  ('bloqueAux -> estatuto bloqueAux','bloqueAux',2,'p_bloqueAux','lexAndSyn.py',208),
  ('while -> WHILE LPAREN expresion RPAREN bloque','while',5,'p_while','lexAndSyn.py',212),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','lexAndSyn.py',216),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexAndSyn.py',217),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','lexAndSyn.py',218),
  ('estatuto -> while','estatuto',1,'p_estatuto','lexAndSyn.py',219),
  ('estatuto -> comparacion','estatuto',1,'p_estatuto','lexAndSyn.py',220),
  ('asignacion -> ID EQUAL expresion SEMICOLON','asignacion',4,'p_asignacion','lexAndSyn.py',224),
  ('comparacion -> ID DOUBLEEQUAL expresion SEMICOLON','comparacion',4,'p_comparacion','lexAndSyn.py',229),
  ('condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON','condicion',6,'p_condicion','lexAndSyn.py',233),
  ('condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON','condicion',8,'p_condicion','lexAndSyn.py',234),
  ('escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON','escritura',5,'p_escritura','lexAndSyn.py',238),
  ('escrituraAux -> expresion','escrituraAux',1,'p_escrituraAux','lexAndSyn.py',242),
  ('escrituraAux -> CTE_STRING','escrituraAux',1,'p_escrituraAux','lexAndSyn.py',243),
  ('escrituraAux -> expresion COMA escrituraAux','escrituraAux',3,'p_escrituraAux','lexAndSyn.py',244),
  ('escrituraAux -> CTE_STRING COMA escrituraAux','escrituraAux',3,'p_escrituraAux','lexAndSyn.py',245),
  ('expresion -> exp','expresion',1,'p_expresion','lexAndSyn.py',249),
  ('expresion -> exp LOWERTHAN exp','expresion',3,'p_expresion','lexAndSyn.py',250),
  ('expresion -> exp MORETHAN exp','expresion',3,'p_expresion','lexAndSyn.py',251),
  ('expresion -> exp DIFFERENT exp','expresion',3,'p_expresion','lexAndSyn.py',252),
  ('exp -> termino','exp',1,'p_exp','lexAndSyn.py',256),
  ('exp -> termino PLUS exp','exp',3,'p_exp','lexAndSyn.py',257),
  ('exp -> termino MINUS exp','exp',3,'p_exp','lexAndSyn.py',258),
  ('termino -> factor','termino',1,'p_termino','lexAndSyn.py',262),
  ('termino -> factor TIMES termino','termino',3,'p_termino','lexAndSyn.py',263),
  ('termino -> factor DIVIDE termino','termino',3,'p_termino','lexAndSyn.py',264),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','lexAndSyn.py',268),
  ('factor -> factorAux','factor',1,'p_factor','lexAndSyn.py',269),
  ('factorAux -> PLUS var_cte','factorAux',2,'p_factorAux','lexAndSyn.py',273),
  ('factorAux -> MINUS var_cte','factorAux',2,'p_factorAux','lexAndSyn.py',274),
  ('factorAux -> var_cte','factorAux',1,'p_factorAux','lexAndSyn.py',275),
  ('var_cte -> ID','var_cte',1,'p_var_cte','lexAndSyn.py',279),
  ('var_cte -> CTE_I','var_cte',1,'p_var_cte','lexAndSyn.py',280),
  ('var_cte -> CTE_F','var_cte',1,'p_var_cte','lexAndSyn.py',281),
]
