
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COLON COMA CTE_F CTE_I CTE_STRING DIFFERENT DIVIDE DOUBLEEQUAL ELSE EQUAL FLOAT FOR FUNCTION ID IF INT LBRACE LOWERTHAN LPAREN MAIN MINUS MORETHAN OR PLUS PRINT PROGRAM RBRACE RPAREN SEMICOLON TIMES VAR VOID WHILEprogram : PROGRAM ID COLON vars main function\n               | PROGRAM ID COLON main function\n               | PROGRAM ID COLON vars main\n               | PROGRAM ID COLON main\n    main : MAIN LPAREN RPAREN LBRACE bloqueAux RBRACE\n            | MAIN LPAREN RPAREN LBRACE vars bloqueAux RBRACE\n    vars : VAR varAux1\n    varAux1 : tipo varAux2 SEMICOLON\n               | tipo varAux2 SEMICOLON varAux1\n    varAux2 : ID\n            | ID COMA varAux2\n    tipo : INT\n            | FLOAT\n            | CHAR\n    tipoFunc : INT\n            | FLOAT\n            | CHAR\n            | VOID\n    bloque : LBRACE RBRACE\n              | LBRACE bloqueAux RBRACE\n    function : FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE\n              | FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE\n              | FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE\n              | FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE\n              | FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE function\n              | FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function\n              | FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function\n              | FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function\n    bloqueAux : estatuto\n                 | estatuto bloqueAux\n    while : WHILE LPAREN expresion RPAREN bloque\n    estatuto : asignacion\n                | condicion\n                | escritura\n                | while\n                | comparacion\n    asignacion : ID EQUAL expresion SEMICOLON\n    comparacion : ID DOUBLEEQUAL expresion SEMICOLON\n    condicion : IF LPAREN expresion RPAREN bloque SEMICOLON\n                 | IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON\n    escritura : PRINT LPAREN escrituraAux RPAREN SEMICOLON\n    escrituraAux : expresion\n                    | CTE_STRING\n                    | expresion COMA escrituraAux\n                    | CTE_STRING COMA escrituraAux\n    expresion : exp\n                 | exp LOWERTHAN exp\n                 | exp MORETHAN exp\n                 | exp DIFFERENT exp\n    exp : termino\n           | termino PLUS exp\n           | termino MINUS exp\n    termino : factor\n               | factor TIMES termino\n               | factor DIVIDE termino\n    factor : LPAREN expresion RPAREN\n              | factorAux\n    factorAux : PLUS var_cte\n                 | MINUS var_cte\n                 | var_cte\n    var_cte : ID\n               | CTE_I\n               | CTE_F\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,9,10,18,48,58,77,97,115,117,122,123,124,127,],[0,-4,-3,-2,-1,-5,-6,-21,-25,-22,-23,-26,-24,-27,-28,]),'ID':([2,12,13,14,15,16,19,20,21,22,23,28,29,30,32,35,36,37,38,39,40,41,51,52,53,54,55,63,64,66,78,79,80,81,82,83,84,85,88,89,91,94,95,99,110,111,114,118,120,126,128,],[3,-7,25,-12,-13,-14,27,-15,-16,-17,-18,-8,25,42,-9,42,42,-32,-33,-34,-35,-36,59,59,59,59,59,59,59,59,42,42,-37,59,59,59,59,59,59,59,-38,59,59,42,42,-41,-31,-39,-19,-20,-40,]),'COLON':([3,],[4,]),'VAR':([4,30,31,56,79,],[7,7,7,7,7,]),'MAIN':([4,5,12,28,32,],[8,8,-7,-8,-9,]),'FUNCTION':([6,9,48,58,77,115,117,123,],[11,11,-5,-6,11,11,11,11,]),'INT':([7,11,28,],[14,20,14,]),'FLOAT':([7,11,28,],[15,21,15,]),'CHAR':([7,11,28,],[16,22,16,]),'LPAREN':([8,27,43,44,45,51,52,53,54,55,66,81,82,83,84,85,88,89,94,95,],[17,31,53,54,55,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'VOID':([11,],[23,]),'IF':([12,28,30,32,35,36,37,38,39,40,41,78,79,80,91,99,110,111,114,118,120,126,128,],[-7,-8,43,-9,43,43,-32,-33,-34,-35,-36,43,43,-37,-38,43,43,-41,-31,-39,-19,-20,-40,]),'PRINT':([12,28,30,32,35,36,37,38,39,40,41,78,79,80,91,99,110,111,114,118,120,126,128,],[-7,-8,44,-9,44,44,-32,-33,-34,-35,-36,44,44,-37,-38,44,44,-41,-31,-39,-19,-20,-40,]),'WHILE':([12,28,30,32,35,36,37,38,39,40,41,78,79,80,91,99,110,111,114,118,120,126,128,],[-7,-8,45,-9,45,45,-32,-33,-34,-35,-36,45,45,-37,-38,45,45,-41,-31,-39,-19,-20,-40,]),'RPAREN':([12,17,28,31,32,47,59,61,62,65,67,68,69,70,72,73,74,75,76,86,87,90,101,102,103,104,105,106,107,108,112,113,],[-7,26,-8,46,-9,57,-61,-46,-50,-53,-57,-60,-62,-63,92,93,-42,-43,96,-58,-59,108,-47,-48,-49,-51,-52,-54,-55,-56,-44,-45,]),'SEMICOLON':([24,25,33,59,60,61,62,65,67,68,69,70,71,86,87,93,101,102,103,104,105,106,107,108,109,120,125,126,],[28,-10,-11,-61,80,-46,-50,-53,-57,-60,-62,-63,91,-58,-59,111,-47,-48,-49,-51,-52,-54,-55,-56,118,-19,128,-20,]),'COMA':([25,59,61,62,65,67,68,69,70,74,75,86,87,101,102,103,104,105,106,107,108,],[29,-61,-46,-50,-53,-57,-60,-62,-63,94,95,-58,-59,-47,-48,-49,-51,-52,-54,-55,-56,]),'LBRACE':([26,46,57,92,96,119,],[30,56,79,110,110,110,]),'RBRACE':([34,36,37,38,39,40,41,49,50,56,80,91,98,100,110,111,114,116,118,120,121,126,128,],[48,-29,-32,-33,-34,-35,-36,58,-30,77,-37,-38,115,117,120,-41,-31,123,-39,-19,126,-20,-40,]),'EQUAL':([42,],[51,]),'DOUBLEEQUAL':([42,],[52,]),'PLUS':([51,52,53,54,55,59,62,65,66,67,68,69,70,81,82,83,84,85,86,87,88,89,94,95,106,107,108,],[63,63,63,63,63,-61,84,-53,63,-57,-60,-62,-63,63,63,63,63,63,-58,-59,63,63,63,63,-54,-55,-56,]),'MINUS':([51,52,53,54,55,59,62,65,66,67,68,69,70,81,82,83,84,85,86,87,88,89,94,95,106,107,108,],[64,64,64,64,64,-61,85,-53,64,-57,-60,-62,-63,64,64,64,64,64,-58,-59,64,64,64,64,-54,-55,-56,]),'CTE_I':([51,52,53,54,55,63,64,66,81,82,83,84,85,88,89,94,95,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'CTE_F':([51,52,53,54,55,63,64,66,81,82,83,84,85,88,89,94,95,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'CTE_STRING':([54,94,95,],[75,75,75,]),'TIMES':([59,65,67,68,69,70,86,87,108,],[-61,88,-57,-60,-62,-63,-58,-59,-56,]),'DIVIDE':([59,65,67,68,69,70,86,87,108,],[-61,89,-57,-60,-62,-63,-58,-59,-56,]),'LOWERTHAN':([59,61,62,65,67,68,69,70,86,87,104,105,106,107,108,],[-61,81,-50,-53,-57,-60,-62,-63,-58,-59,-51,-52,-54,-55,-56,]),'MORETHAN':([59,61,62,65,67,68,69,70,86,87,104,105,106,107,108,],[-61,82,-50,-53,-57,-60,-62,-63,-58,-59,-51,-52,-54,-55,-56,]),'DIFFERENT':([59,61,62,65,67,68,69,70,86,87,104,105,106,107,108,],[-61,83,-50,-53,-57,-60,-62,-63,-58,-59,-51,-52,-54,-55,-56,]),'ELSE':([109,120,126,],[119,-19,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,30,31,56,79,],[5,35,47,78,99,]),'main':([4,5,],[6,9,]),'function':([6,9,77,115,117,123,],[10,18,97,122,124,127,]),'varAux1':([7,28,],[12,32,]),'tipo':([7,28,],[13,13,]),'tipoFunc':([11,],[19,]),'varAux2':([13,29,],[24,33,]),'bloqueAux':([30,35,36,78,79,99,110,],[34,49,50,98,100,116,121,]),'estatuto':([30,35,36,78,79,99,110,],[36,36,36,36,36,36,36,]),'asignacion':([30,35,36,78,79,99,110,],[37,37,37,37,37,37,37,]),'condicion':([30,35,36,78,79,99,110,],[38,38,38,38,38,38,38,]),'escritura':([30,35,36,78,79,99,110,],[39,39,39,39,39,39,39,]),'while':([30,35,36,78,79,99,110,],[40,40,40,40,40,40,40,]),'comparacion':([30,35,36,78,79,99,110,],[41,41,41,41,41,41,41,]),'expresion':([51,52,53,54,55,66,94,95,],[60,71,72,74,76,90,74,74,]),'exp':([51,52,53,54,55,66,81,82,83,84,85,94,95,],[61,61,61,61,61,61,101,102,103,104,105,61,61,]),'termino':([51,52,53,54,55,66,81,82,83,84,85,88,89,94,95,],[62,62,62,62,62,62,62,62,62,62,62,106,107,62,62,]),'factor':([51,52,53,54,55,66,81,82,83,84,85,88,89,94,95,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'factorAux':([51,52,53,54,55,66,81,82,83,84,85,88,89,94,95,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'var_cte':([51,52,53,54,55,63,64,66,81,82,83,84,85,88,89,94,95,],[68,68,68,68,68,86,87,68,68,68,68,68,68,68,68,68,68,]),'escrituraAux':([54,94,95,],[73,112,113,]),'bloque':([92,96,119,],[109,114,125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID COLON vars main function','program',6,'p_program','lexAndSyn.py',112),
  ('program -> PROGRAM ID COLON main function','program',5,'p_program','lexAndSyn.py',113),
  ('program -> PROGRAM ID COLON vars main','program',5,'p_program','lexAndSyn.py',114),
  ('program -> PROGRAM ID COLON main','program',4,'p_program','lexAndSyn.py',115),
  ('main -> MAIN LPAREN RPAREN LBRACE bloqueAux RBRACE','main',6,'p_main','lexAndSyn.py',119),
  ('main -> MAIN LPAREN RPAREN LBRACE vars bloqueAux RBRACE','main',7,'p_main','lexAndSyn.py',120),
  ('vars -> VAR varAux1','vars',2,'p_vars','lexAndSyn.py',129),
  ('varAux1 -> tipo varAux2 SEMICOLON','varAux1',3,'p_varAux1','lexAndSyn.py',133),
  ('varAux1 -> tipo varAux2 SEMICOLON varAux1','varAux1',4,'p_varAux1','lexAndSyn.py',134),
  ('varAux2 -> ID','varAux2',1,'p_varAux2','lexAndSyn.py',138),
  ('varAux2 -> ID COMA varAux2','varAux2',3,'p_varAux2','lexAndSyn.py',139),
  ('tipo -> INT','tipo',1,'p_tipo','lexAndSyn.py',156),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lexAndSyn.py',157),
  ('tipo -> CHAR','tipo',1,'p_tipo','lexAndSyn.py',158),
  ('tipoFunc -> INT','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',163),
  ('tipoFunc -> FLOAT','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',164),
  ('tipoFunc -> CHAR','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',165),
  ('tipoFunc -> VOID','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',166),
  ('bloque -> LBRACE RBRACE','bloque',2,'p_bloque','lexAndSyn.py',171),
  ('bloque -> LBRACE bloqueAux RBRACE','bloque',3,'p_bloque','lexAndSyn.py',172),
  ('function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE','function',7,'p_function','lexAndSyn.py',176),
  ('function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE','function',9,'p_function','lexAndSyn.py',177),
  ('function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE','function',9,'p_function','lexAndSyn.py',178),
  ('function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE','function',10,'p_function','lexAndSyn.py',179),
  ('function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE function','function',8,'p_function','lexAndSyn.py',180),
  ('function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function','function',10,'p_function','lexAndSyn.py',181),
  ('function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function','function',10,'p_function','lexAndSyn.py',182),
  ('function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function','function',11,'p_function','lexAndSyn.py',183),
  ('bloqueAux -> estatuto','bloqueAux',1,'p_bloqueAux','lexAndSyn.py',191),
  ('bloqueAux -> estatuto bloqueAux','bloqueAux',2,'p_bloqueAux','lexAndSyn.py',192),
  ('while -> WHILE LPAREN expresion RPAREN bloque','while',5,'p_while','lexAndSyn.py',196),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','lexAndSyn.py',200),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexAndSyn.py',201),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','lexAndSyn.py',202),
  ('estatuto -> while','estatuto',1,'p_estatuto','lexAndSyn.py',203),
  ('estatuto -> comparacion','estatuto',1,'p_estatuto','lexAndSyn.py',204),
  ('asignacion -> ID EQUAL expresion SEMICOLON','asignacion',4,'p_asignacion','lexAndSyn.py',208),
  ('comparacion -> ID DOUBLEEQUAL expresion SEMICOLON','comparacion',4,'p_comparacion','lexAndSyn.py',213),
  ('condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON','condicion',6,'p_condicion','lexAndSyn.py',217),
  ('condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON','condicion',8,'p_condicion','lexAndSyn.py',218),
  ('escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON','escritura',5,'p_escritura','lexAndSyn.py',222),
  ('escrituraAux -> expresion','escrituraAux',1,'p_escrituraAux','lexAndSyn.py',226),
  ('escrituraAux -> CTE_STRING','escrituraAux',1,'p_escrituraAux','lexAndSyn.py',227),
  ('escrituraAux -> expresion COMA escrituraAux','escrituraAux',3,'p_escrituraAux','lexAndSyn.py',228),
  ('escrituraAux -> CTE_STRING COMA escrituraAux','escrituraAux',3,'p_escrituraAux','lexAndSyn.py',229),
  ('expresion -> exp','expresion',1,'p_expresion','lexAndSyn.py',233),
  ('expresion -> exp LOWERTHAN exp','expresion',3,'p_expresion','lexAndSyn.py',234),
  ('expresion -> exp MORETHAN exp','expresion',3,'p_expresion','lexAndSyn.py',235),
  ('expresion -> exp DIFFERENT exp','expresion',3,'p_expresion','lexAndSyn.py',236),
  ('exp -> termino','exp',1,'p_exp','lexAndSyn.py',240),
  ('exp -> termino PLUS exp','exp',3,'p_exp','lexAndSyn.py',241),
  ('exp -> termino MINUS exp','exp',3,'p_exp','lexAndSyn.py',242),
  ('termino -> factor','termino',1,'p_termino','lexAndSyn.py',246),
  ('termino -> factor TIMES termino','termino',3,'p_termino','lexAndSyn.py',247),
  ('termino -> factor DIVIDE termino','termino',3,'p_termino','lexAndSyn.py',248),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','lexAndSyn.py',252),
  ('factor -> factorAux','factor',1,'p_factor','lexAndSyn.py',253),
  ('factorAux -> PLUS var_cte','factorAux',2,'p_factorAux','lexAndSyn.py',257),
  ('factorAux -> MINUS var_cte','factorAux',2,'p_factorAux','lexAndSyn.py',258),
  ('factorAux -> var_cte','factorAux',1,'p_factorAux','lexAndSyn.py',259),
  ('var_cte -> ID','var_cte',1,'p_var_cte','lexAndSyn.py',263),
  ('var_cte -> CTE_I','var_cte',1,'p_var_cte','lexAndSyn.py',264),
  ('var_cte -> CTE_F','var_cte',1,'p_var_cte','lexAndSyn.py',265),
]
