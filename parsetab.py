
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHAR COLON COMA CTE_F CTE_I CTE_STRING DIFFERENT DIVIDE ELSE EQUAL FLOAT FOR FUNCTION ID IF INT LBRACE LOWERTHAN LPAREN MAIN MINUS MORETHAN PLUS PRINT PROGRAM RBRACE RPAREN SEMICOLON TIMES VAR WHILEprogram : PROGRAM ID COLON vars main function\n               | PROGRAM ID COLON main function\n               | PROGRAM ID COLON vars main\n               | PROGRAM ID COLON main\n    main : MAIN LPAREN RPAREN LBRACE bloqueAux RBRACE\n            | MAIN LPAREN RPAREN LBRACE vars bloqueAux RBRACE\n    vars : VAR varAux1\n    varAux1 : tipo varAux2 SEMICOLON\n               | tipo varAux2 SEMICOLON varAux1\n    varAux2 : ID\n               | ID COMA varAux2\n    tipo : INT\n            | FLOAT\n            | CHAR\n    bloque : LBRACE RBRACE\n              | LBRACE bloqueAux RBRACE\n    function : FUNCTION ID LPAREN RPAREN LBRACE RBRACE\n              | FUNCTION ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE\n              | FUNCTION ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE\n              | FUNCTION ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE\n              | FUNCTION ID LPAREN RPAREN LBRACE RBRACE function\n              | FUNCTION ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function\n              | FUNCTION ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function\n              | FUNCTION ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function\n    bloqueAux : estatuto\n                 | estatuto bloqueAux\n    while : WHILE LPAREN expresion RPAREN bloque\n    estatuto : asignacion\n                | condicion\n                | escritura\n                | while\n                | comparacion\n    asignacion : ID EQUAL expresion SEMICOLON\n    comparacion : ID EQUAL EQUAL expresion SEMICOLON\n    condicion : IF LPAREN expresion RPAREN bloque SEMICOLON\n                 | IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON\n    escritura : PRINT LPAREN escrituraAux RPAREN SEMICOLON\n    escrituraAux : expresion\n                    | CTE_STRING\n                    | expresion COMA escrituraAux\n                    | CTE_STRING COMA escrituraAux\n    expresion : exp\n                 | exp LOWERTHAN exp\n                 | exp MORETHAN exp\n                 | exp DIFFERENT exp\n    exp : termino\n           | termino PLUS exp\n           | termino MINUS exp\n    termino : factor\n               | factor TIMES termino\n               | factor DIVIDE termino\n    factor : LPAREN expresion RPAREN\n              | factorAux\n    factorAux : PLUS var_cte\n                 | MINUS var_cte\n                 | var_cte\n    var_cte : ID\n               | CTE_I\n               | CTE_F\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,9,10,18,45,52,55,74,95,97,113,114,115,120,],[0,-4,-3,-2,-1,-5,-17,-6,-21,-18,-19,-22,-20,-23,-24,]),'ID':([2,11,12,13,14,15,16,24,25,26,29,32,33,34,35,36,37,38,48,49,50,51,53,54,57,61,62,64,76,79,80,81,82,83,84,87,88,92,93,98,108,109,112,116,118,122,123,],[3,19,-7,21,-12,-13,-14,-8,21,39,-9,39,39,-28,-29,-30,-31,-32,56,56,56,56,39,39,56,56,56,56,39,-33,56,56,56,56,56,56,56,56,56,-34,39,-37,-27,-35,-15,-16,-36,]),'COLON':([3,],[4,]),'VAR':([4,23,26,43,54,],[7,7,7,7,7,]),'MAIN':([4,5,12,24,29,],[8,8,-7,-8,-9,]),'FUNCTION':([6,9,45,52,55,95,97,114,],[11,11,-5,11,-6,11,11,11,]),'INT':([7,24,],[14,14,]),'FLOAT':([7,24,],[15,15,]),'CHAR':([7,24,],[16,16,]),'LPAREN':([8,19,40,41,42,48,49,50,51,57,64,80,81,82,83,84,87,88,92,93,],[17,23,49,50,51,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'RPAREN':([12,17,23,24,28,29,56,59,60,63,65,66,67,68,69,70,71,72,73,85,86,89,99,100,101,102,103,104,105,106,110,111,],[-7,22,27,-8,44,-9,-57,-42,-46,-49,-53,-56,-58,-59,90,91,-38,-39,94,-54,-55,106,-43,-44,-45,-47,-48,-50,-51,-52,-40,-41,]),'IF':([12,24,26,29,32,33,34,35,36,37,38,53,54,76,79,98,108,109,112,116,118,122,123,],[-7,-8,40,-9,40,40,-28,-29,-30,-31,-32,40,40,40,-33,-34,40,-37,-27,-35,-15,-16,-36,]),'PRINT':([12,24,26,29,32,33,34,35,36,37,38,53,54,76,79,98,108,109,112,116,118,122,123,],[-7,-8,41,-9,41,41,-28,-29,-30,-31,-32,41,41,41,-33,-34,41,-37,-27,-35,-15,-16,-36,]),'WHILE':([12,24,26,29,32,33,34,35,36,37,38,53,54,76,79,98,108,109,112,116,118,122,123,],[-7,-8,42,-9,42,42,-28,-29,-30,-31,-32,42,42,42,-33,-34,42,-37,-27,-35,-15,-16,-36,]),'SEMICOLON':([20,21,30,56,58,59,60,63,65,66,67,68,78,85,86,91,99,100,101,102,103,104,105,106,107,118,121,122,],[24,-10,-11,-57,79,-42,-46,-49,-53,-56,-58,-59,98,-54,-55,109,-43,-44,-45,-47,-48,-50,-51,-52,116,-15,123,-16,]),'COMA':([21,56,59,60,63,65,66,67,68,71,72,85,86,99,100,101,102,103,104,105,106,],[25,-57,-42,-46,-49,-53,-56,-58,-59,92,93,-54,-55,-43,-44,-45,-47,-48,-50,-51,-52,]),'LBRACE':([22,27,44,90,94,117,],[26,43,54,108,108,108,]),'RBRACE':([31,33,34,35,36,37,38,43,46,47,75,77,79,96,98,108,109,112,116,118,119,122,123,],[45,-25,-28,-29,-30,-31,-32,52,55,-26,95,97,-33,114,-34,118,-37,-27,-35,-15,122,-16,-36,]),'EQUAL':([39,48,],[48,57,]),'PLUS':([48,49,50,51,56,57,60,63,64,65,66,67,68,80,81,82,83,84,85,86,87,88,92,93,104,105,106,],[61,61,61,61,-57,61,83,-49,61,-53,-56,-58,-59,61,61,61,61,61,-54,-55,61,61,61,61,-50,-51,-52,]),'MINUS':([48,49,50,51,56,57,60,63,64,65,66,67,68,80,81,82,83,84,85,86,87,88,92,93,104,105,106,],[62,62,62,62,-57,62,84,-49,62,-53,-56,-58,-59,62,62,62,62,62,-54,-55,62,62,62,62,-50,-51,-52,]),'CTE_I':([48,49,50,51,57,61,62,64,80,81,82,83,84,87,88,92,93,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'CTE_F':([48,49,50,51,57,61,62,64,80,81,82,83,84,87,88,92,93,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'CTE_STRING':([50,92,93,],[72,72,72,]),'TIMES':([56,63,65,66,67,68,85,86,106,],[-57,87,-53,-56,-58,-59,-54,-55,-52,]),'DIVIDE':([56,63,65,66,67,68,85,86,106,],[-57,88,-53,-56,-58,-59,-54,-55,-52,]),'LOWERTHAN':([56,59,60,63,65,66,67,68,85,86,102,103,104,105,106,],[-57,80,-46,-49,-53,-56,-58,-59,-54,-55,-47,-48,-50,-51,-52,]),'MORETHAN':([56,59,60,63,65,66,67,68,85,86,102,103,104,105,106,],[-57,81,-46,-49,-53,-56,-58,-59,-54,-55,-47,-48,-50,-51,-52,]),'DIFFERENT':([56,59,60,63,65,66,67,68,85,86,102,103,104,105,106,],[-57,82,-46,-49,-53,-56,-58,-59,-54,-55,-47,-48,-50,-51,-52,]),'ELSE':([107,118,122,],[117,-15,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,23,26,43,54,],[5,28,32,53,76,]),'main':([4,5,],[6,9,]),'function':([6,9,52,95,97,114,],[10,18,74,113,115,120,]),'varAux1':([7,24,],[12,29,]),'tipo':([7,24,],[13,13,]),'varAux2':([13,25,],[20,30,]),'bloqueAux':([26,32,33,53,54,76,108,],[31,46,47,75,77,96,119,]),'estatuto':([26,32,33,53,54,76,108,],[33,33,33,33,33,33,33,]),'asignacion':([26,32,33,53,54,76,108,],[34,34,34,34,34,34,34,]),'condicion':([26,32,33,53,54,76,108,],[35,35,35,35,35,35,35,]),'escritura':([26,32,33,53,54,76,108,],[36,36,36,36,36,36,36,]),'while':([26,32,33,53,54,76,108,],[37,37,37,37,37,37,37,]),'comparacion':([26,32,33,53,54,76,108,],[38,38,38,38,38,38,38,]),'expresion':([48,49,50,51,57,64,92,93,],[58,69,71,73,78,89,71,71,]),'exp':([48,49,50,51,57,64,80,81,82,83,84,92,93,],[59,59,59,59,59,59,99,100,101,102,103,59,59,]),'termino':([48,49,50,51,57,64,80,81,82,83,84,87,88,92,93,],[60,60,60,60,60,60,60,60,60,60,60,104,105,60,60,]),'factor':([48,49,50,51,57,64,80,81,82,83,84,87,88,92,93,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'factorAux':([48,49,50,51,57,64,80,81,82,83,84,87,88,92,93,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'var_cte':([48,49,50,51,57,61,62,64,80,81,82,83,84,87,88,92,93,],[66,66,66,66,66,85,86,66,66,66,66,66,66,66,66,66,66,]),'escrituraAux':([50,92,93,],[70,110,111,]),'bloque':([90,94,117,],[107,112,121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID COLON vars main function','program',6,'p_program','lexAndSyn.py',94),
  ('program -> PROGRAM ID COLON main function','program',5,'p_program','lexAndSyn.py',95),
  ('program -> PROGRAM ID COLON vars main','program',5,'p_program','lexAndSyn.py',96),
  ('program -> PROGRAM ID COLON main','program',4,'p_program','lexAndSyn.py',97),
  ('main -> MAIN LPAREN RPAREN LBRACE bloqueAux RBRACE','main',6,'p_main','lexAndSyn.py',101),
  ('main -> MAIN LPAREN RPAREN LBRACE vars bloqueAux RBRACE','main',7,'p_main','lexAndSyn.py',102),
  ('vars -> VAR varAux1','vars',2,'p_vars','lexAndSyn.py',106),
  ('varAux1 -> tipo varAux2 SEMICOLON','varAux1',3,'p_varAux1','lexAndSyn.py',110),
  ('varAux1 -> tipo varAux2 SEMICOLON varAux1','varAux1',4,'p_varAux1','lexAndSyn.py',111),
  ('varAux2 -> ID','varAux2',1,'p_varAux2','lexAndSyn.py',115),
  ('varAux2 -> ID COMA varAux2','varAux2',3,'p_varAux2','lexAndSyn.py',116),
  ('tipo -> INT','tipo',1,'p_tipo','lexAndSyn.py',120),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lexAndSyn.py',121),
  ('tipo -> CHAR','tipo',1,'p_tipo','lexAndSyn.py',122),
  ('bloque -> LBRACE RBRACE','bloque',2,'p_bloque','lexAndSyn.py',126),
  ('bloque -> LBRACE bloqueAux RBRACE','bloque',3,'p_bloque','lexAndSyn.py',127),
  ('function -> FUNCTION ID LPAREN RPAREN LBRACE RBRACE','function',6,'p_function','lexAndSyn.py',131),
  ('function -> FUNCTION ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE','function',8,'p_function','lexAndSyn.py',132),
  ('function -> FUNCTION ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE','function',8,'p_function','lexAndSyn.py',133),
  ('function -> FUNCTION ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE','function',9,'p_function','lexAndSyn.py',134),
  ('function -> FUNCTION ID LPAREN RPAREN LBRACE RBRACE function','function',7,'p_function','lexAndSyn.py',135),
  ('function -> FUNCTION ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function','function',9,'p_function','lexAndSyn.py',136),
  ('function -> FUNCTION ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function','function',9,'p_function','lexAndSyn.py',137),
  ('function -> FUNCTION ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function','function',10,'p_function','lexAndSyn.py',138),
  ('bloqueAux -> estatuto','bloqueAux',1,'p_bloqueAux','lexAndSyn.py',142),
  ('bloqueAux -> estatuto bloqueAux','bloqueAux',2,'p_bloqueAux','lexAndSyn.py',143),
  ('while -> WHILE LPAREN expresion RPAREN bloque','while',5,'p_while','lexAndSyn.py',147),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','lexAndSyn.py',151),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexAndSyn.py',152),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','lexAndSyn.py',153),
  ('estatuto -> while','estatuto',1,'p_estatuto','lexAndSyn.py',154),
  ('estatuto -> comparacion','estatuto',1,'p_estatuto','lexAndSyn.py',155),
  ('asignacion -> ID EQUAL expresion SEMICOLON','asignacion',4,'p_asignacion','lexAndSyn.py',159),
  ('comparacion -> ID EQUAL EQUAL expresion SEMICOLON','comparacion',5,'p_comparacion','lexAndSyn.py',163),
  ('condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON','condicion',6,'p_condicion','lexAndSyn.py',167),
  ('condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON','condicion',8,'p_condicion','lexAndSyn.py',168),
  ('escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON','escritura',5,'p_escritura','lexAndSyn.py',172),
  ('escrituraAux -> expresion','escrituraAux',1,'p_escrituraAux','lexAndSyn.py',176),
  ('escrituraAux -> CTE_STRING','escrituraAux',1,'p_escrituraAux','lexAndSyn.py',177),
  ('escrituraAux -> expresion COMA escrituraAux','escrituraAux',3,'p_escrituraAux','lexAndSyn.py',178),
  ('escrituraAux -> CTE_STRING COMA escrituraAux','escrituraAux',3,'p_escrituraAux','lexAndSyn.py',179),
  ('expresion -> exp','expresion',1,'p_expresion','lexAndSyn.py',183),
  ('expresion -> exp LOWERTHAN exp','expresion',3,'p_expresion','lexAndSyn.py',184),
  ('expresion -> exp MORETHAN exp','expresion',3,'p_expresion','lexAndSyn.py',185),
  ('expresion -> exp DIFFERENT exp','expresion',3,'p_expresion','lexAndSyn.py',186),
  ('exp -> termino','exp',1,'p_exp','lexAndSyn.py',190),
  ('exp -> termino PLUS exp','exp',3,'p_exp','lexAndSyn.py',191),
  ('exp -> termino MINUS exp','exp',3,'p_exp','lexAndSyn.py',192),
  ('termino -> factor','termino',1,'p_termino','lexAndSyn.py',196),
  ('termino -> factor TIMES termino','termino',3,'p_termino','lexAndSyn.py',197),
  ('termino -> factor DIVIDE termino','termino',3,'p_termino','lexAndSyn.py',198),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','lexAndSyn.py',202),
  ('factor -> factorAux','factor',1,'p_factor','lexAndSyn.py',203),
  ('factorAux -> PLUS var_cte','factorAux',2,'p_factorAux','lexAndSyn.py',207),
  ('factorAux -> MINUS var_cte','factorAux',2,'p_factorAux','lexAndSyn.py',208),
  ('factorAux -> var_cte','factorAux',1,'p_factorAux','lexAndSyn.py',209),
  ('var_cte -> ID','var_cte',1,'p_var_cte','lexAndSyn.py',213),
  ('var_cte -> CTE_I','var_cte',1,'p_var_cte','lexAndSyn.py',214),
  ('var_cte -> CTE_F','var_cte',1,'p_var_cte','lexAndSyn.py',215),
]
