
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COLON COMA CTE_F CTE_I CTE_STRING DIFFERENT DIVIDE DOUBLEEQUAL ELSE EQUAL FLOAT FOR FUNCTION ID IF INT LBRACE LOWERTHAN LPAREN MAIN MINUS MORETHAN OR PLUS PRINT PROGRAM RBRACE RPAREN SEMICOLON TIMES VAR VOID WHILEprogram : PROGRAM ID COLON vars main function\n               | PROGRAM ID COLON main function\n               | PROGRAM ID COLON vars main\n               | PROGRAM ID COLON main\n    main : nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE\n            | nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE\n     nomMain : MAIN\n    vars : VAR varAux1\n    varAux1 : tipo varAux2 SEMICOLON\n               | tipo varAux2 SEMICOLON varAux1\n    varAux2 : ID\n            | ID COMA varAux2\n    tipo : INT\n            | FLOAT\n            | CHAR\n    tipoFunc : INT\n            | FLOAT\n            | CHAR\n            | VOID\n    bloque : LBRACE RBRACE\n              | LBRACE bloqueAux RBRACE\n    function : FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE\n              | FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE\n              | FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE function\n              | FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE function\n              | FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE\n              | FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE\n              | FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE function\n              | FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE function\n    param : tipo ID\n             | tipo ID COMA param\n    nomFunc : ID\n    bloqueAux : estatuto\n                 | estatuto bloqueAux\n    while : WHILE LPAREN expresion RPAREN bloque\n    estatuto : asignacion\n                | condicion\n                | escritura\n                | while\n                | comparacion\n    asignacion : ID push_id EQUAL push_poper expresion SEMICOLON\n    comparacion : ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON\n    condicion : IF LPAREN expresion RPAREN bloque SEMICOLON\n                 | IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON\n    escritura : PRINT LPAREN escrituraAux RPAREN SEMICOLON\n    escrituraAux : expresion\n                    | CTE_STRING\n                    | expresion COMA escrituraAux\n                    | CTE_STRING COMA escrituraAux\n    expresion : exp\n                 | exp LOWERTHAN push_poper exp\n                 | exp MORETHAN push_poper exp\n                 | exp DIFFERENT push_poper exp\n    exp : termino\n           | termino PLUS push_poper exp\n           | termino MINUS push_poper exp\n    quad_Fact :termino : factor\n               | factor TIMES push_poper termino\n               | factor DIVIDE push_poper termino\n    factor : LPAREN expresion RPAREN\n              | factorAux\n    factorAux : PLUS push_poper var_cte\n                 | MINUS push_poper var_cte\n                 | var_cte\n    push_id :push_cte :push_poper :var_cte : ID push_id\n               | CTE_I push_cte\n               | CTE_F push_cte\n    '
    
_lr_action_items = {'CTE_STRING':([49,87,88,],[65,65,65,]),'VOID':([18,],[24,]),'EQUAL':([37,51,],[-66,74,]),'CHAR':([8,18,29,47,103,],[12,26,12,12,12,]),'VAR':([4,28,77,102,],[8,8,8,8,]),'WHILE':([16,28,29,33,35,36,39,42,43,44,45,101,113,119,121,125,134,135,136,138,143,147,],[-8,40,-9,40,40,-37,-36,-39,-40,-38,-10,40,-45,40,-35,40,-42,-41,-20,-43,-21,-44,]),'PROGRAM':([0,],[2,]),'PRINT':([16,28,29,33,35,36,39,42,43,44,45,101,113,119,121,125,134,135,136,138,143,147,],[-8,34,-9,34,34,-37,-36,-39,-40,-38,-10,34,-45,34,-35,34,-42,-41,-20,-43,-21,-44,]),'MORETHAN':([59,60,63,64,67,69,71,72,86,89,91,106,107,112,127,128,129,130,],[-65,-54,-58,-67,-67,-66,93,-62,-71,-70,-69,-64,-63,-61,-55,-56,-60,-59,]),'MINUS':([49,52,53,59,60,63,64,67,68,69,72,73,74,80,81,84,85,86,87,88,89,91,93,94,95,96,97,104,105,106,107,108,109,112,114,115,116,129,130,],[61,61,61,-65,81,-58,-67,-67,61,-66,-62,-68,-68,-68,-68,-68,-68,-71,61,61,-70,-69,-68,-68,-68,61,61,61,61,-64,-63,61,61,-61,61,61,61,-60,-59,]),'DIVIDE':([59,63,64,67,69,72,86,89,91,106,107,112,],[-65,84,-67,-67,-66,-62,-71,-70,-69,-64,-63,-61,]),'RPAREN':([11,47,56,59,60,63,64,65,66,67,69,70,71,72,75,76,79,86,89,90,91,106,107,110,111,112,126,127,128,129,130,131,132,133,],[20,55,78,-65,-54,-58,-67,-47,-46,-67,-66,92,-50,-62,98,99,-30,-71,-70,112,-69,-64,-63,-49,-48,-61,-31,-55,-56,-60,-59,-52,-53,-51,]),'SEMICOLON':([21,22,46,59,60,63,64,67,69,71,72,86,89,91,92,106,107,112,117,118,120,127,128,129,130,131,132,133,136,143,144,],[29,-11,-12,-65,-54,-58,-67,-67,-66,-50,-62,-71,-70,-69,113,-64,-63,-61,134,135,138,-55,-56,-60,-59,-52,-53,-51,-20,-21,147,]),'LOWERTHAN':([59,60,63,64,67,69,71,72,86,89,91,106,107,112,127,128,129,130,],[-65,-54,-58,-67,-67,-66,95,-62,-71,-70,-69,-64,-63,-61,-55,-56,-60,-59,]),'COLON':([3,],[4,]),'CTE_I':([49,52,53,61,62,68,73,74,80,81,82,83,84,85,87,88,93,94,95,96,97,104,105,108,109,114,115,116,],[67,67,67,-68,-68,67,-68,-68,-68,-68,67,67,-68,-68,67,67,-68,-68,-68,67,67,67,67,67,67,67,67,67,]),'CTE_F':([49,52,53,61,62,68,73,74,80,81,82,83,84,85,87,88,93,94,95,96,97,104,105,108,109,114,115,116,],[64,64,64,-68,-68,64,-68,-68,-68,-68,64,64,-68,-68,64,64,-68,-68,-68,64,64,64,64,64,64,64,64,64,]),'PLUS':([49,52,53,59,60,63,64,67,68,69,72,73,74,80,81,84,85,86,87,88,89,91,93,94,95,96,97,104,105,106,107,108,109,112,114,115,116,129,130,],[62,62,62,-65,80,-58,-67,-67,62,-66,-62,-68,-68,-68,-68,-68,-68,-71,62,62,-70,-69,-68,-68,-68,62,62,62,62,-64,-63,62,62,-61,62,62,62,-60,-59,]),'$end':([1,9,10,17,19,54,58,100,122,124,140,141,145,146,148,],[0,-4,-3,-2,-1,-5,-6,-22,-24,-26,-23,-28,-25,-27,-29,]),'FUNCTION':([9,10,54,58,100,124,140,146,],[18,18,-5,-6,18,18,18,18,]),'DIFFERENT':([59,60,63,64,67,69,71,72,86,89,91,106,107,112,127,128,129,130,],[-65,-54,-58,-67,-67,-66,94,-62,-71,-70,-69,-64,-63,-61,-55,-56,-60,-59,]),'RBRACE':([35,36,39,41,42,43,44,48,50,77,102,113,119,121,123,134,135,136,137,138,142,143,147,],[-33,-37,-36,54,-39,-40,-38,58,-34,100,124,-45,136,-35,140,-42,-41,-20,143,-43,146,-21,-44,]),'DOUBLEEQUAL':([37,51,],[-66,73,]),'TIMES':([59,63,64,67,69,72,86,89,91,106,107,112,],[-65,85,-67,-67,-66,-62,-71,-70,-69,-64,-63,-61,]),'LPAREN':([6,7,31,32,34,38,40,49,52,53,68,73,74,80,81,84,85,87,88,93,94,95,96,97,104,105,108,109,114,115,116,],[-7,11,47,-32,49,52,53,68,68,68,68,-68,-68,-68,-68,-68,-68,68,68,-68,-68,-68,68,68,68,68,68,68,68,68,68,]),'COMA':([22,59,60,63,64,65,66,67,69,71,72,79,86,89,91,106,107,112,127,128,129,130,131,132,133,],[30,-65,-54,-58,-67,87,88,-67,-66,-50,-62,103,-71,-70,-69,-64,-63,-61,-55,-56,-60,-59,-52,-53,-51,]),'ELSE':([120,136,143,],[139,-20,-21,]),'ID':([2,12,13,14,15,16,23,24,25,26,27,28,29,30,33,35,36,39,42,43,44,45,49,52,53,57,61,62,68,73,74,80,81,82,83,84,85,87,88,93,94,95,96,97,101,104,105,108,109,113,114,115,116,119,121,125,134,135,136,138,143,147,],[3,-15,22,-13,-14,-8,-16,-19,-17,-18,32,37,-9,22,37,37,-37,-36,-39,-40,-38,-10,69,69,69,79,-68,-68,69,-68,-68,-68,-68,69,69,-68,-68,69,69,-68,-68,-68,69,69,37,69,69,69,69,-45,69,69,69,37,-35,37,-42,-41,-20,-43,-21,-44,]),'IF':([16,28,29,33,35,36,39,42,43,44,45,101,113,119,121,125,134,135,136,138,143,147,],[-8,38,-9,38,38,-37,-36,-39,-40,-38,-10,38,-45,38,-35,38,-42,-41,-20,-43,-21,-44,]),'LBRACE':([20,55,78,98,99,139,],[28,77,102,119,119,119,]),'INT':([8,18,29,47,103,],[14,23,14,14,14,]),'FLOAT':([8,18,29,47,103,],[15,25,15,15,15,]),'MAIN':([4,5,16,29,45,],[6,6,-8,-9,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([4,28,77,102,],[5,33,101,125,]),'var_cte':([49,52,53,68,82,83,87,88,96,97,104,105,108,109,114,115,116,],[59,59,59,59,106,107,59,59,59,59,59,59,59,59,59,59,59,]),'nomMain':([4,5,],[7,7,]),'termino':([49,52,53,68,87,88,96,97,104,105,108,109,114,115,116,],[60,60,60,60,60,60,60,60,60,60,129,130,60,60,60,]),'tipoFunc':([18,],[27,]),'bloque':([98,99,139,],[120,121,144,]),'push_id':([37,69,],[51,91,]),'tipo':([8,29,47,103,],[13,13,57,57,]),'estatuto':([28,33,35,101,119,125,],[35,35,35,35,35,35,]),'param':([47,103,],[56,126,]),'varAux2':([13,30,],[21,46,]),'program':([0,],[1,]),'varAux1':([8,29,],[16,45,]),'factor':([49,52,53,68,87,88,96,97,104,105,108,109,114,115,116,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'main':([4,5,],[9,10,]),'function':([9,10,100,124,140,146,],[17,19,122,141,145,148,]),'escrituraAux':([49,87,88,],[70,110,111,]),'push_poper':([61,62,73,74,80,81,84,85,93,94,95,],[82,83,96,97,104,105,108,109,114,115,116,]),'condicion':([28,33,35,101,119,125,],[36,36,36,36,36,36,]),'push_cte':([64,67,],[86,89,]),'expresion':([49,52,53,68,87,88,96,97,],[66,75,76,90,66,66,117,118,]),'asignacion':([28,33,35,101,119,125,],[39,39,39,39,39,39,]),'bloqueAux':([28,33,35,101,119,125,],[41,48,50,123,137,142,]),'while':([28,33,35,101,119,125,],[42,42,42,42,42,42,]),'exp':([49,52,53,68,87,88,96,97,104,105,114,115,116,],[71,71,71,71,71,71,71,71,127,128,131,132,133,]),'nomFunc':([27,],[31,]),'factorAux':([49,52,53,68,87,88,96,97,104,105,108,109,114,115,116,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'comparacion':([28,33,35,101,119,125,],[43,43,43,43,43,43,]),'escritura':([28,33,35,101,119,125,],[44,44,44,44,44,44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID COLON vars main function','program',6,'p_program','lexAndSyn.py',117),
  ('program -> PROGRAM ID COLON main function','program',5,'p_program','lexAndSyn.py',118),
  ('program -> PROGRAM ID COLON vars main','program',5,'p_program','lexAndSyn.py',119),
  ('program -> PROGRAM ID COLON main','program',4,'p_program','lexAndSyn.py',120),
  ('main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE','main',6,'p_main','lexAndSyn.py',126),
  ('main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE','main',7,'p_main','lexAndSyn.py',127),
  ('nomMain -> MAIN','nomMain',1,'p_nomMain','lexAndSyn.py',131),
  ('vars -> VAR varAux1','vars',2,'p_vars','lexAndSyn.py',140),
  ('varAux1 -> tipo varAux2 SEMICOLON','varAux1',3,'p_varAux1','lexAndSyn.py',144),
  ('varAux1 -> tipo varAux2 SEMICOLON varAux1','varAux1',4,'p_varAux1','lexAndSyn.py',145),
  ('varAux2 -> ID','varAux2',1,'p_varAux2','lexAndSyn.py',149),
  ('varAux2 -> ID COMA varAux2','varAux2',3,'p_varAux2','lexAndSyn.py',150),
  ('tipo -> INT','tipo',1,'p_tipo','lexAndSyn.py',168),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lexAndSyn.py',169),
  ('tipo -> CHAR','tipo',1,'p_tipo','lexAndSyn.py',170),
  ('tipoFunc -> INT','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',175),
  ('tipoFunc -> FLOAT','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',176),
  ('tipoFunc -> CHAR','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',177),
  ('tipoFunc -> VOID','tipoFunc',1,'p_tipoFunc','lexAndSyn.py',178),
  ('bloque -> LBRACE RBRACE','bloque',2,'p_bloque','lexAndSyn.py',183),
  ('bloque -> LBRACE bloqueAux RBRACE','bloque',3,'p_bloque','lexAndSyn.py',184),
  ('function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE','function',7,'p_function','lexAndSyn.py',188),
  ('function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE','function',9,'p_function','lexAndSyn.py',189),
  ('function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE function','function',8,'p_function','lexAndSyn.py',190),
  ('function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE function','function',10,'p_function','lexAndSyn.py',191),
  ('function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE','function',8,'p_function','lexAndSyn.py',192),
  ('function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE','function',10,'p_function','lexAndSyn.py',193),
  ('function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE function','function',9,'p_function','lexAndSyn.py',194),
  ('function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE function','function',11,'p_function','lexAndSyn.py',195),
  ('param -> tipo ID','param',2,'p_param','lexAndSyn.py',199),
  ('param -> tipo ID COMA param','param',4,'p_param','lexAndSyn.py',200),
  ('nomFunc -> ID','nomFunc',1,'p_nomFunc','lexAndSyn.py',205),
  ('bloqueAux -> estatuto','bloqueAux',1,'p_bloqueAux','lexAndSyn.py',214),
  ('bloqueAux -> estatuto bloqueAux','bloqueAux',2,'p_bloqueAux','lexAndSyn.py',215),
  ('while -> WHILE LPAREN expresion RPAREN bloque','while',5,'p_while','lexAndSyn.py',219),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','lexAndSyn.py',223),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexAndSyn.py',224),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','lexAndSyn.py',225),
  ('estatuto -> while','estatuto',1,'p_estatuto','lexAndSyn.py',226),
  ('estatuto -> comparacion','estatuto',1,'p_estatuto','lexAndSyn.py',227),
  ('asignacion -> ID push_id EQUAL push_poper expresion SEMICOLON','asignacion',6,'p_asignacion','lexAndSyn.py',231),
  ('comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON','comparacion',6,'p_comparacion','lexAndSyn.py',236),
  ('condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON','condicion',6,'p_condicion','lexAndSyn.py',240),
  ('condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON','condicion',8,'p_condicion','lexAndSyn.py',241),
  ('escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON','escritura',5,'p_escritura','lexAndSyn.py',245),
  ('escrituraAux -> expresion','escrituraAux',1,'p_escrituraAux','lexAndSyn.py',249),
  ('escrituraAux -> CTE_STRING','escrituraAux',1,'p_escrituraAux','lexAndSyn.py',250),
  ('escrituraAux -> expresion COMA escrituraAux','escrituraAux',3,'p_escrituraAux','lexAndSyn.py',251),
  ('escrituraAux -> CTE_STRING COMA escrituraAux','escrituraAux',3,'p_escrituraAux','lexAndSyn.py',252),
  ('expresion -> exp','expresion',1,'p_expresion','lexAndSyn.py',256),
  ('expresion -> exp LOWERTHAN push_poper exp','expresion',4,'p_expresion','lexAndSyn.py',257),
  ('expresion -> exp MORETHAN push_poper exp','expresion',4,'p_expresion','lexAndSyn.py',258),
  ('expresion -> exp DIFFERENT push_poper exp','expresion',4,'p_expresion','lexAndSyn.py',259),
  ('exp -> termino','exp',1,'p_exp','lexAndSyn.py',263),
  ('exp -> termino PLUS push_poper exp','exp',4,'p_exp','lexAndSyn.py',264),
  ('exp -> termino MINUS push_poper exp','exp',4,'p_exp','lexAndSyn.py',265),
  ('quad_Fact -> <empty>','quad_Fact',0,'p_quad_Fact','lexAndSyn.py',269),
  ('termino -> factor','termino',1,'p_termino','lexAndSyn.py',273),
  ('termino -> factor TIMES push_poper termino','termino',4,'p_termino','lexAndSyn.py',274),
  ('termino -> factor DIVIDE push_poper termino','termino',4,'p_termino','lexAndSyn.py',275),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','lexAndSyn.py',279),
  ('factor -> factorAux','factor',1,'p_factor','lexAndSyn.py',280),
  ('factorAux -> PLUS push_poper var_cte','factorAux',3,'p_factorAux','lexAndSyn.py',284),
  ('factorAux -> MINUS push_poper var_cte','factorAux',3,'p_factorAux','lexAndSyn.py',285),
  ('factorAux -> var_cte','factorAux',1,'p_factorAux','lexAndSyn.py',286),
  ('push_id -> <empty>','push_id',0,'p_push_id','lexAndSyn.py',290),
  ('push_cte -> <empty>','push_cte',0,'p_push_cte','lexAndSyn.py',295),
  ('push_poper -> <empty>','push_poper',0,'p_push_poper','lexAndSyn.py',300),
  ('var_cte -> ID push_id','var_cte',2,'p_var_cte','lexAndSyn.py',305),
  ('var_cte -> CTE_I push_cte','var_cte',2,'p_var_cte','lexAndSyn.py',306),
  ('var_cte -> CTE_F push_cte','var_cte',2,'p_var_cte','lexAndSyn.py',307),
]
