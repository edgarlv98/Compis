Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DETERMINANT
    INVERSA
    AND
    TRANSPUESTA
    OR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID COLON varsGlobal function main endPrograma
Rule 2     program -> PROGRAM ID COLON function main endPrograma
Rule 3     program -> PROGRAM ID COLON varsGlobal main endPrograma
Rule 4     program -> PROGRAM ID COLON main endPrograma
Rule 5     endPrograma -> <empty>
Rule 6     varsGlobal -> VAR varAuxGlobal1
Rule 7     varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON
Rule 8     varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1
Rule 9     varAuxGlobal2 -> ID
Rule 10    varAuxGlobal2 -> ID COMA varAuxGlobal2
Rule 11    varAuxGlobal2 -> ID LCORCH CTE_I RCORCH
Rule 12    varAuxGlobal2 -> ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
Rule 13    varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
Rule 14    varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2
Rule 15    main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
Rule 16    main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
Rule 17    nomMain -> MAIN
Rule 18    vars -> VAR varAux1
Rule 19    varAux1 -> tipo varAux2 SEMICOLON
Rule 20    varAux1 -> tipo varAux2 SEMICOLON varAux1
Rule 21    varAux2 -> ID push_var
Rule 22    varAux2 -> ID push_var COMA varAux2
Rule 23    varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo
Rule 24    varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
Rule 25    varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
Rule 26    varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2
Rule 27    push_var -> <empty>
Rule 28    push_arreglo -> <empty>
Rule 29    push_matriz -> <empty>
Rule 30    tipo -> INT
Rule 31    tipo -> FLOAT
Rule 32    tipo -> CHAR
Rule 33    tipoFunc -> INT
Rule 34    tipoFunc -> FLOAT
Rule 35    tipoFunc -> CHAR
Rule 36    tipoFunc -> VOID
Rule 37    bloque -> LBRACE RBRACE
Rule 38    bloque -> LBRACE bloqueAux RBRACE
Rule 39    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
Rule 40    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
Rule 41    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
Rule 42    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
Rule 43    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
Rule 44    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
Rule 45    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
Rule 46    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
Rule 47    endProc -> <empty>
Rule 48    param -> tipo ID paramAvarTable
Rule 49    param -> tipo ID paramAvarTable COMA param
Rule 50    param -> empty
Rule 51    paramAvarTable -> <empty>
Rule 52    empty -> <empty>
Rule 53    push_function -> <empty>
Rule 54    nomFunc -> ID push_function
Rule 55    bloqueAux -> estatuto
Rule 56    bloqueAux -> estatuto bloqueAux
Rule 57    while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
Rule 58    while1 -> <empty>
Rule 59    while2 -> <empty>
Rule 60    while3 -> <empty>
Rule 61    loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
Rule 62    estatuto -> asignacion
Rule 63    estatuto -> condicion
Rule 64    estatuto -> escritura
Rule 65    estatuto -> while
Rule 66    estatuto -> loopFromDo
Rule 67    estatuto -> comparacion
Rule 68    estatuto -> llamadaAFuncion
Rule 69    estatuto -> lectura
Rule 70    llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
Rule 71    llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
Rule 72    actualizaFuncion -> <empty>
Rule 73    gosub -> <empty>
Rule 74    generarEra -> <empty>
Rule 75    paramFuncion -> ID push_id2
Rule 76    paramFuncion -> ID push_id2 COMA paramFuncion
Rule 77    paramFuncion -> expresion
Rule 78    paramFuncion -> expresion COMA paramFuncion
Rule 79    paramFuncion -> empty
Rule 80    push_id2 -> <empty>
Rule 81    arreglo -> ID push_id LCORCH exp RCORCH ver_dim1
Rule 82    asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON
Rule 83    asignacion -> arreglo EQUAL push_poper expresion create_asign SEMICOLON
Rule 84    push_id_dimensionada -> <empty>
Rule 85    create_asign_dim -> <empty>
Rule 86    ver_dim1 -> <empty>
Rule 87    create_asign -> <empty>
Rule 88    comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
Rule 89    condicion -> IF LPAREN expresion RPAREN cond bloque condFinal
Rule 90    condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
Rule 91    cond -> <empty>
Rule 92    condElse -> <empty>
Rule 93    condFinal -> <empty>
Rule 94    escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
Rule 95    lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
Rule 96    quad_print -> <empty>
Rule 97    escrituraAux -> expresion
Rule 98    escrituraAux -> CTE_STRING push_cte
Rule 99    escrituraAux -> expresion COMA escrituraAux
Rule 100   escrituraAux -> CTE_STRING push_cte COMA escrituraAux
Rule 101   escrituraAux -> llamadaAFuncion
Rule 102   expresion -> exp
Rule 103   expresion -> exp comp exp quad_comp
Rule 104   comp -> LOWERTHAN push_poper
Rule 105   comp -> MORETHAN push_poper
Rule 106   comp -> DIFFERENT push_poper
Rule 107   comp -> DOUBLEEQUAL push_poper
Rule 108   comp -> LOWEREQUAL push_poper
Rule 109   comp -> MOREEQUAL push_poper
Rule 110   quad_comp -> <empty>
Rule 111   exp -> termino quad_term
Rule 112   exp -> termino quad_term exp1
Rule 113   exp1 -> PLUS push_poper exp
Rule 114   exp1 -> MINUS push_poper exp
Rule 115   quad_term -> <empty>
Rule 116   quad_fact -> <empty>
Rule 117   termino -> factor quad_fact
Rule 118   termino -> factor quad_fact termino1
Rule 119   termino1 -> TIMES push_poper termino
Rule 120   termino1 -> DIVIDE push_poper termino
Rule 121   factor -> LPAREN expresion RPAREN
Rule 122   factor -> factorAux
Rule 123   factorAux -> PLUS push_poper var_cte
Rule 124   factorAux -> MINUS push_poper var_cte
Rule 125   factorAux -> var_cte
Rule 126   push_id -> <empty>
Rule 127   push_cte -> <empty>
Rule 128   push_poper -> <empty>
Rule 129   var_cte -> ID push_id
Rule 130   var_cte -> CTE_I push_cte
Rule 131   var_cte -> CTE_F push_cte
Rule 132   var_cte -> CTE_STRING push_cte
Rule 133   var_cte -> arreglo

Terminals, with rules where they appear

AND                  : 
CHAR                 : 32 35
COLON                : 1 2 3 4
COMA                 : 10 12 14 22 24 26 49 76 78 99 100
CTE_F                : 131
CTE_I                : 11 12 13 13 14 14 23 24 25 25 26 26 130
CTE_STRING           : 98 100 132
DETERMINANT          : 
DIFFERENT            : 106
DIVIDE               : 120
DO                   : 61
DOUBLEEQUAL          : 88 107
ELSE                 : 90
EQUAL                : 61 82 83
FLOAT                : 31 34
FROM                 : 61
FUNCTION             : 39 40 41 42 43 44 45 46
ID                   : 1 2 3 4 9 10 11 12 13 14 21 22 23 24 25 26 48 49 54 61 70 71 75 76 81 82 88 95 129
IF                   : 89 90
INPUT                : 95
INT                  : 30 33
INVERSA              : 
LBRACE               : 15 16 37 38 39 40 41 42 43 44 45 46 57 61
LCORCH               : 11 12 13 13 14 14 23 24 25 25 26 26 81
LOWEREQUAL           : 108
LOWERTHAN            : 104
LPAREN               : 15 16 39 40 41 42 43 44 45 46 57 61 61 70 71 89 90 94 95 121
MAIN                 : 17
MINUS                : 114 124
MOREEQUAL            : 109
MORETHAN             : 105
OR                   : 
PLUS                 : 113 123
PRINT                : 94
PROGRAM              : 1 2 3 4
RBRACE               : 15 16 37 38 39 40 41 42 43 44 45 46 57 61
RCORCH               : 11 12 13 13 14 14 23 24 25 25 26 26 81
RPAREN               : 15 16 39 40 41 42 43 44 45 46 57 61 61 70 71 89 90 94 95 121
SEMICOLON            : 7 8 19 20 71 82 83 88 94 95
TIMES                : 119
TO                   : 61
TRANSPUESTA          : 
VAR                  : 6 18
VOID                 : 36
WHILE                : 57
error                : 

Nonterminals, with rules where they appear

actualizaFuncion     : 70 71
arreglo              : 83 133
asignacion           : 62
bloque               : 89 90 90
bloqueAux            : 15 16 38 40 42 44 46 56 57 61
comp                 : 103
comparacion          : 67
cond                 : 89 90
condElse             : 90
condFinal            : 89 90
condicion            : 63
create_asign         : 82 83
create_asign_dim     : 
empty                : 50 79
endProc              : 39 40 41 42 43 44 45 46
endPrograma          : 1 2 3 4
escritura            : 64
escrituraAux         : 94 99 100
estatuto             : 55 56
exp                  : 81 102 103 103 113 114
exp1                 : 112
expresion            : 57 61 61 70 77 78 82 83 88 89 90 97 99 121
factor               : 117 118
factorAux            : 122
function             : 1 2 41 42 45 46
generarEra           : 70 71
gosub                : 70 71
lectura              : 69
llamadaAFuncion      : 68 101
loopFromDo           : 66
main                 : 1 2 3 4
nomFunc              : 39 40 41 42 43 44 45 46
nomMain              : 15 16
param                : 43 44 45 46 49
paramAvarTable       : 48 49
paramFuncion         : 70 71 76 78
program              : 0
push_arreglo         : 23 24
push_cte             : 98 100 130 131 132
push_function        : 54
push_id              : 81 82 88 95 129
push_id2             : 75 76
push_id_dimensionada : 
push_matriz          : 25 26
push_poper           : 82 83 88 94 95 104 105 106 107 108 109 113 114 119 120 123 124
push_var             : 21 22
quad_comp            : 103
quad_fact            : 117 118
quad_print           : 94 95
quad_term            : 111 112
termino              : 111 112 119 120
termino1             : 118
tipo                 : 7 8 19 20 48 49
tipoFunc             : 39 40 41 42 43 44 45 46
varAux1              : 18 20
varAux2              : 19 20 22 24 26
varAuxGlobal1        : 6 8
varAuxGlobal2        : 7 8 10 12 14
var_cte              : 123 124 125
vars                 : 16 40 42 44 46
varsGlobal           : 1 3
ver_dim1             : 81
while                : 65
while1               : 57
while2               : 57
while3               : 57

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID COLON varsGlobal function main endPrograma
    (2) program -> . PROGRAM ID COLON function main endPrograma
    (3) program -> . PROGRAM ID COLON varsGlobal main endPrograma
    (4) program -> . PROGRAM ID COLON main endPrograma

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID COLON varsGlobal function main endPrograma
    (2) program -> PROGRAM . ID COLON function main endPrograma
    (3) program -> PROGRAM . ID COLON varsGlobal main endPrograma
    (4) program -> PROGRAM . ID COLON main endPrograma

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . COLON varsGlobal function main endPrograma
    (2) program -> PROGRAM ID . COLON function main endPrograma
    (3) program -> PROGRAM ID . COLON varsGlobal main endPrograma
    (4) program -> PROGRAM ID . COLON main endPrograma

    COLON           shift and go to state 4


state 4

    (1) program -> PROGRAM ID COLON . varsGlobal function main endPrograma
    (2) program -> PROGRAM ID COLON . function main endPrograma
    (3) program -> PROGRAM ID COLON . varsGlobal main endPrograma
    (4) program -> PROGRAM ID COLON . main endPrograma
    (6) varsGlobal -> . VAR varAuxGlobal1
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (15) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (17) nomMain -> . MAIN

    VAR             shift and go to state 10
    FUNCTION        shift and go to state 5
    MAIN            shift and go to state 11

    function                       shift and go to state 9
    varsGlobal                     shift and go to state 7
    nomMain                        shift and go to state 6
    main                           shift and go to state 8

state 5

    (39) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (33) tipoFunc -> . INT
    (34) tipoFunc -> . FLOAT
    (35) tipoFunc -> . CHAR
    (36) tipoFunc -> . VOID

    INT             shift and go to state 12
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 13

    tipoFunc                       shift and go to state 16

state 6

    (15) main -> nomMain . LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> nomMain . LPAREN RPAREN LBRACE vars bloqueAux RBRACE

    LPAREN          shift and go to state 17


state 7

    (1) program -> PROGRAM ID COLON varsGlobal . function main endPrograma
    (3) program -> PROGRAM ID COLON varsGlobal . main endPrograma
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (15) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (17) nomMain -> . MAIN

    FUNCTION        shift and go to state 5
    MAIN            shift and go to state 11

    function                       shift and go to state 18
    nomMain                        shift and go to state 6
    main                           shift and go to state 19

state 8

    (4) program -> PROGRAM ID COLON main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 20

state 9

    (2) program -> PROGRAM ID COLON function . main endPrograma
    (15) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (17) nomMain -> . MAIN

    MAIN            shift and go to state 11

    nomMain                        shift and go to state 6
    main                           shift and go to state 21

state 10

    (6) varsGlobal -> VAR . varAuxGlobal1
    (7) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON
    (8) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON varAuxGlobal1
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAuxGlobal1                  shift and go to state 26
    tipo                           shift and go to state 22

state 11

    (17) nomMain -> MAIN .

    LPAREN          reduce using rule 17 (nomMain -> MAIN .)


state 12

    (33) tipoFunc -> INT .

    ID              reduce using rule 33 (tipoFunc -> INT .)


state 13

    (36) tipoFunc -> VOID .

    ID              reduce using rule 36 (tipoFunc -> VOID .)


state 14

    (34) tipoFunc -> FLOAT .

    ID              reduce using rule 34 (tipoFunc -> FLOAT .)


state 15

    (35) tipoFunc -> CHAR .

    ID              reduce using rule 35 (tipoFunc -> CHAR .)


state 16

    (39) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (54) nomFunc -> . ID push_function

    ID              shift and go to state 28

    nomFunc                        shift and go to state 27

state 17

    (15) main -> nomMain LPAREN . RPAREN LBRACE bloqueAux RBRACE
    (16) main -> nomMain LPAREN . RPAREN LBRACE vars bloqueAux RBRACE

    RPAREN          shift and go to state 29


state 18

    (1) program -> PROGRAM ID COLON varsGlobal function . main endPrograma
    (15) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (17) nomMain -> . MAIN

    MAIN            shift and go to state 11

    nomMain                        shift and go to state 6
    main                           shift and go to state 30

state 19

    (3) program -> PROGRAM ID COLON varsGlobal main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 31

state 20

    (4) program -> PROGRAM ID COLON main endPrograma .

    $end            reduce using rule 4 (program -> PROGRAM ID COLON main endPrograma .)


state 21

    (2) program -> PROGRAM ID COLON function main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 32

state 22

    (7) varAuxGlobal1 -> tipo . varAuxGlobal2 SEMICOLON
    (8) varAuxGlobal1 -> tipo . varAuxGlobal2 SEMICOLON varAuxGlobal1
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2
    (11) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 33

state 23

    (30) tipo -> INT .

    ID              reduce using rule 30 (tipo -> INT .)


state 24

    (31) tipo -> FLOAT .

    ID              reduce using rule 31 (tipo -> FLOAT .)


state 25

    (32) tipo -> CHAR .

    ID              reduce using rule 32 (tipo -> CHAR .)


state 26

    (6) varsGlobal -> VAR varAuxGlobal1 .

    FUNCTION        reduce using rule 6 (varsGlobal -> VAR varAuxGlobal1 .)
    MAIN            reduce using rule 6 (varsGlobal -> VAR varAuxGlobal1 .)


state 27

    (39) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    LPAREN          shift and go to state 35


state 28

    (54) nomFunc -> ID . push_function
    (53) push_function -> .

    LPAREN          reduce using rule 53 (push_function -> .)

    push_function                  shift and go to state 36

state 29

    (15) main -> nomMain LPAREN RPAREN . LBRACE bloqueAux RBRACE
    (16) main -> nomMain LPAREN RPAREN . LBRACE vars bloqueAux RBRACE

    LBRACE          shift and go to state 37


state 30

    (1) program -> PROGRAM ID COLON varsGlobal function main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 38

state 31

    (3) program -> PROGRAM ID COLON varsGlobal main endPrograma .

    $end            reduce using rule 3 (program -> PROGRAM ID COLON varsGlobal main endPrograma .)


state 32

    (2) program -> PROGRAM ID COLON function main endPrograma .

    $end            reduce using rule 2 (program -> PROGRAM ID COLON function main endPrograma .)


state 33

    (7) varAuxGlobal1 -> tipo varAuxGlobal2 . SEMICOLON
    (8) varAuxGlobal1 -> tipo varAuxGlobal2 . SEMICOLON varAuxGlobal1

    SEMICOLON       shift and go to state 39


state 34

    (9) varAuxGlobal2 -> ID .
    (10) varAuxGlobal2 -> ID . COMA varAuxGlobal2
    (11) varAuxGlobal2 -> ID . LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> ID . LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> ID . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> ID . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    SEMICOLON       reduce using rule 9 (varAuxGlobal2 -> ID .)
    COMA            shift and go to state 41
    LCORCH          shift and go to state 40


state 35

    (39) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE RBRACE endProc
    (40) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE RBRACE endProc function
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE RBRACE endProc
    (44) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE RBRACE endProc function
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (48) param -> . tipo ID paramAvarTable
    (49) param -> . tipo ID paramAvarTable COMA param
    (50) param -> . empty
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (52) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 42
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

  ! RPAREN          [ reduce using rule 52 (empty -> .) ]

    tipo                           shift and go to state 45
    param                          shift and go to state 43
    empty                          shift and go to state 44

state 36

    (54) nomFunc -> ID push_function .

    LPAREN          reduce using rule 54 (nomFunc -> ID push_function .)


state 37

    (15) main -> nomMain LPAREN RPAREN LBRACE . bloqueAux RBRACE
    (16) main -> nomMain LPAREN RPAREN LBRACE . vars bloqueAux RBRACE
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (18) vars -> . VAR varAux1
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (82) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (83) asignacion -> . arreglo EQUAL push_poper expresion create_asign SEMICOLON
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (90) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (94) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (88) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (95) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    VAR             shift and go to state 53
    ID              shift and go to state 55
    IF              shift and go to state 50
    PRINT           shift and go to state 48
    WHILE           shift and go to state 60
    FROM            shift and go to state 58
    INPUT           shift and go to state 54

    vars                           shift and go to state 46
    arreglo                        shift and go to state 47
    estatuto                       shift and go to state 49
    lectura                        shift and go to state 51
    condicion                      shift and go to state 52
    loopFromDo                     shift and go to state 56
    llamadaAFuncion                shift and go to state 57
    asignacion                     shift and go to state 59
    bloqueAux                      shift and go to state 61
    while                          shift and go to state 62
    comparacion                    shift and go to state 63
    escritura                      shift and go to state 64

state 38

    (1) program -> PROGRAM ID COLON varsGlobal function main endPrograma .

    $end            reduce using rule 1 (program -> PROGRAM ID COLON varsGlobal function main endPrograma .)


state 39

    (7) varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON .
    (8) varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON . varAuxGlobal1
    (7) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON
    (8) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON varAuxGlobal1
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR

    FUNCTION        reduce using rule 7 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON .)
    MAIN            reduce using rule 7 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAuxGlobal1                  shift and go to state 65
    tipo                           shift and go to state 22

state 40

    (11) varAuxGlobal2 -> ID LCORCH . CTE_I RCORCH
    (12) varAuxGlobal2 -> ID LCORCH . CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> ID LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> ID LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    CTE_I           shift and go to state 66


state 41

    (10) varAuxGlobal2 -> ID COMA . varAuxGlobal2
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2
    (11) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 67

state 42

    (39) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE RBRACE endProc
    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE vars bloqueAux RBRACE endProc
    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE RBRACE endProc function
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE vars bloqueAux RBRACE endProc function

    LBRACE          shift and go to state 68


state 43

    (43) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE RBRACE endProc
    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE RBRACE endProc function
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE vars bloqueAux RBRACE endProc function

    RPAREN          shift and go to state 69


state 44

    (50) param -> empty .

    RPAREN          reduce using rule 50 (param -> empty .)


state 45

    (48) param -> tipo . ID paramAvarTable
    (49) param -> tipo . ID paramAvarTable COMA param

    ID              shift and go to state 70


state 46

    (16) main -> nomMain LPAREN RPAREN LBRACE vars . bloqueAux RBRACE
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (82) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (83) asignacion -> . arreglo EQUAL push_poper expresion create_asign SEMICOLON
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (90) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (94) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (88) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (95) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    ID              shift and go to state 55
    IF              shift and go to state 50
    PRINT           shift and go to state 48
    WHILE           shift and go to state 60
    FROM            shift and go to state 58
    INPUT           shift and go to state 54

    arreglo                        shift and go to state 47
    estatuto                       shift and go to state 49
    condicion                      shift and go to state 52
    lectura                        shift and go to state 51
    loopFromDo                     shift and go to state 56
    llamadaAFuncion                shift and go to state 57
    asignacion                     shift and go to state 59
    bloqueAux                      shift and go to state 71
    while                          shift and go to state 62
    comparacion                    shift and go to state 63
    escritura                      shift and go to state 64

state 47

    (83) asignacion -> arreglo . EQUAL push_poper expresion create_asign SEMICOLON

    EQUAL           shift and go to state 72


state 48

    (94) escritura -> PRINT . push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 73

state 49

    (55) bloqueAux -> estatuto .
    (56) bloqueAux -> estatuto . bloqueAux
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (82) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (83) asignacion -> . arreglo EQUAL push_poper expresion create_asign SEMICOLON
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (90) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (94) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (88) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (95) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    RBRACE          reduce using rule 55 (bloqueAux -> estatuto .)
    ID              shift and go to state 55
    IF              shift and go to state 50
    PRINT           shift and go to state 48
    WHILE           shift and go to state 60
    FROM            shift and go to state 58
    INPUT           shift and go to state 54

    arreglo                        shift and go to state 47
    estatuto                       shift and go to state 49
    condicion                      shift and go to state 52
    lectura                        shift and go to state 51
    loopFromDo                     shift and go to state 56
    llamadaAFuncion                shift and go to state 57
    asignacion                     shift and go to state 59
    bloqueAux                      shift and go to state 74
    while                          shift and go to state 62
    comparacion                    shift and go to state 63
    escritura                      shift and go to state 64

state 50

    (89) condicion -> IF . LPAREN expresion RPAREN cond bloque condFinal
    (90) condicion -> IF . LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal

    LPAREN          shift and go to state 75


state 51

    (69) estatuto -> lectura .

    ID              reduce using rule 69 (estatuto -> lectura .)
    IF              reduce using rule 69 (estatuto -> lectura .)
    PRINT           reduce using rule 69 (estatuto -> lectura .)
    WHILE           reduce using rule 69 (estatuto -> lectura .)
    FROM            reduce using rule 69 (estatuto -> lectura .)
    INPUT           reduce using rule 69 (estatuto -> lectura .)
    RBRACE          reduce using rule 69 (estatuto -> lectura .)


state 52

    (63) estatuto -> condicion .

    ID              reduce using rule 63 (estatuto -> condicion .)
    IF              reduce using rule 63 (estatuto -> condicion .)
    PRINT           reduce using rule 63 (estatuto -> condicion .)
    WHILE           reduce using rule 63 (estatuto -> condicion .)
    FROM            reduce using rule 63 (estatuto -> condicion .)
    INPUT           reduce using rule 63 (estatuto -> condicion .)
    RBRACE          reduce using rule 63 (estatuto -> condicion .)


state 53

    (18) vars -> VAR . varAux1
    (19) varAux1 -> . tipo varAux2 SEMICOLON
    (20) varAux1 -> . tipo varAux2 SEMICOLON varAux1
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAux1                        shift and go to state 77
    tipo                           shift and go to state 76

state 54

    (95) lectura -> INPUT . push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 78

state 55

    (82) asignacion -> ID . push_id EQUAL push_poper expresion create_asign SEMICOLON
    (88) comparacion -> ID . push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (81) arreglo -> ID . push_id LCORCH exp RCORCH ver_dim1
    (126) push_id -> .
    (72) actualizaFuncion -> .

    EQUAL           reduce using rule 126 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 126 (push_id -> .)
    LCORCH          reduce using rule 126 (push_id -> .)
    LPAREN          reduce using rule 72 (actualizaFuncion -> .)

    actualizaFuncion               shift and go to state 79
    push_id                        shift and go to state 80

state 56

    (66) estatuto -> loopFromDo .

    ID              reduce using rule 66 (estatuto -> loopFromDo .)
    IF              reduce using rule 66 (estatuto -> loopFromDo .)
    PRINT           reduce using rule 66 (estatuto -> loopFromDo .)
    WHILE           reduce using rule 66 (estatuto -> loopFromDo .)
    FROM            reduce using rule 66 (estatuto -> loopFromDo .)
    INPUT           reduce using rule 66 (estatuto -> loopFromDo .)
    RBRACE          reduce using rule 66 (estatuto -> loopFromDo .)


state 57

    (68) estatuto -> llamadaAFuncion .

    ID              reduce using rule 68 (estatuto -> llamadaAFuncion .)
    IF              reduce using rule 68 (estatuto -> llamadaAFuncion .)
    PRINT           reduce using rule 68 (estatuto -> llamadaAFuncion .)
    WHILE           reduce using rule 68 (estatuto -> llamadaAFuncion .)
    FROM            reduce using rule 68 (estatuto -> llamadaAFuncion .)
    INPUT           reduce using rule 68 (estatuto -> llamadaAFuncion .)
    RBRACE          reduce using rule 68 (estatuto -> llamadaAFuncion .)


state 58

    (61) loopFromDo -> FROM . LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    LPAREN          shift and go to state 81


state 59

    (62) estatuto -> asignacion .

    ID              reduce using rule 62 (estatuto -> asignacion .)
    IF              reduce using rule 62 (estatuto -> asignacion .)
    PRINT           reduce using rule 62 (estatuto -> asignacion .)
    WHILE           reduce using rule 62 (estatuto -> asignacion .)
    FROM            reduce using rule 62 (estatuto -> asignacion .)
    INPUT           reduce using rule 62 (estatuto -> asignacion .)
    RBRACE          reduce using rule 62 (estatuto -> asignacion .)


state 60

    (57) while -> WHILE . while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (58) while1 -> .

    LPAREN          reduce using rule 58 (while1 -> .)

    while1                         shift and go to state 82

state 61

    (15) main -> nomMain LPAREN RPAREN LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 83


state 62

    (65) estatuto -> while .

    ID              reduce using rule 65 (estatuto -> while .)
    IF              reduce using rule 65 (estatuto -> while .)
    PRINT           reduce using rule 65 (estatuto -> while .)
    WHILE           reduce using rule 65 (estatuto -> while .)
    FROM            reduce using rule 65 (estatuto -> while .)
    INPUT           reduce using rule 65 (estatuto -> while .)
    RBRACE          reduce using rule 65 (estatuto -> while .)


state 63

    (67) estatuto -> comparacion .

    ID              reduce using rule 67 (estatuto -> comparacion .)
    IF              reduce using rule 67 (estatuto -> comparacion .)
    PRINT           reduce using rule 67 (estatuto -> comparacion .)
    WHILE           reduce using rule 67 (estatuto -> comparacion .)
    FROM            reduce using rule 67 (estatuto -> comparacion .)
    INPUT           reduce using rule 67 (estatuto -> comparacion .)
    RBRACE          reduce using rule 67 (estatuto -> comparacion .)


state 64

    (64) estatuto -> escritura .

    ID              reduce using rule 64 (estatuto -> escritura .)
    IF              reduce using rule 64 (estatuto -> escritura .)
    PRINT           reduce using rule 64 (estatuto -> escritura .)
    WHILE           reduce using rule 64 (estatuto -> escritura .)
    FROM            reduce using rule 64 (estatuto -> escritura .)
    INPUT           reduce using rule 64 (estatuto -> escritura .)
    RBRACE          reduce using rule 64 (estatuto -> escritura .)


state 65

    (8) varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1 .

    FUNCTION        reduce using rule 8 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1 .)
    MAIN            reduce using rule 8 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1 .)


state 66

    (11) varAuxGlobal2 -> ID LCORCH CTE_I . RCORCH
    (12) varAuxGlobal2 -> ID LCORCH CTE_I . RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> ID LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> ID LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    RCORCH          shift and go to state 84


state 67

    (10) varAuxGlobal2 -> ID COMA varAuxGlobal2 .

    SEMICOLON       reduce using rule 10 (varAuxGlobal2 -> ID COMA varAuxGlobal2 .)


state 68

    (39) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . RBRACE endProc
    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . vars bloqueAux RBRACE endProc
    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . RBRACE endProc function
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . vars bloqueAux RBRACE endProc function
    (18) vars -> . VAR varAux1

    RBRACE          shift and go to state 85
    VAR             shift and go to state 53

    vars                           shift and go to state 86

state 69

    (43) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE RBRACE endProc
    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE RBRACE endProc function
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE vars bloqueAux RBRACE endProc function

    LBRACE          shift and go to state 87


state 70

    (48) param -> tipo ID . paramAvarTable
    (49) param -> tipo ID . paramAvarTable COMA param
    (51) paramAvarTable -> .

    COMA            reduce using rule 51 (paramAvarTable -> .)
    RPAREN          reduce using rule 51 (paramAvarTable -> .)

    paramAvarTable                 shift and go to state 88

state 71

    (16) main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux . RBRACE

    RBRACE          shift and go to state 89


state 72

    (83) asignacion -> arreglo EQUAL . push_poper expresion create_asign SEMICOLON
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)
    PLUS            reduce using rule 128 (push_poper -> .)
    MINUS           reduce using rule 128 (push_poper -> .)
    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 90

state 73

    (94) escritura -> PRINT push_poper . LPAREN escrituraAux RPAREN quad_print SEMICOLON

    LPAREN          shift and go to state 91


state 74

    (56) bloqueAux -> estatuto bloqueAux .

    RBRACE          reduce using rule 56 (bloqueAux -> estatuto bloqueAux .)


state 75

    (89) condicion -> IF LPAREN . expresion RPAREN cond bloque condFinal
    (90) condicion -> IF LPAREN . expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    expresion                      shift and go to state 103
    factor                         shift and go to state 97
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105
    var_cte                        shift and go to state 92

state 76

    (19) varAux1 -> tipo . varAux2 SEMICOLON
    (20) varAux1 -> tipo . varAux2 SEMICOLON varAux1
    (21) varAux2 -> . ID push_var
    (22) varAux2 -> . ID push_var COMA varAux2
    (23) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo
    (24) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (25) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    ID              shift and go to state 107

    varAux2                        shift and go to state 106

state 77

    (18) vars -> VAR varAux1 .

    ID              reduce using rule 18 (vars -> VAR varAux1 .)
    IF              reduce using rule 18 (vars -> VAR varAux1 .)
    PRINT           reduce using rule 18 (vars -> VAR varAux1 .)
    WHILE           reduce using rule 18 (vars -> VAR varAux1 .)
    FROM            reduce using rule 18 (vars -> VAR varAux1 .)
    INPUT           reduce using rule 18 (vars -> VAR varAux1 .)


state 78

    (95) lectura -> INPUT push_poper . LPAREN ID push_id RPAREN quad_print SEMICOLON

    LPAREN          shift and go to state 108


state 79

    (70) llamadaAFuncion -> ID actualizaFuncion . generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> ID actualizaFuncion . generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (74) generarEra -> .

    LPAREN          reduce using rule 74 (generarEra -> .)

    generarEra                     shift and go to state 109

state 80

    (82) asignacion -> ID push_id . EQUAL push_poper expresion create_asign SEMICOLON
    (88) comparacion -> ID push_id . DOUBLEEQUAL push_poper expresion SEMICOLON
    (81) arreglo -> ID push_id . LCORCH exp RCORCH ver_dim1

    EQUAL           shift and go to state 112
    DOUBLEEQUAL     shift and go to state 110
    LCORCH          shift and go to state 111


state 81

    (61) loopFromDo -> FROM LPAREN . ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    ID              shift and go to state 113


state 82

    (57) while -> WHILE while1 . LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3

    LPAREN          shift and go to state 114


state 83

    (15) main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE .

    $end            reduce using rule 15 (main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE .)


state 84

    (11) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH .
    (12) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH . COMA varAuxGlobal2
    (13) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH COMA varAuxGlobal2

    SEMICOLON       reduce using rule 11 (varAuxGlobal2 -> ID LCORCH CTE_I RCORCH .)
    COMA            shift and go to state 116
    LCORCH          shift and go to state 115


state 85

    (39) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE . endProc
    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE . endProc function
    (47) endProc -> .

    FUNCTION        reduce using rule 47 (endProc -> .)
    MAIN            reduce using rule 47 (endProc -> .)

    endProc                        shift and go to state 117

state 86

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars . bloqueAux RBRACE endProc
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars . bloqueAux RBRACE endProc function
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (82) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (83) asignacion -> . arreglo EQUAL push_poper expresion create_asign SEMICOLON
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (90) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (94) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (88) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (95) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    ID              shift and go to state 55
    IF              shift and go to state 50
    PRINT           shift and go to state 48
    WHILE           shift and go to state 60
    FROM            shift and go to state 58
    INPUT           shift and go to state 54

    arreglo                        shift and go to state 47
    estatuto                       shift and go to state 49
    condicion                      shift and go to state 52
    lectura                        shift and go to state 51
    loopFromDo                     shift and go to state 56
    llamadaAFuncion                shift and go to state 57
    asignacion                     shift and go to state 59
    bloqueAux                      shift and go to state 118
    while                          shift and go to state 62
    comparacion                    shift and go to state 63
    escritura                      shift and go to state 64

state 87

    (43) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . RBRACE endProc
    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . RBRACE endProc function
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . vars bloqueAux RBRACE endProc function
    (18) vars -> . VAR varAux1

    RBRACE          shift and go to state 119
    VAR             shift and go to state 53

    vars                           shift and go to state 120

state 88

    (48) param -> tipo ID paramAvarTable .
    (49) param -> tipo ID paramAvarTable . COMA param

    RPAREN          reduce using rule 48 (param -> tipo ID paramAvarTable .)
    COMA            shift and go to state 121


state 89

    (16) main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE .

    $end            reduce using rule 16 (main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE .)


state 90

    (83) asignacion -> arreglo EQUAL push_poper . expresion create_asign SEMICOLON
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    expresion                      shift and go to state 122
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105
    factor                         shift and go to state 97
    var_cte                        shift and go to state 92

state 91

    (94) escritura -> PRINT push_poper LPAREN . escrituraAux RPAREN quad_print SEMICOLON
    (97) escrituraAux -> . expresion
    (98) escrituraAux -> . CTE_STRING push_cte
    (99) escrituraAux -> . expresion COMA escrituraAux
    (100) escrituraAux -> . CTE_STRING push_cte COMA escrituraAux
    (101) escrituraAux -> . llamadaAFuncion
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    CTE_STRING      shift and go to state 123
    ID              shift and go to state 125
    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98

    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    factor                         shift and go to state 97
    expresion                      shift and go to state 124
    var_cte                        shift and go to state 92
    escrituraAux                   shift and go to state 126
    llamadaAFuncion                shift and go to state 127
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105

state 92

    (125) factorAux -> var_cte .

    TIMES           reduce using rule 125 (factorAux -> var_cte .)
    DIVIDE          reduce using rule 125 (factorAux -> var_cte .)
    PLUS            reduce using rule 125 (factorAux -> var_cte .)
    MINUS           reduce using rule 125 (factorAux -> var_cte .)
    RPAREN          reduce using rule 125 (factorAux -> var_cte .)
    SEMICOLON       reduce using rule 125 (factorAux -> var_cte .)
    COMA            reduce using rule 125 (factorAux -> var_cte .)
    ID              reduce using rule 125 (factorAux -> var_cte .)
    IF              reduce using rule 125 (factorAux -> var_cte .)
    PRINT           reduce using rule 125 (factorAux -> var_cte .)
    WHILE           reduce using rule 125 (factorAux -> var_cte .)
    FROM            reduce using rule 125 (factorAux -> var_cte .)
    INPUT           reduce using rule 125 (factorAux -> var_cte .)
    RBRACE          reduce using rule 125 (factorAux -> var_cte .)
    LOWERTHAN       reduce using rule 125 (factorAux -> var_cte .)
    MORETHAN        reduce using rule 125 (factorAux -> var_cte .)
    DIFFERENT       reduce using rule 125 (factorAux -> var_cte .)
    DOUBLEEQUAL     reduce using rule 125 (factorAux -> var_cte .)
    LOWEREQUAL      reduce using rule 125 (factorAux -> var_cte .)
    MOREEQUAL       reduce using rule 125 (factorAux -> var_cte .)
    RCORCH          reduce using rule 125 (factorAux -> var_cte .)


state 93

    (133) var_cte -> arreglo .

    TIMES           reduce using rule 133 (var_cte -> arreglo .)
    DIVIDE          reduce using rule 133 (var_cte -> arreglo .)
    PLUS            reduce using rule 133 (var_cte -> arreglo .)
    MINUS           reduce using rule 133 (var_cte -> arreglo .)
    LOWERTHAN       reduce using rule 133 (var_cte -> arreglo .)
    MORETHAN        reduce using rule 133 (var_cte -> arreglo .)
    DIFFERENT       reduce using rule 133 (var_cte -> arreglo .)
    DOUBLEEQUAL     reduce using rule 133 (var_cte -> arreglo .)
    LOWEREQUAL      reduce using rule 133 (var_cte -> arreglo .)
    MOREEQUAL       reduce using rule 133 (var_cte -> arreglo .)
    COMA            reduce using rule 133 (var_cte -> arreglo .)
    RPAREN          reduce using rule 133 (var_cte -> arreglo .)
    SEMICOLON       reduce using rule 133 (var_cte -> arreglo .)
    RCORCH          reduce using rule 133 (var_cte -> arreglo .)
    ID              reduce using rule 133 (var_cte -> arreglo .)
    IF              reduce using rule 133 (var_cte -> arreglo .)
    PRINT           reduce using rule 133 (var_cte -> arreglo .)
    WHILE           reduce using rule 133 (var_cte -> arreglo .)
    FROM            reduce using rule 133 (var_cte -> arreglo .)
    INPUT           reduce using rule 133 (var_cte -> arreglo .)
    RBRACE          reduce using rule 133 (var_cte -> arreglo .)


state 94

    (111) exp -> termino . quad_term
    (112) exp -> termino . quad_term exp1
    (115) quad_term -> .

    PLUS            reduce using rule 115 (quad_term -> .)
    MINUS           reduce using rule 115 (quad_term -> .)
    LOWERTHAN       reduce using rule 115 (quad_term -> .)
    MORETHAN        reduce using rule 115 (quad_term -> .)
    DIFFERENT       reduce using rule 115 (quad_term -> .)
    DOUBLEEQUAL     reduce using rule 115 (quad_term -> .)
    LOWEREQUAL      reduce using rule 115 (quad_term -> .)
    MOREEQUAL       reduce using rule 115 (quad_term -> .)
    RPAREN          reduce using rule 115 (quad_term -> .)
    SEMICOLON       reduce using rule 115 (quad_term -> .)
    COMA            reduce using rule 115 (quad_term -> .)
    RCORCH          reduce using rule 115 (quad_term -> .)
    ID              reduce using rule 115 (quad_term -> .)
    IF              reduce using rule 115 (quad_term -> .)
    PRINT           reduce using rule 115 (quad_term -> .)
    WHILE           reduce using rule 115 (quad_term -> .)
    FROM            reduce using rule 115 (quad_term -> .)
    INPUT           reduce using rule 115 (quad_term -> .)
    RBRACE          reduce using rule 115 (quad_term -> .)

    quad_term                      shift and go to state 128

state 95

    (124) factorAux -> MINUS . push_poper var_cte
    (128) push_poper -> .

    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 129

state 96

    (123) factorAux -> PLUS . push_poper var_cte
    (128) push_poper -> .

    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 130

state 97

    (117) termino -> factor . quad_fact
    (118) termino -> factor . quad_fact termino1
    (116) quad_fact -> .

    TIMES           reduce using rule 116 (quad_fact -> .)
    DIVIDE          reduce using rule 116 (quad_fact -> .)
    PLUS            reduce using rule 116 (quad_fact -> .)
    MINUS           reduce using rule 116 (quad_fact -> .)
    LOWERTHAN       reduce using rule 116 (quad_fact -> .)
    MORETHAN        reduce using rule 116 (quad_fact -> .)
    DIFFERENT       reduce using rule 116 (quad_fact -> .)
    DOUBLEEQUAL     reduce using rule 116 (quad_fact -> .)
    LOWEREQUAL      reduce using rule 116 (quad_fact -> .)
    MOREEQUAL       reduce using rule 116 (quad_fact -> .)
    RPAREN          reduce using rule 116 (quad_fact -> .)
    SEMICOLON       reduce using rule 116 (quad_fact -> .)
    COMA            reduce using rule 116 (quad_fact -> .)
    RCORCH          reduce using rule 116 (quad_fact -> .)
    ID              reduce using rule 116 (quad_fact -> .)
    IF              reduce using rule 116 (quad_fact -> .)
    PRINT           reduce using rule 116 (quad_fact -> .)
    WHILE           reduce using rule 116 (quad_fact -> .)
    FROM            reduce using rule 116 (quad_fact -> .)
    INPUT           reduce using rule 116 (quad_fact -> .)
    RBRACE          reduce using rule 116 (quad_fact -> .)

    quad_fact                      shift and go to state 131

state 98

    (131) var_cte -> CTE_F . push_cte
    (127) push_cte -> .

    TIMES           reduce using rule 127 (push_cte -> .)
    DIVIDE          reduce using rule 127 (push_cte -> .)
    PLUS            reduce using rule 127 (push_cte -> .)
    MINUS           reduce using rule 127 (push_cte -> .)
    LOWERTHAN       reduce using rule 127 (push_cte -> .)
    MORETHAN        reduce using rule 127 (push_cte -> .)
    DIFFERENT       reduce using rule 127 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 127 (push_cte -> .)
    LOWEREQUAL      reduce using rule 127 (push_cte -> .)
    MOREEQUAL       reduce using rule 127 (push_cte -> .)
    RPAREN          reduce using rule 127 (push_cte -> .)
    SEMICOLON       reduce using rule 127 (push_cte -> .)
    COMA            reduce using rule 127 (push_cte -> .)
    RCORCH          reduce using rule 127 (push_cte -> .)
    ID              reduce using rule 127 (push_cte -> .)
    IF              reduce using rule 127 (push_cte -> .)
    PRINT           reduce using rule 127 (push_cte -> .)
    WHILE           reduce using rule 127 (push_cte -> .)
    FROM            reduce using rule 127 (push_cte -> .)
    INPUT           reduce using rule 127 (push_cte -> .)
    RBRACE          reduce using rule 127 (push_cte -> .)

    push_cte                       shift and go to state 132

state 99

    (132) var_cte -> CTE_STRING . push_cte
    (127) push_cte -> .

    TIMES           reduce using rule 127 (push_cte -> .)
    DIVIDE          reduce using rule 127 (push_cte -> .)
    PLUS            reduce using rule 127 (push_cte -> .)
    MINUS           reduce using rule 127 (push_cte -> .)
    LOWERTHAN       reduce using rule 127 (push_cte -> .)
    MORETHAN        reduce using rule 127 (push_cte -> .)
    DIFFERENT       reduce using rule 127 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 127 (push_cte -> .)
    LOWEREQUAL      reduce using rule 127 (push_cte -> .)
    MOREEQUAL       reduce using rule 127 (push_cte -> .)
    RPAREN          reduce using rule 127 (push_cte -> .)
    SEMICOLON       reduce using rule 127 (push_cte -> .)
    RCORCH          reduce using rule 127 (push_cte -> .)
    COMA            reduce using rule 127 (push_cte -> .)
    ID              reduce using rule 127 (push_cte -> .)
    IF              reduce using rule 127 (push_cte -> .)
    PRINT           reduce using rule 127 (push_cte -> .)
    WHILE           reduce using rule 127 (push_cte -> .)
    FROM            reduce using rule 127 (push_cte -> .)
    INPUT           reduce using rule 127 (push_cte -> .)
    RBRACE          reduce using rule 127 (push_cte -> .)

    push_cte                       shift and go to state 133

state 100

    (130) var_cte -> CTE_I . push_cte
    (127) push_cte -> .

    TIMES           reduce using rule 127 (push_cte -> .)
    DIVIDE          reduce using rule 127 (push_cte -> .)
    PLUS            reduce using rule 127 (push_cte -> .)
    MINUS           reduce using rule 127 (push_cte -> .)
    LOWERTHAN       reduce using rule 127 (push_cte -> .)
    MORETHAN        reduce using rule 127 (push_cte -> .)
    DIFFERENT       reduce using rule 127 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 127 (push_cte -> .)
    LOWEREQUAL      reduce using rule 127 (push_cte -> .)
    MOREEQUAL       reduce using rule 127 (push_cte -> .)
    RPAREN          reduce using rule 127 (push_cte -> .)
    SEMICOLON       reduce using rule 127 (push_cte -> .)
    COMA            reduce using rule 127 (push_cte -> .)
    RCORCH          reduce using rule 127 (push_cte -> .)
    ID              reduce using rule 127 (push_cte -> .)
    IF              reduce using rule 127 (push_cte -> .)
    PRINT           reduce using rule 127 (push_cte -> .)
    WHILE           reduce using rule 127 (push_cte -> .)
    FROM            reduce using rule 127 (push_cte -> .)
    INPUT           reduce using rule 127 (push_cte -> .)
    RBRACE          reduce using rule 127 (push_cte -> .)

    push_cte                       shift and go to state 134

state 101

    (121) factor -> LPAREN . expresion RPAREN
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    expresion                      shift and go to state 135
    factor                         shift and go to state 97
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105
    var_cte                        shift and go to state 92

state 102

    (129) var_cte -> ID . push_id
    (81) arreglo -> ID . push_id LCORCH exp RCORCH ver_dim1
    (126) push_id -> .

    LCORCH          reduce using rule 126 (push_id -> .)
    TIMES           reduce using rule 126 (push_id -> .)
    DIVIDE          reduce using rule 126 (push_id -> .)
    PLUS            reduce using rule 126 (push_id -> .)
    MINUS           reduce using rule 126 (push_id -> .)
    LOWERTHAN       reduce using rule 126 (push_id -> .)
    MORETHAN        reduce using rule 126 (push_id -> .)
    DIFFERENT       reduce using rule 126 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 126 (push_id -> .)
    LOWEREQUAL      reduce using rule 126 (push_id -> .)
    MOREEQUAL       reduce using rule 126 (push_id -> .)
    RPAREN          reduce using rule 126 (push_id -> .)
    SEMICOLON       reduce using rule 126 (push_id -> .)
    RCORCH          reduce using rule 126 (push_id -> .)
    COMA            reduce using rule 126 (push_id -> .)
    ID              reduce using rule 126 (push_id -> .)
    IF              reduce using rule 126 (push_id -> .)
    PRINT           reduce using rule 126 (push_id -> .)
    WHILE           reduce using rule 126 (push_id -> .)
    FROM            reduce using rule 126 (push_id -> .)
    INPUT           reduce using rule 126 (push_id -> .)
    RBRACE          reduce using rule 126 (push_id -> .)

    push_id                        shift and go to state 136

state 103

    (89) condicion -> IF LPAREN expresion . RPAREN cond bloque condFinal
    (90) condicion -> IF LPAREN expresion . RPAREN cond bloque ELSE condElse bloque condFinal

    RPAREN          shift and go to state 137


state 104

    (102) expresion -> exp .
    (103) expresion -> exp . comp exp quad_comp
    (104) comp -> . LOWERTHAN push_poper
    (105) comp -> . MORETHAN push_poper
    (106) comp -> . DIFFERENT push_poper
    (107) comp -> . DOUBLEEQUAL push_poper
    (108) comp -> . LOWEREQUAL push_poper
    (109) comp -> . MOREEQUAL push_poper

    COMA            reduce using rule 102 (expresion -> exp .)
    RPAREN          reduce using rule 102 (expresion -> exp .)
    SEMICOLON       reduce using rule 102 (expresion -> exp .)
    ID              reduce using rule 102 (expresion -> exp .)
    IF              reduce using rule 102 (expresion -> exp .)
    PRINT           reduce using rule 102 (expresion -> exp .)
    WHILE           reduce using rule 102 (expresion -> exp .)
    FROM            reduce using rule 102 (expresion -> exp .)
    INPUT           reduce using rule 102 (expresion -> exp .)
    RBRACE          reduce using rule 102 (expresion -> exp .)
    LOWERTHAN       shift and go to state 141
    MORETHAN        shift and go to state 144
    DIFFERENT       shift and go to state 139
    DOUBLEEQUAL     shift and go to state 140
    LOWEREQUAL      shift and go to state 143
    MOREEQUAL       shift and go to state 138

    comp                           shift and go to state 142

state 105

    (122) factor -> factorAux .

    TIMES           reduce using rule 122 (factor -> factorAux .)
    DIVIDE          reduce using rule 122 (factor -> factorAux .)
    PLUS            reduce using rule 122 (factor -> factorAux .)
    MINUS           reduce using rule 122 (factor -> factorAux .)
    LOWERTHAN       reduce using rule 122 (factor -> factorAux .)
    MORETHAN        reduce using rule 122 (factor -> factorAux .)
    DIFFERENT       reduce using rule 122 (factor -> factorAux .)
    DOUBLEEQUAL     reduce using rule 122 (factor -> factorAux .)
    LOWEREQUAL      reduce using rule 122 (factor -> factorAux .)
    MOREEQUAL       reduce using rule 122 (factor -> factorAux .)
    COMA            reduce using rule 122 (factor -> factorAux .)
    RPAREN          reduce using rule 122 (factor -> factorAux .)
    SEMICOLON       reduce using rule 122 (factor -> factorAux .)
    RCORCH          reduce using rule 122 (factor -> factorAux .)
    ID              reduce using rule 122 (factor -> factorAux .)
    IF              reduce using rule 122 (factor -> factorAux .)
    PRINT           reduce using rule 122 (factor -> factorAux .)
    WHILE           reduce using rule 122 (factor -> factorAux .)
    FROM            reduce using rule 122 (factor -> factorAux .)
    INPUT           reduce using rule 122 (factor -> factorAux .)
    RBRACE          reduce using rule 122 (factor -> factorAux .)


state 106

    (19) varAux1 -> tipo varAux2 . SEMICOLON
    (20) varAux1 -> tipo varAux2 . SEMICOLON varAux1

    SEMICOLON       shift and go to state 145


state 107

    (21) varAux2 -> ID . push_var
    (22) varAux2 -> ID . push_var COMA varAux2
    (23) varAux2 -> ID . LCORCH CTE_I RCORCH push_arreglo
    (24) varAux2 -> ID . LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (25) varAux2 -> ID . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> ID . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2
    (27) push_var -> .

    LCORCH          shift and go to state 146
    COMA            reduce using rule 27 (push_var -> .)
    SEMICOLON       reduce using rule 27 (push_var -> .)

    push_var                       shift and go to state 147

state 108

    (95) lectura -> INPUT push_poper LPAREN . ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 148


state 109

    (70) llamadaAFuncion -> ID actualizaFuncion generarEra . LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> ID actualizaFuncion generarEra . LPAREN paramFuncion gosub RPAREN SEMICOLON

    LPAREN          shift and go to state 149


state 110

    (88) comparacion -> ID push_id DOUBLEEQUAL . push_poper expresion SEMICOLON
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)
    PLUS            reduce using rule 128 (push_poper -> .)
    MINUS           reduce using rule 128 (push_poper -> .)
    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 150

state 111

    (81) arreglo -> ID push_id LCORCH . exp RCORCH ver_dim1
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    arreglo                        shift and go to state 93
    factor                         shift and go to state 97
    termino                        shift and go to state 94
    exp                            shift and go to state 151
    factorAux                      shift and go to state 105
    var_cte                        shift and go to state 92

state 112

    (82) asignacion -> ID push_id EQUAL . push_poper expresion create_asign SEMICOLON
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)
    PLUS            reduce using rule 128 (push_poper -> .)
    MINUS           reduce using rule 128 (push_poper -> .)
    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 152

state 113

    (61) loopFromDo -> FROM LPAREN ID . EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    EQUAL           shift and go to state 153


state 114

    (57) while -> WHILE while1 LPAREN . expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    expresion                      shift and go to state 154
    arreglo                        shift and go to state 93
    factor                         shift and go to state 97
    var_cte                        shift and go to state 92
    termino                        shift and go to state 94
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105

state 115

    (13) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH
    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH COMA varAuxGlobal2

    CTE_I           shift and go to state 155


state 116

    (12) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH COMA . varAuxGlobal2
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2
    (11) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 156

state 117

    (39) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc .
    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc . function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    MAIN            reduce using rule 39 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 157

state 118

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux . RBRACE endProc
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux . RBRACE endProc function

    RBRACE          shift and go to state 158


state 119

    (43) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE . endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE . endProc function
    (47) endProc -> .

    FUNCTION        reduce using rule 47 (endProc -> .)
    MAIN            reduce using rule 47 (endProc -> .)

    endProc                        shift and go to state 159

state 120

    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars . bloqueAux RBRACE endProc
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars . bloqueAux RBRACE endProc function
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (82) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (83) asignacion -> . arreglo EQUAL push_poper expresion create_asign SEMICOLON
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (90) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (94) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (88) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (95) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    ID              shift and go to state 55
    IF              shift and go to state 50
    PRINT           shift and go to state 48
    WHILE           shift and go to state 60
    FROM            shift and go to state 58
    INPUT           shift and go to state 54

    arreglo                        shift and go to state 47
    estatuto                       shift and go to state 49
    condicion                      shift and go to state 52
    lectura                        shift and go to state 51
    loopFromDo                     shift and go to state 56
    llamadaAFuncion                shift and go to state 57
    asignacion                     shift and go to state 59
    bloqueAux                      shift and go to state 160
    while                          shift and go to state 62
    comparacion                    shift and go to state 63
    escritura                      shift and go to state 64

state 121

    (49) param -> tipo ID paramAvarTable COMA . param
    (48) param -> . tipo ID paramAvarTable
    (49) param -> . tipo ID paramAvarTable COMA param
    (50) param -> . empty
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (52) empty -> .

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    RPAREN          reduce using rule 52 (empty -> .)

    empty                          shift and go to state 44
    param                          shift and go to state 161
    tipo                           shift and go to state 45

state 122

    (83) asignacion -> arreglo EQUAL push_poper expresion . create_asign SEMICOLON
    (87) create_asign -> .

    SEMICOLON       reduce using rule 87 (create_asign -> .)

    create_asign                   shift and go to state 162

state 123

    (98) escrituraAux -> CTE_STRING . push_cte
    (100) escrituraAux -> CTE_STRING . push_cte COMA escrituraAux
    (132) var_cte -> CTE_STRING . push_cte
    (127) push_cte -> .

    COMA            reduce using rule 127 (push_cte -> .)
    RPAREN          reduce using rule 127 (push_cte -> .)
    TIMES           reduce using rule 127 (push_cte -> .)
    DIVIDE          reduce using rule 127 (push_cte -> .)
    PLUS            reduce using rule 127 (push_cte -> .)
    MINUS           reduce using rule 127 (push_cte -> .)
    LOWERTHAN       reduce using rule 127 (push_cte -> .)
    MORETHAN        reduce using rule 127 (push_cte -> .)
    DIFFERENT       reduce using rule 127 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 127 (push_cte -> .)
    LOWEREQUAL      reduce using rule 127 (push_cte -> .)
    MOREEQUAL       reduce using rule 127 (push_cte -> .)

    push_cte                       shift and go to state 163

state 124

    (97) escrituraAux -> expresion .
    (99) escrituraAux -> expresion . COMA escrituraAux

    RPAREN          reduce using rule 97 (escrituraAux -> expresion .)
    COMA            shift and go to state 164


state 125

    (70) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (129) var_cte -> ID . push_id
    (81) arreglo -> ID . push_id LCORCH exp RCORCH ver_dim1
    (72) actualizaFuncion -> .
    (126) push_id -> .

    LPAREN          reduce using rule 72 (actualizaFuncion -> .)
    LCORCH          reduce using rule 126 (push_id -> .)
    TIMES           reduce using rule 126 (push_id -> .)
    DIVIDE          reduce using rule 126 (push_id -> .)
    PLUS            reduce using rule 126 (push_id -> .)
    MINUS           reduce using rule 126 (push_id -> .)
    LOWERTHAN       reduce using rule 126 (push_id -> .)
    MORETHAN        reduce using rule 126 (push_id -> .)
    DIFFERENT       reduce using rule 126 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 126 (push_id -> .)
    LOWEREQUAL      reduce using rule 126 (push_id -> .)
    MOREEQUAL       reduce using rule 126 (push_id -> .)
    COMA            reduce using rule 126 (push_id -> .)
    RPAREN          reduce using rule 126 (push_id -> .)

    actualizaFuncion               shift and go to state 79
    push_id                        shift and go to state 136

state 126

    (94) escritura -> PRINT push_poper LPAREN escrituraAux . RPAREN quad_print SEMICOLON

    RPAREN          shift and go to state 165


state 127

    (101) escrituraAux -> llamadaAFuncion .

    RPAREN          reduce using rule 101 (escrituraAux -> llamadaAFuncion .)


state 128

    (111) exp -> termino quad_term .
    (112) exp -> termino quad_term . exp1
    (113) exp1 -> . PLUS push_poper exp
    (114) exp1 -> . MINUS push_poper exp

    LOWERTHAN       reduce using rule 111 (exp -> termino quad_term .)
    MORETHAN        reduce using rule 111 (exp -> termino quad_term .)
    DIFFERENT       reduce using rule 111 (exp -> termino quad_term .)
    DOUBLEEQUAL     reduce using rule 111 (exp -> termino quad_term .)
    LOWEREQUAL      reduce using rule 111 (exp -> termino quad_term .)
    MOREEQUAL       reduce using rule 111 (exp -> termino quad_term .)
    RPAREN          reduce using rule 111 (exp -> termino quad_term .)
    SEMICOLON       reduce using rule 111 (exp -> termino quad_term .)
    COMA            reduce using rule 111 (exp -> termino quad_term .)
    RCORCH          reduce using rule 111 (exp -> termino quad_term .)
    ID              reduce using rule 111 (exp -> termino quad_term .)
    IF              reduce using rule 111 (exp -> termino quad_term .)
    PRINT           reduce using rule 111 (exp -> termino quad_term .)
    WHILE           reduce using rule 111 (exp -> termino quad_term .)
    FROM            reduce using rule 111 (exp -> termino quad_term .)
    INPUT           reduce using rule 111 (exp -> termino quad_term .)
    RBRACE          reduce using rule 111 (exp -> termino quad_term .)
    PLUS            shift and go to state 167
    MINUS           shift and go to state 168

    exp1                           shift and go to state 166

state 129

    (124) factorAux -> MINUS push_poper . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    var_cte                        shift and go to state 169
    arreglo                        shift and go to state 93

state 130

    (123) factorAux -> PLUS push_poper . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    var_cte                        shift and go to state 170
    arreglo                        shift and go to state 93

state 131

    (117) termino -> factor quad_fact .
    (118) termino -> factor quad_fact . termino1
    (119) termino1 -> . TIMES push_poper termino
    (120) termino1 -> . DIVIDE push_poper termino

    PLUS            reduce using rule 117 (termino -> factor quad_fact .)
    MINUS           reduce using rule 117 (termino -> factor quad_fact .)
    LOWERTHAN       reduce using rule 117 (termino -> factor quad_fact .)
    MORETHAN        reduce using rule 117 (termino -> factor quad_fact .)
    DIFFERENT       reduce using rule 117 (termino -> factor quad_fact .)
    DOUBLEEQUAL     reduce using rule 117 (termino -> factor quad_fact .)
    LOWEREQUAL      reduce using rule 117 (termino -> factor quad_fact .)
    MOREEQUAL       reduce using rule 117 (termino -> factor quad_fact .)
    RPAREN          reduce using rule 117 (termino -> factor quad_fact .)
    SEMICOLON       reduce using rule 117 (termino -> factor quad_fact .)
    COMA            reduce using rule 117 (termino -> factor quad_fact .)
    RCORCH          reduce using rule 117 (termino -> factor quad_fact .)
    ID              reduce using rule 117 (termino -> factor quad_fact .)
    IF              reduce using rule 117 (termino -> factor quad_fact .)
    PRINT           reduce using rule 117 (termino -> factor quad_fact .)
    WHILE           reduce using rule 117 (termino -> factor quad_fact .)
    FROM            reduce using rule 117 (termino -> factor quad_fact .)
    INPUT           reduce using rule 117 (termino -> factor quad_fact .)
    RBRACE          reduce using rule 117 (termino -> factor quad_fact .)
    TIMES           shift and go to state 173
    DIVIDE          shift and go to state 171

    termino1                       shift and go to state 172

state 132

    (131) var_cte -> CTE_F push_cte .

    TIMES           reduce using rule 131 (var_cte -> CTE_F push_cte .)
    DIVIDE          reduce using rule 131 (var_cte -> CTE_F push_cte .)
    PLUS            reduce using rule 131 (var_cte -> CTE_F push_cte .)
    MINUS           reduce using rule 131 (var_cte -> CTE_F push_cte .)
    LOWERTHAN       reduce using rule 131 (var_cte -> CTE_F push_cte .)
    MORETHAN        reduce using rule 131 (var_cte -> CTE_F push_cte .)
    DIFFERENT       reduce using rule 131 (var_cte -> CTE_F push_cte .)
    DOUBLEEQUAL     reduce using rule 131 (var_cte -> CTE_F push_cte .)
    LOWEREQUAL      reduce using rule 131 (var_cte -> CTE_F push_cte .)
    MOREEQUAL       reduce using rule 131 (var_cte -> CTE_F push_cte .)
    COMA            reduce using rule 131 (var_cte -> CTE_F push_cte .)
    RPAREN          reduce using rule 131 (var_cte -> CTE_F push_cte .)
    SEMICOLON       reduce using rule 131 (var_cte -> CTE_F push_cte .)
    RCORCH          reduce using rule 131 (var_cte -> CTE_F push_cte .)
    ID              reduce using rule 131 (var_cte -> CTE_F push_cte .)
    IF              reduce using rule 131 (var_cte -> CTE_F push_cte .)
    PRINT           reduce using rule 131 (var_cte -> CTE_F push_cte .)
    WHILE           reduce using rule 131 (var_cte -> CTE_F push_cte .)
    FROM            reduce using rule 131 (var_cte -> CTE_F push_cte .)
    INPUT           reduce using rule 131 (var_cte -> CTE_F push_cte .)
    RBRACE          reduce using rule 131 (var_cte -> CTE_F push_cte .)


state 133

    (132) var_cte -> CTE_STRING push_cte .

    TIMES           reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    DIVIDE          reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    PLUS            reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    MINUS           reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    LOWERTHAN       reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    MORETHAN        reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    DIFFERENT       reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    DOUBLEEQUAL     reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    LOWEREQUAL      reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    MOREEQUAL       reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    COMA            reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    RPAREN          reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    SEMICOLON       reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    RCORCH          reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    ID              reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    IF              reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    PRINT           reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    WHILE           reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    FROM            reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    INPUT           reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    RBRACE          reduce using rule 132 (var_cte -> CTE_STRING push_cte .)


state 134

    (130) var_cte -> CTE_I push_cte .

    TIMES           reduce using rule 130 (var_cte -> CTE_I push_cte .)
    DIVIDE          reduce using rule 130 (var_cte -> CTE_I push_cte .)
    PLUS            reduce using rule 130 (var_cte -> CTE_I push_cte .)
    MINUS           reduce using rule 130 (var_cte -> CTE_I push_cte .)
    LOWERTHAN       reduce using rule 130 (var_cte -> CTE_I push_cte .)
    MORETHAN        reduce using rule 130 (var_cte -> CTE_I push_cte .)
    DIFFERENT       reduce using rule 130 (var_cte -> CTE_I push_cte .)
    DOUBLEEQUAL     reduce using rule 130 (var_cte -> CTE_I push_cte .)
    LOWEREQUAL      reduce using rule 130 (var_cte -> CTE_I push_cte .)
    MOREEQUAL       reduce using rule 130 (var_cte -> CTE_I push_cte .)
    COMA            reduce using rule 130 (var_cte -> CTE_I push_cte .)
    RPAREN          reduce using rule 130 (var_cte -> CTE_I push_cte .)
    SEMICOLON       reduce using rule 130 (var_cte -> CTE_I push_cte .)
    RCORCH          reduce using rule 130 (var_cte -> CTE_I push_cte .)
    ID              reduce using rule 130 (var_cte -> CTE_I push_cte .)
    IF              reduce using rule 130 (var_cte -> CTE_I push_cte .)
    PRINT           reduce using rule 130 (var_cte -> CTE_I push_cte .)
    WHILE           reduce using rule 130 (var_cte -> CTE_I push_cte .)
    FROM            reduce using rule 130 (var_cte -> CTE_I push_cte .)
    INPUT           reduce using rule 130 (var_cte -> CTE_I push_cte .)
    RBRACE          reduce using rule 130 (var_cte -> CTE_I push_cte .)


state 135

    (121) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 174


state 136

    (129) var_cte -> ID push_id .
    (81) arreglo -> ID push_id . LCORCH exp RCORCH ver_dim1

    TIMES           reduce using rule 129 (var_cte -> ID push_id .)
    DIVIDE          reduce using rule 129 (var_cte -> ID push_id .)
    PLUS            reduce using rule 129 (var_cte -> ID push_id .)
    MINUS           reduce using rule 129 (var_cte -> ID push_id .)
    LOWERTHAN       reduce using rule 129 (var_cte -> ID push_id .)
    MORETHAN        reduce using rule 129 (var_cte -> ID push_id .)
    DIFFERENT       reduce using rule 129 (var_cte -> ID push_id .)
    DOUBLEEQUAL     reduce using rule 129 (var_cte -> ID push_id .)
    LOWEREQUAL      reduce using rule 129 (var_cte -> ID push_id .)
    MOREEQUAL       reduce using rule 129 (var_cte -> ID push_id .)
    COMA            reduce using rule 129 (var_cte -> ID push_id .)
    RPAREN          reduce using rule 129 (var_cte -> ID push_id .)
    SEMICOLON       reduce using rule 129 (var_cte -> ID push_id .)
    RCORCH          reduce using rule 129 (var_cte -> ID push_id .)
    ID              reduce using rule 129 (var_cte -> ID push_id .)
    IF              reduce using rule 129 (var_cte -> ID push_id .)
    PRINT           reduce using rule 129 (var_cte -> ID push_id .)
    WHILE           reduce using rule 129 (var_cte -> ID push_id .)
    FROM            reduce using rule 129 (var_cte -> ID push_id .)
    INPUT           reduce using rule 129 (var_cte -> ID push_id .)
    RBRACE          reduce using rule 129 (var_cte -> ID push_id .)
    LCORCH          shift and go to state 111


state 137

    (89) condicion -> IF LPAREN expresion RPAREN . cond bloque condFinal
    (90) condicion -> IF LPAREN expresion RPAREN . cond bloque ELSE condElse bloque condFinal
    (91) cond -> .

    LBRACE          reduce using rule 91 (cond -> .)

    cond                           shift and go to state 175

state 138

    (109) comp -> MOREEQUAL . push_poper
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)
    PLUS            reduce using rule 128 (push_poper -> .)
    MINUS           reduce using rule 128 (push_poper -> .)
    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 176

state 139

    (106) comp -> DIFFERENT . push_poper
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)
    PLUS            reduce using rule 128 (push_poper -> .)
    MINUS           reduce using rule 128 (push_poper -> .)
    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 177

state 140

    (107) comp -> DOUBLEEQUAL . push_poper
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)
    PLUS            reduce using rule 128 (push_poper -> .)
    MINUS           reduce using rule 128 (push_poper -> .)
    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 178

state 141

    (104) comp -> LOWERTHAN . push_poper
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)
    PLUS            reduce using rule 128 (push_poper -> .)
    MINUS           reduce using rule 128 (push_poper -> .)
    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 179

state 142

    (103) expresion -> exp comp . exp quad_comp
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    factor                         shift and go to state 97
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    exp                            shift and go to state 180
    factorAux                      shift and go to state 105
    var_cte                        shift and go to state 92

state 143

    (108) comp -> LOWEREQUAL . push_poper
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)
    PLUS            reduce using rule 128 (push_poper -> .)
    MINUS           reduce using rule 128 (push_poper -> .)
    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 181

state 144

    (105) comp -> MORETHAN . push_poper
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)
    PLUS            reduce using rule 128 (push_poper -> .)
    MINUS           reduce using rule 128 (push_poper -> .)
    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 182

state 145

    (19) varAux1 -> tipo varAux2 SEMICOLON .
    (20) varAux1 -> tipo varAux2 SEMICOLON . varAux1
    (19) varAux1 -> . tipo varAux2 SEMICOLON
    (20) varAux1 -> . tipo varAux2 SEMICOLON varAux1
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR

    ID              reduce using rule 19 (varAux1 -> tipo varAux2 SEMICOLON .)
    IF              reduce using rule 19 (varAux1 -> tipo varAux2 SEMICOLON .)
    PRINT           reduce using rule 19 (varAux1 -> tipo varAux2 SEMICOLON .)
    WHILE           reduce using rule 19 (varAux1 -> tipo varAux2 SEMICOLON .)
    FROM            reduce using rule 19 (varAux1 -> tipo varAux2 SEMICOLON .)
    INPUT           reduce using rule 19 (varAux1 -> tipo varAux2 SEMICOLON .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAux1                        shift and go to state 183
    tipo                           shift and go to state 76

state 146

    (23) varAux2 -> ID LCORCH . CTE_I RCORCH push_arreglo
    (24) varAux2 -> ID LCORCH . CTE_I RCORCH push_arreglo COMA varAux2
    (25) varAux2 -> ID LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> ID LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    CTE_I           shift and go to state 184


state 147

    (21) varAux2 -> ID push_var .
    (22) varAux2 -> ID push_var . COMA varAux2

    SEMICOLON       reduce using rule 21 (varAux2 -> ID push_var .)
    COMA            shift and go to state 185


state 148

    (95) lectura -> INPUT push_poper LPAREN ID . push_id RPAREN quad_print SEMICOLON
    (126) push_id -> .

    RPAREN          reduce using rule 126 (push_id -> .)

    push_id                        shift and go to state 186

state 149

    (70) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN . paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN . paramFuncion gosub RPAREN SEMICOLON
    (75) paramFuncion -> . ID push_id2
    (76) paramFuncion -> . ID push_id2 COMA paramFuncion
    (77) paramFuncion -> . expresion
    (78) paramFuncion -> . expresion COMA paramFuncion
    (79) paramFuncion -> . empty
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (52) empty -> .
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    ID              shift and go to state 189
    RPAREN          reduce using rule 52 (empty -> .)
    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    paramFuncion                   shift and go to state 187
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    factor                         shift and go to state 97
    empty                          shift and go to state 188
    expresion                      shift and go to state 190
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105
    var_cte                        shift and go to state 92

state 150

    (88) comparacion -> ID push_id DOUBLEEQUAL push_poper . expresion SEMICOLON
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    expresion                      shift and go to state 191
    factor                         shift and go to state 97
    var_cte                        shift and go to state 92
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105

state 151

    (81) arreglo -> ID push_id LCORCH exp . RCORCH ver_dim1

    RCORCH          shift and go to state 192


state 152

    (82) asignacion -> ID push_id EQUAL push_poper . expresion create_asign SEMICOLON
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    expresion                      shift and go to state 193
    var_cte                        shift and go to state 92
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105
    factor                         shift and go to state 97

state 153

    (61) loopFromDo -> FROM LPAREN ID EQUAL . expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    expresion                      shift and go to state 194
    factor                         shift and go to state 97
    var_cte                        shift and go to state 92
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105

state 154

    (57) while -> WHILE while1 LPAREN expresion . RPAREN while2 LBRACE bloqueAux RBRACE while3

    RPAREN          shift and go to state 195


state 155

    (13) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH
    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH COMA varAuxGlobal2

    RCORCH          shift and go to state 196


state 156

    (12) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH COMA varAuxGlobal2 .

    SEMICOLON       reduce using rule 12 (varAuxGlobal2 -> ID LCORCH CTE_I RCORCH COMA varAuxGlobal2 .)


state 157

    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function .

    MAIN            reduce using rule 41 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function .)


state 158

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE . endProc
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE . endProc function
    (47) endProc -> .

    FUNCTION        reduce using rule 47 (endProc -> .)
    MAIN            reduce using rule 47 (endProc -> .)

    endProc                        shift and go to state 197

state 159

    (43) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc .
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc . function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    MAIN            reduce using rule 43 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 198

state 160

    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux . RBRACE endProc
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux . RBRACE endProc function

    RBRACE          shift and go to state 199


state 161

    (49) param -> tipo ID paramAvarTable COMA param .

    RPAREN          reduce using rule 49 (param -> tipo ID paramAvarTable COMA param .)


state 162

    (83) asignacion -> arreglo EQUAL push_poper expresion create_asign . SEMICOLON

    SEMICOLON       shift and go to state 200


state 163

    (98) escrituraAux -> CTE_STRING push_cte .
    (100) escrituraAux -> CTE_STRING push_cte . COMA escrituraAux
    (132) var_cte -> CTE_STRING push_cte .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 98 (escrituraAux -> CTE_STRING push_cte .)
    RPAREN          reduce using rule 98 (escrituraAux -> CTE_STRING push_cte .)
    COMA            shift and go to state 201
    TIMES           reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    DIVIDE          reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    PLUS            reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    MINUS           reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    LOWERTHAN       reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    MORETHAN        reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    DIFFERENT       reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    DOUBLEEQUAL     reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    LOWEREQUAL      reduce using rule 132 (var_cte -> CTE_STRING push_cte .)
    MOREEQUAL       reduce using rule 132 (var_cte -> CTE_STRING push_cte .)

  ! COMA            [ reduce using rule 132 (var_cte -> CTE_STRING push_cte .) ]
  ! RPAREN          [ reduce using rule 132 (var_cte -> CTE_STRING push_cte .) ]


state 164

    (99) escrituraAux -> expresion COMA . escrituraAux
    (97) escrituraAux -> . expresion
    (98) escrituraAux -> . CTE_STRING push_cte
    (99) escrituraAux -> . expresion COMA escrituraAux
    (100) escrituraAux -> . CTE_STRING push_cte COMA escrituraAux
    (101) escrituraAux -> . llamadaAFuncion
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    CTE_STRING      shift and go to state 123
    ID              shift and go to state 125
    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98

    var_cte                        shift and go to state 92
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    factor                         shift and go to state 97
    escrituraAux                   shift and go to state 202
    expresion                      shift and go to state 124
    llamadaAFuncion                shift and go to state 127
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105

state 165

    (94) escritura -> PRINT push_poper LPAREN escrituraAux RPAREN . quad_print SEMICOLON
    (96) quad_print -> .

    SEMICOLON       reduce using rule 96 (quad_print -> .)

    quad_print                     shift and go to state 203

state 166

    (112) exp -> termino quad_term exp1 .

    LOWERTHAN       reduce using rule 112 (exp -> termino quad_term exp1 .)
    MORETHAN        reduce using rule 112 (exp -> termino quad_term exp1 .)
    DIFFERENT       reduce using rule 112 (exp -> termino quad_term exp1 .)
    DOUBLEEQUAL     reduce using rule 112 (exp -> termino quad_term exp1 .)
    LOWEREQUAL      reduce using rule 112 (exp -> termino quad_term exp1 .)
    MOREEQUAL       reduce using rule 112 (exp -> termino quad_term exp1 .)
    RPAREN          reduce using rule 112 (exp -> termino quad_term exp1 .)
    SEMICOLON       reduce using rule 112 (exp -> termino quad_term exp1 .)
    COMA            reduce using rule 112 (exp -> termino quad_term exp1 .)
    RCORCH          reduce using rule 112 (exp -> termino quad_term exp1 .)
    ID              reduce using rule 112 (exp -> termino quad_term exp1 .)
    IF              reduce using rule 112 (exp -> termino quad_term exp1 .)
    PRINT           reduce using rule 112 (exp -> termino quad_term exp1 .)
    WHILE           reduce using rule 112 (exp -> termino quad_term exp1 .)
    FROM            reduce using rule 112 (exp -> termino quad_term exp1 .)
    INPUT           reduce using rule 112 (exp -> termino quad_term exp1 .)
    RBRACE          reduce using rule 112 (exp -> termino quad_term exp1 .)


state 167

    (113) exp1 -> PLUS . push_poper exp
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)
    PLUS            reduce using rule 128 (push_poper -> .)
    MINUS           reduce using rule 128 (push_poper -> .)
    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 204

state 168

    (114) exp1 -> MINUS . push_poper exp
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)
    PLUS            reduce using rule 128 (push_poper -> .)
    MINUS           reduce using rule 128 (push_poper -> .)
    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 205

state 169

    (124) factorAux -> MINUS push_poper var_cte .

    TIMES           reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    DIVIDE          reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    PLUS            reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    MINUS           reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    RPAREN          reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    SEMICOLON       reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    COMA            reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    ID              reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    IF              reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    PRINT           reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    WHILE           reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    FROM            reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    INPUT           reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    RBRACE          reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    LOWERTHAN       reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    MORETHAN        reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    DIFFERENT       reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    DOUBLEEQUAL     reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    LOWEREQUAL      reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    MOREEQUAL       reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)
    RCORCH          reduce using rule 124 (factorAux -> MINUS push_poper var_cte .)


state 170

    (123) factorAux -> PLUS push_poper var_cte .

    TIMES           reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    DIVIDE          reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    PLUS            reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    MINUS           reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    RPAREN          reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    SEMICOLON       reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    COMA            reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    ID              reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    IF              reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    PRINT           reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    WHILE           reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    FROM            reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    INPUT           reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    RBRACE          reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    LOWERTHAN       reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    MORETHAN        reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    DIFFERENT       reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    DOUBLEEQUAL     reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    LOWEREQUAL      reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    MOREEQUAL       reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)
    RCORCH          reduce using rule 123 (factorAux -> PLUS push_poper var_cte .)


state 171

    (120) termino1 -> DIVIDE . push_poper termino
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)
    PLUS            reduce using rule 128 (push_poper -> .)
    MINUS           reduce using rule 128 (push_poper -> .)
    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 206

state 172

    (118) termino -> factor quad_fact termino1 .

    PLUS            reduce using rule 118 (termino -> factor quad_fact termino1 .)
    MINUS           reduce using rule 118 (termino -> factor quad_fact termino1 .)
    LOWERTHAN       reduce using rule 118 (termino -> factor quad_fact termino1 .)
    MORETHAN        reduce using rule 118 (termino -> factor quad_fact termino1 .)
    DIFFERENT       reduce using rule 118 (termino -> factor quad_fact termino1 .)
    DOUBLEEQUAL     reduce using rule 118 (termino -> factor quad_fact termino1 .)
    LOWEREQUAL      reduce using rule 118 (termino -> factor quad_fact termino1 .)
    MOREEQUAL       reduce using rule 118 (termino -> factor quad_fact termino1 .)
    RPAREN          reduce using rule 118 (termino -> factor quad_fact termino1 .)
    SEMICOLON       reduce using rule 118 (termino -> factor quad_fact termino1 .)
    COMA            reduce using rule 118 (termino -> factor quad_fact termino1 .)
    RCORCH          reduce using rule 118 (termino -> factor quad_fact termino1 .)
    ID              reduce using rule 118 (termino -> factor quad_fact termino1 .)
    IF              reduce using rule 118 (termino -> factor quad_fact termino1 .)
    PRINT           reduce using rule 118 (termino -> factor quad_fact termino1 .)
    WHILE           reduce using rule 118 (termino -> factor quad_fact termino1 .)
    FROM            reduce using rule 118 (termino -> factor quad_fact termino1 .)
    INPUT           reduce using rule 118 (termino -> factor quad_fact termino1 .)
    RBRACE          reduce using rule 118 (termino -> factor quad_fact termino1 .)


state 173

    (119) termino1 -> TIMES . push_poper termino
    (128) push_poper -> .

    LPAREN          reduce using rule 128 (push_poper -> .)
    PLUS            reduce using rule 128 (push_poper -> .)
    MINUS           reduce using rule 128 (push_poper -> .)
    ID              reduce using rule 128 (push_poper -> .)
    CTE_I           reduce using rule 128 (push_poper -> .)
    CTE_F           reduce using rule 128 (push_poper -> .)
    CTE_STRING      reduce using rule 128 (push_poper -> .)

    push_poper                     shift and go to state 207

state 174

    (121) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    LOWERTHAN       reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    MORETHAN        reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    DIFFERENT       reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    DOUBLEEQUAL     reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    LOWEREQUAL      reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    MOREEQUAL       reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    COMA            reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    RCORCH          reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    FROM            reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    INPUT           reduce using rule 121 (factor -> LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 121 (factor -> LPAREN expresion RPAREN .)


state 175

    (89) condicion -> IF LPAREN expresion RPAREN cond . bloque condFinal
    (90) condicion -> IF LPAREN expresion RPAREN cond . bloque ELSE condElse bloque condFinal
    (37) bloque -> . LBRACE RBRACE
    (38) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 208

    bloque                         shift and go to state 209

state 176

    (109) comp -> MOREEQUAL push_poper .

    LPAREN          reduce using rule 109 (comp -> MOREEQUAL push_poper .)
    PLUS            reduce using rule 109 (comp -> MOREEQUAL push_poper .)
    MINUS           reduce using rule 109 (comp -> MOREEQUAL push_poper .)
    ID              reduce using rule 109 (comp -> MOREEQUAL push_poper .)
    CTE_I           reduce using rule 109 (comp -> MOREEQUAL push_poper .)
    CTE_F           reduce using rule 109 (comp -> MOREEQUAL push_poper .)
    CTE_STRING      reduce using rule 109 (comp -> MOREEQUAL push_poper .)


state 177

    (106) comp -> DIFFERENT push_poper .

    LPAREN          reduce using rule 106 (comp -> DIFFERENT push_poper .)
    PLUS            reduce using rule 106 (comp -> DIFFERENT push_poper .)
    MINUS           reduce using rule 106 (comp -> DIFFERENT push_poper .)
    ID              reduce using rule 106 (comp -> DIFFERENT push_poper .)
    CTE_I           reduce using rule 106 (comp -> DIFFERENT push_poper .)
    CTE_F           reduce using rule 106 (comp -> DIFFERENT push_poper .)
    CTE_STRING      reduce using rule 106 (comp -> DIFFERENT push_poper .)


state 178

    (107) comp -> DOUBLEEQUAL push_poper .

    LPAREN          reduce using rule 107 (comp -> DOUBLEEQUAL push_poper .)
    PLUS            reduce using rule 107 (comp -> DOUBLEEQUAL push_poper .)
    MINUS           reduce using rule 107 (comp -> DOUBLEEQUAL push_poper .)
    ID              reduce using rule 107 (comp -> DOUBLEEQUAL push_poper .)
    CTE_I           reduce using rule 107 (comp -> DOUBLEEQUAL push_poper .)
    CTE_F           reduce using rule 107 (comp -> DOUBLEEQUAL push_poper .)
    CTE_STRING      reduce using rule 107 (comp -> DOUBLEEQUAL push_poper .)


state 179

    (104) comp -> LOWERTHAN push_poper .

    LPAREN          reduce using rule 104 (comp -> LOWERTHAN push_poper .)
    PLUS            reduce using rule 104 (comp -> LOWERTHAN push_poper .)
    MINUS           reduce using rule 104 (comp -> LOWERTHAN push_poper .)
    ID              reduce using rule 104 (comp -> LOWERTHAN push_poper .)
    CTE_I           reduce using rule 104 (comp -> LOWERTHAN push_poper .)
    CTE_F           reduce using rule 104 (comp -> LOWERTHAN push_poper .)
    CTE_STRING      reduce using rule 104 (comp -> LOWERTHAN push_poper .)


state 180

    (103) expresion -> exp comp exp . quad_comp
    (110) quad_comp -> .

    RPAREN          reduce using rule 110 (quad_comp -> .)
    SEMICOLON       reduce using rule 110 (quad_comp -> .)
    COMA            reduce using rule 110 (quad_comp -> .)
    ID              reduce using rule 110 (quad_comp -> .)
    IF              reduce using rule 110 (quad_comp -> .)
    PRINT           reduce using rule 110 (quad_comp -> .)
    WHILE           reduce using rule 110 (quad_comp -> .)
    FROM            reduce using rule 110 (quad_comp -> .)
    INPUT           reduce using rule 110 (quad_comp -> .)
    RBRACE          reduce using rule 110 (quad_comp -> .)

    quad_comp                      shift and go to state 210

state 181

    (108) comp -> LOWEREQUAL push_poper .

    LPAREN          reduce using rule 108 (comp -> LOWEREQUAL push_poper .)
    PLUS            reduce using rule 108 (comp -> LOWEREQUAL push_poper .)
    MINUS           reduce using rule 108 (comp -> LOWEREQUAL push_poper .)
    ID              reduce using rule 108 (comp -> LOWEREQUAL push_poper .)
    CTE_I           reduce using rule 108 (comp -> LOWEREQUAL push_poper .)
    CTE_F           reduce using rule 108 (comp -> LOWEREQUAL push_poper .)
    CTE_STRING      reduce using rule 108 (comp -> LOWEREQUAL push_poper .)


state 182

    (105) comp -> MORETHAN push_poper .

    LPAREN          reduce using rule 105 (comp -> MORETHAN push_poper .)
    PLUS            reduce using rule 105 (comp -> MORETHAN push_poper .)
    MINUS           reduce using rule 105 (comp -> MORETHAN push_poper .)
    ID              reduce using rule 105 (comp -> MORETHAN push_poper .)
    CTE_I           reduce using rule 105 (comp -> MORETHAN push_poper .)
    CTE_F           reduce using rule 105 (comp -> MORETHAN push_poper .)
    CTE_STRING      reduce using rule 105 (comp -> MORETHAN push_poper .)


state 183

    (20) varAux1 -> tipo varAux2 SEMICOLON varAux1 .

    ID              reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    IF              reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    PRINT           reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    WHILE           reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    FROM            reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    INPUT           reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)


state 184

    (23) varAux2 -> ID LCORCH CTE_I . RCORCH push_arreglo
    (24) varAux2 -> ID LCORCH CTE_I . RCORCH push_arreglo COMA varAux2
    (25) varAux2 -> ID LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> ID LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    RCORCH          shift and go to state 211


state 185

    (22) varAux2 -> ID push_var COMA . varAux2
    (21) varAux2 -> . ID push_var
    (22) varAux2 -> . ID push_var COMA varAux2
    (23) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo
    (24) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (25) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    ID              shift and go to state 107

    varAux2                        shift and go to state 212

state 186

    (95) lectura -> INPUT push_poper LPAREN ID push_id . RPAREN quad_print SEMICOLON

    RPAREN          shift and go to state 213


state 187

    (70) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion . gosub RPAREN expresion
    (71) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion . gosub RPAREN SEMICOLON
    (73) gosub -> .

    RPAREN          reduce using rule 73 (gosub -> .)

    gosub                          shift and go to state 214

state 188

    (79) paramFuncion -> empty .

    RPAREN          reduce using rule 79 (paramFuncion -> empty .)


state 189

    (75) paramFuncion -> ID . push_id2
    (76) paramFuncion -> ID . push_id2 COMA paramFuncion
    (129) var_cte -> ID . push_id
    (81) arreglo -> ID . push_id LCORCH exp RCORCH ver_dim1
    (80) push_id2 -> .
    (126) push_id -> .

  ! reduce/reduce conflict for COMA resolved using rule 80 (push_id2 -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 80 (push_id2 -> .)
    COMA            reduce using rule 80 (push_id2 -> .)
    RPAREN          reduce using rule 80 (push_id2 -> .)
    LCORCH          reduce using rule 126 (push_id -> .)
    TIMES           reduce using rule 126 (push_id -> .)
    DIVIDE          reduce using rule 126 (push_id -> .)
    PLUS            reduce using rule 126 (push_id -> .)
    MINUS           reduce using rule 126 (push_id -> .)
    LOWERTHAN       reduce using rule 126 (push_id -> .)
    MORETHAN        reduce using rule 126 (push_id -> .)
    DIFFERENT       reduce using rule 126 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 126 (push_id -> .)
    LOWEREQUAL      reduce using rule 126 (push_id -> .)
    MOREEQUAL       reduce using rule 126 (push_id -> .)

  ! COMA            [ reduce using rule 126 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 126 (push_id -> .) ]

    push_id                        shift and go to state 136
    push_id2                       shift and go to state 215

state 190

    (77) paramFuncion -> expresion .
    (78) paramFuncion -> expresion . COMA paramFuncion

    RPAREN          reduce using rule 77 (paramFuncion -> expresion .)
    COMA            shift and go to state 216


state 191

    (88) comparacion -> ID push_id DOUBLEEQUAL push_poper expresion . SEMICOLON

    SEMICOLON       shift and go to state 217


state 192

    (81) arreglo -> ID push_id LCORCH exp RCORCH . ver_dim1
    (86) ver_dim1 -> .

    EQUAL           reduce using rule 86 (ver_dim1 -> .)
    TIMES           reduce using rule 86 (ver_dim1 -> .)
    DIVIDE          reduce using rule 86 (ver_dim1 -> .)
    PLUS            reduce using rule 86 (ver_dim1 -> .)
    MINUS           reduce using rule 86 (ver_dim1 -> .)
    LOWERTHAN       reduce using rule 86 (ver_dim1 -> .)
    MORETHAN        reduce using rule 86 (ver_dim1 -> .)
    DIFFERENT       reduce using rule 86 (ver_dim1 -> .)
    DOUBLEEQUAL     reduce using rule 86 (ver_dim1 -> .)
    LOWEREQUAL      reduce using rule 86 (ver_dim1 -> .)
    MOREEQUAL       reduce using rule 86 (ver_dim1 -> .)
    RPAREN          reduce using rule 86 (ver_dim1 -> .)
    SEMICOLON       reduce using rule 86 (ver_dim1 -> .)
    COMA            reduce using rule 86 (ver_dim1 -> .)
    RCORCH          reduce using rule 86 (ver_dim1 -> .)
    ID              reduce using rule 86 (ver_dim1 -> .)
    IF              reduce using rule 86 (ver_dim1 -> .)
    PRINT           reduce using rule 86 (ver_dim1 -> .)
    WHILE           reduce using rule 86 (ver_dim1 -> .)
    FROM            reduce using rule 86 (ver_dim1 -> .)
    INPUT           reduce using rule 86 (ver_dim1 -> .)
    RBRACE          reduce using rule 86 (ver_dim1 -> .)

    ver_dim1                       shift and go to state 218

state 193

    (82) asignacion -> ID push_id EQUAL push_poper expresion . create_asign SEMICOLON
    (87) create_asign -> .

    SEMICOLON       reduce using rule 87 (create_asign -> .)

    create_asign                   shift and go to state 219

state 194

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion . RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    RPAREN          shift and go to state 220


state 195

    (57) while -> WHILE while1 LPAREN expresion RPAREN . while2 LBRACE bloqueAux RBRACE while3
    (59) while2 -> .

    LBRACE          reduce using rule 59 (while2 -> .)

    while2                         shift and go to state 221

state 196

    (13) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH .
    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH . COMA varAuxGlobal2

    SEMICOLON       reduce using rule 13 (varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH .)
    COMA            shift and go to state 222


state 197

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc .
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc . function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    MAIN            reduce using rule 40 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 223

state 198

    (45) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function .

    MAIN            reduce using rule 45 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function .)


state 199

    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE . endProc
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE . endProc function
    (47) endProc -> .

    FUNCTION        reduce using rule 47 (endProc -> .)
    MAIN            reduce using rule 47 (endProc -> .)

    endProc                        shift and go to state 224

state 200

    (83) asignacion -> arreglo EQUAL push_poper expresion create_asign SEMICOLON .

    ID              reduce using rule 83 (asignacion -> arreglo EQUAL push_poper expresion create_asign SEMICOLON .)
    IF              reduce using rule 83 (asignacion -> arreglo EQUAL push_poper expresion create_asign SEMICOLON .)
    PRINT           reduce using rule 83 (asignacion -> arreglo EQUAL push_poper expresion create_asign SEMICOLON .)
    WHILE           reduce using rule 83 (asignacion -> arreglo EQUAL push_poper expresion create_asign SEMICOLON .)
    FROM            reduce using rule 83 (asignacion -> arreglo EQUAL push_poper expresion create_asign SEMICOLON .)
    INPUT           reduce using rule 83 (asignacion -> arreglo EQUAL push_poper expresion create_asign SEMICOLON .)
    RBRACE          reduce using rule 83 (asignacion -> arreglo EQUAL push_poper expresion create_asign SEMICOLON .)


state 201

    (100) escrituraAux -> CTE_STRING push_cte COMA . escrituraAux
    (97) escrituraAux -> . expresion
    (98) escrituraAux -> . CTE_STRING push_cte
    (99) escrituraAux -> . expresion COMA escrituraAux
    (100) escrituraAux -> . CTE_STRING push_cte COMA escrituraAux
    (101) escrituraAux -> . llamadaAFuncion
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    CTE_STRING      shift and go to state 123
    ID              shift and go to state 125
    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98

    var_cte                        shift and go to state 92
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    factor                         shift and go to state 97
    expresion                      shift and go to state 124
    escrituraAux                   shift and go to state 225
    llamadaAFuncion                shift and go to state 127
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105

state 202

    (99) escrituraAux -> expresion COMA escrituraAux .

    RPAREN          reduce using rule 99 (escrituraAux -> expresion COMA escrituraAux .)


state 203

    (94) escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print . SEMICOLON

    SEMICOLON       shift and go to state 226


state 204

    (113) exp1 -> PLUS push_poper . exp
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    exp                            shift and go to state 227
    factor                         shift and go to state 97
    factorAux                      shift and go to state 105
    var_cte                        shift and go to state 92

state 205

    (114) exp1 -> MINUS push_poper . exp
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    exp                            shift and go to state 228
    factor                         shift and go to state 97
    factorAux                      shift and go to state 105
    var_cte                        shift and go to state 92

state 206

    (120) termino1 -> DIVIDE push_poper . termino
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    arreglo                        shift and go to state 93
    termino                        shift and go to state 229
    factor                         shift and go to state 97
    factorAux                      shift and go to state 105
    var_cte                        shift and go to state 92

state 207

    (119) termino1 -> TIMES push_poper . termino
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    arreglo                        shift and go to state 93
    termino                        shift and go to state 230
    factor                         shift and go to state 97
    factorAux                      shift and go to state 105
    var_cte                        shift and go to state 92

state 208

    (37) bloque -> LBRACE . RBRACE
    (38) bloque -> LBRACE . bloqueAux RBRACE
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (82) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (83) asignacion -> . arreglo EQUAL push_poper expresion create_asign SEMICOLON
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (90) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (94) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (88) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (95) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    RBRACE          shift and go to state 231
    ID              shift and go to state 55
    IF              shift and go to state 50
    PRINT           shift and go to state 48
    WHILE           shift and go to state 60
    FROM            shift and go to state 58
    INPUT           shift and go to state 54

    arreglo                        shift and go to state 47
    estatuto                       shift and go to state 49
    condicion                      shift and go to state 52
    lectura                        shift and go to state 51
    loopFromDo                     shift and go to state 56
    llamadaAFuncion                shift and go to state 57
    asignacion                     shift and go to state 59
    bloqueAux                      shift and go to state 232
    while                          shift and go to state 62
    comparacion                    shift and go to state 63
    escritura                      shift and go to state 64

state 209

    (89) condicion -> IF LPAREN expresion RPAREN cond bloque . condFinal
    (90) condicion -> IF LPAREN expresion RPAREN cond bloque . ELSE condElse bloque condFinal
    (93) condFinal -> .

    ELSE            shift and go to state 234
    ID              reduce using rule 93 (condFinal -> .)
    IF              reduce using rule 93 (condFinal -> .)
    PRINT           reduce using rule 93 (condFinal -> .)
    WHILE           reduce using rule 93 (condFinal -> .)
    FROM            reduce using rule 93 (condFinal -> .)
    INPUT           reduce using rule 93 (condFinal -> .)
    RBRACE          reduce using rule 93 (condFinal -> .)

    condFinal                      shift and go to state 233

state 210

    (103) expresion -> exp comp exp quad_comp .

    COMA            reduce using rule 103 (expresion -> exp comp exp quad_comp .)
    RPAREN          reduce using rule 103 (expresion -> exp comp exp quad_comp .)
    SEMICOLON       reduce using rule 103 (expresion -> exp comp exp quad_comp .)
    ID              reduce using rule 103 (expresion -> exp comp exp quad_comp .)
    IF              reduce using rule 103 (expresion -> exp comp exp quad_comp .)
    PRINT           reduce using rule 103 (expresion -> exp comp exp quad_comp .)
    WHILE           reduce using rule 103 (expresion -> exp comp exp quad_comp .)
    FROM            reduce using rule 103 (expresion -> exp comp exp quad_comp .)
    INPUT           reduce using rule 103 (expresion -> exp comp exp quad_comp .)
    RBRACE          reduce using rule 103 (expresion -> exp comp exp quad_comp .)


state 211

    (23) varAux2 -> ID LCORCH CTE_I RCORCH . push_arreglo
    (24) varAux2 -> ID LCORCH CTE_I RCORCH . push_arreglo COMA varAux2
    (25) varAux2 -> ID LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> ID LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH push_matriz COMA varAux2
    (28) push_arreglo -> .

    LCORCH          shift and go to state 235
    COMA            reduce using rule 28 (push_arreglo -> .)
    SEMICOLON       reduce using rule 28 (push_arreglo -> .)

    push_arreglo                   shift and go to state 236

state 212

    (22) varAux2 -> ID push_var COMA varAux2 .

    SEMICOLON       reduce using rule 22 (varAux2 -> ID push_var COMA varAux2 .)


state 213

    (95) lectura -> INPUT push_poper LPAREN ID push_id RPAREN . quad_print SEMICOLON
    (96) quad_print -> .

    SEMICOLON       reduce using rule 96 (quad_print -> .)

    quad_print                     shift and go to state 237

state 214

    (70) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub . RPAREN expresion
    (71) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub . RPAREN SEMICOLON

    RPAREN          shift and go to state 238


state 215

    (75) paramFuncion -> ID push_id2 .
    (76) paramFuncion -> ID push_id2 . COMA paramFuncion

    RPAREN          reduce using rule 75 (paramFuncion -> ID push_id2 .)
    COMA            shift and go to state 239


state 216

    (78) paramFuncion -> expresion COMA . paramFuncion
    (75) paramFuncion -> . ID push_id2
    (76) paramFuncion -> . ID push_id2 COMA paramFuncion
    (77) paramFuncion -> . expresion
    (78) paramFuncion -> . expresion COMA paramFuncion
    (79) paramFuncion -> . empty
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (52) empty -> .
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    ID              shift and go to state 189
    RPAREN          reduce using rule 52 (empty -> .)
    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    expresion                      shift and go to state 190
    paramFuncion                   shift and go to state 240
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105
    factor                         shift and go to state 97
    var_cte                        shift and go to state 92
    empty                          shift and go to state 188

state 217

    (88) comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .

    ID              reduce using rule 88 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    IF              reduce using rule 88 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    PRINT           reduce using rule 88 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    WHILE           reduce using rule 88 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    FROM            reduce using rule 88 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    INPUT           reduce using rule 88 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    RBRACE          reduce using rule 88 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)


state 218

    (81) arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .

    TIMES           reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    DIVIDE          reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    PLUS            reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    MINUS           reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    LOWERTHAN       reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    MORETHAN        reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    DIFFERENT       reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    DOUBLEEQUAL     reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    LOWEREQUAL      reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    MOREEQUAL       reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    RPAREN          reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    SEMICOLON       reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    COMA            reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    RCORCH          reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    ID              reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    IF              reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    PRINT           reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    WHILE           reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    FROM            reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    INPUT           reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    RBRACE          reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    EQUAL           reduce using rule 81 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)


state 219

    (82) asignacion -> ID push_id EQUAL push_poper expresion create_asign . SEMICOLON

    SEMICOLON       shift and go to state 241


state 220

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN . TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    TO              shift and go to state 242


state 221

    (57) while -> WHILE while1 LPAREN expresion RPAREN while2 . LBRACE bloqueAux RBRACE while3

    LBRACE          shift and go to state 243


state 222

    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA . varAuxGlobal2
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2
    (11) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 244

state 223

    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function .

    MAIN            reduce using rule 42 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function .)


state 224

    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc .
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc . function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    MAIN            reduce using rule 44 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 245

state 225

    (100) escrituraAux -> CTE_STRING push_cte COMA escrituraAux .

    RPAREN          reduce using rule 100 (escrituraAux -> CTE_STRING push_cte COMA escrituraAux .)


state 226

    (94) escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .

    ID              reduce using rule 94 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    IF              reduce using rule 94 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    PRINT           reduce using rule 94 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    WHILE           reduce using rule 94 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    FROM            reduce using rule 94 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    INPUT           reduce using rule 94 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    RBRACE          reduce using rule 94 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)


state 227

    (113) exp1 -> PLUS push_poper exp .

    LOWERTHAN       reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    MORETHAN        reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    DIFFERENT       reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    DOUBLEEQUAL     reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    LOWEREQUAL      reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    MOREEQUAL       reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    RPAREN          reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    SEMICOLON       reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    COMA            reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    RCORCH          reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    ID              reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    IF              reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    PRINT           reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    WHILE           reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    FROM            reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    INPUT           reduce using rule 113 (exp1 -> PLUS push_poper exp .)
    RBRACE          reduce using rule 113 (exp1 -> PLUS push_poper exp .)


state 228

    (114) exp1 -> MINUS push_poper exp .

    LOWERTHAN       reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    MORETHAN        reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    DIFFERENT       reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    DOUBLEEQUAL     reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    LOWEREQUAL      reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    MOREEQUAL       reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    RPAREN          reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    SEMICOLON       reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    COMA            reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    RCORCH          reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    ID              reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    IF              reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    PRINT           reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    WHILE           reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    FROM            reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    INPUT           reduce using rule 114 (exp1 -> MINUS push_poper exp .)
    RBRACE          reduce using rule 114 (exp1 -> MINUS push_poper exp .)


state 229

    (120) termino1 -> DIVIDE push_poper termino .

    PLUS            reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    MINUS           reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    LOWERTHAN       reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    MORETHAN        reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    DIFFERENT       reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    DOUBLEEQUAL     reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    LOWEREQUAL      reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    MOREEQUAL       reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    RPAREN          reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    SEMICOLON       reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    COMA            reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    RCORCH          reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    ID              reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    IF              reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    PRINT           reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    WHILE           reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    FROM            reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    INPUT           reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)
    RBRACE          reduce using rule 120 (termino1 -> DIVIDE push_poper termino .)


state 230

    (119) termino1 -> TIMES push_poper termino .

    PLUS            reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    MINUS           reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    LOWERTHAN       reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    MORETHAN        reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    DIFFERENT       reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    DOUBLEEQUAL     reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    LOWEREQUAL      reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    MOREEQUAL       reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    RPAREN          reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    SEMICOLON       reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    COMA            reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    RCORCH          reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    ID              reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    IF              reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    PRINT           reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    WHILE           reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    FROM            reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    INPUT           reduce using rule 119 (termino1 -> TIMES push_poper termino .)
    RBRACE          reduce using rule 119 (termino1 -> TIMES push_poper termino .)


state 231

    (37) bloque -> LBRACE RBRACE .

    ID              reduce using rule 37 (bloque -> LBRACE RBRACE .)
    IF              reduce using rule 37 (bloque -> LBRACE RBRACE .)
    PRINT           reduce using rule 37 (bloque -> LBRACE RBRACE .)
    WHILE           reduce using rule 37 (bloque -> LBRACE RBRACE .)
    FROM            reduce using rule 37 (bloque -> LBRACE RBRACE .)
    INPUT           reduce using rule 37 (bloque -> LBRACE RBRACE .)
    RBRACE          reduce using rule 37 (bloque -> LBRACE RBRACE .)
    ELSE            reduce using rule 37 (bloque -> LBRACE RBRACE .)


state 232

    (38) bloque -> LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 246


state 233

    (89) condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .

    ID              reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    IF              reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    PRINT           reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    WHILE           reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    FROM            reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    INPUT           reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    RBRACE          reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)


state 234

    (90) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE . condElse bloque condFinal
    (92) condElse -> .

    LBRACE          reduce using rule 92 (condElse -> .)

    condElse                       shift and go to state 247

state 235

    (25) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH push_matriz
    (26) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH push_matriz COMA varAux2

    CTE_I           shift and go to state 248


state 236

    (23) varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo .
    (24) varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo . COMA varAux2

    SEMICOLON       reduce using rule 23 (varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo .)
    COMA            shift and go to state 249


state 237

    (95) lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print . SEMICOLON

    SEMICOLON       shift and go to state 250


state 238

    (70) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN . expresion
    (71) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN . SEMICOLON
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    SEMICOLON       shift and go to state 251
    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    expresion                      shift and go to state 252
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105
    factor                         shift and go to state 97
    var_cte                        shift and go to state 92

state 239

    (76) paramFuncion -> ID push_id2 COMA . paramFuncion
    (75) paramFuncion -> . ID push_id2
    (76) paramFuncion -> . ID push_id2 COMA paramFuncion
    (77) paramFuncion -> . expresion
    (78) paramFuncion -> . expresion COMA paramFuncion
    (79) paramFuncion -> . empty
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (52) empty -> .
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    ID              shift and go to state 189
    RPAREN          reduce using rule 52 (empty -> .)
    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    expresion                      shift and go to state 190
    paramFuncion                   shift and go to state 253
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105
    factor                         shift and go to state 97
    var_cte                        shift and go to state 92
    empty                          shift and go to state 188

state 240

    (78) paramFuncion -> expresion COMA paramFuncion .

    RPAREN          reduce using rule 78 (paramFuncion -> expresion COMA paramFuncion .)


state 241

    (82) asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .

    ID              reduce using rule 82 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    IF              reduce using rule 82 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    PRINT           reduce using rule 82 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    WHILE           reduce using rule 82 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    FROM            reduce using rule 82 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    INPUT           reduce using rule 82 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    RBRACE          reduce using rule 82 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)


state 242

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO . LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    LPAREN          shift and go to state 254


state 243

    (57) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE . bloqueAux RBRACE while3
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (82) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (83) asignacion -> . arreglo EQUAL push_poper expresion create_asign SEMICOLON
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (90) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (94) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (88) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (95) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    ID              shift and go to state 55
    IF              shift and go to state 50
    PRINT           shift and go to state 48
    WHILE           shift and go to state 60
    FROM            shift and go to state 58
    INPUT           shift and go to state 54

    arreglo                        shift and go to state 47
    estatuto                       shift and go to state 49
    condicion                      shift and go to state 52
    lectura                        shift and go to state 51
    loopFromDo                     shift and go to state 56
    llamadaAFuncion                shift and go to state 57
    asignacion                     shift and go to state 59
    bloqueAux                      shift and go to state 255
    while                          shift and go to state 62
    comparacion                    shift and go to state 63
    escritura                      shift and go to state 64

state 244

    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2 .

    SEMICOLON       reduce using rule 14 (varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2 .)


state 245

    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function .

    MAIN            reduce using rule 46 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function .)


state 246

    (38) bloque -> LBRACE bloqueAux RBRACE .

    ID              reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    IF              reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    PRINT           reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    WHILE           reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    FROM            reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    INPUT           reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    RBRACE          reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    ELSE            reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)


state 247

    (90) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse . bloque condFinal
    (37) bloque -> . LBRACE RBRACE
    (38) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 208

    bloque                         shift and go to state 256

state 248

    (25) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH push_matriz
    (26) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH push_matriz COMA varAux2

    RCORCH          shift and go to state 257


state 249

    (24) varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo COMA . varAux2
    (21) varAux2 -> . ID push_var
    (22) varAux2 -> . ID push_var COMA varAux2
    (23) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo
    (24) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (25) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    ID              shift and go to state 107

    varAux2                        shift and go to state 258

state 250

    (95) lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .

    ID              reduce using rule 95 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    IF              reduce using rule 95 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    PRINT           reduce using rule 95 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    WHILE           reduce using rule 95 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    FROM            reduce using rule 95 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    INPUT           reduce using rule 95 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    RBRACE          reduce using rule 95 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)


state 251

    (71) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .

    RPAREN          reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    ID              reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    IF              reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    PRINT           reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    WHILE           reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    FROM            reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    INPUT           reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    RBRACE          reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)


state 252

    (70) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .

    RPAREN          reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    ID              reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    IF              reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    PRINT           reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    WHILE           reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    FROM            reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    INPUT           reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    RBRACE          reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)


state 253

    (76) paramFuncion -> ID push_id2 COMA paramFuncion .

    RPAREN          reduce using rule 76 (paramFuncion -> ID push_id2 COMA paramFuncion .)


state 254

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN . expresion RPAREN DO LBRACE bloqueAux RBRACE
    (102) expresion -> . exp
    (103) expresion -> . exp comp exp quad_comp
    (111) exp -> . termino quad_term
    (112) exp -> . termino quad_term exp1
    (117) termino -> . factor quad_fact
    (118) termino -> . factor quad_fact termino1
    (121) factor -> . LPAREN expresion RPAREN
    (122) factor -> . factorAux
    (123) factorAux -> . PLUS push_poper var_cte
    (124) factorAux -> . MINUS push_poper var_cte
    (125) factorAux -> . var_cte
    (129) var_cte -> . ID push_id
    (130) var_cte -> . CTE_I push_cte
    (131) var_cte -> . CTE_F push_cte
    (132) var_cte -> . CTE_STRING push_cte
    (133) var_cte -> . arreglo
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    LPAREN          shift and go to state 101
    PLUS            shift and go to state 96
    MINUS           shift and go to state 95
    ID              shift and go to state 102
    CTE_I           shift and go to state 100
    CTE_F           shift and go to state 98
    CTE_STRING      shift and go to state 99

    expresion                      shift and go to state 259
    factor                         shift and go to state 97
    var_cte                        shift and go to state 92
    arreglo                        shift and go to state 93
    termino                        shift and go to state 94
    exp                            shift and go to state 104
    factorAux                      shift and go to state 105

state 255

    (57) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux . RBRACE while3

    RBRACE          shift and go to state 260


state 256

    (90) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque . condFinal
    (93) condFinal -> .

    ID              reduce using rule 93 (condFinal -> .)
    IF              reduce using rule 93 (condFinal -> .)
    PRINT           reduce using rule 93 (condFinal -> .)
    WHILE           reduce using rule 93 (condFinal -> .)
    FROM            reduce using rule 93 (condFinal -> .)
    INPUT           reduce using rule 93 (condFinal -> .)
    RBRACE          reduce using rule 93 (condFinal -> .)

    condFinal                      shift and go to state 261

state 257

    (25) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH . push_matriz
    (26) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH . push_matriz COMA varAux2
    (29) push_matriz -> .

    COMA            reduce using rule 29 (push_matriz -> .)
    SEMICOLON       reduce using rule 29 (push_matriz -> .)

    push_matriz                    shift and go to state 262

state 258

    (24) varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2 .

    SEMICOLON       reduce using rule 24 (varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2 .)


state 259

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion . RPAREN DO LBRACE bloqueAux RBRACE

    RPAREN          shift and go to state 263


state 260

    (57) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE . while3
    (60) while3 -> .

    ID              reduce using rule 60 (while3 -> .)
    IF              reduce using rule 60 (while3 -> .)
    PRINT           reduce using rule 60 (while3 -> .)
    WHILE           reduce using rule 60 (while3 -> .)
    FROM            reduce using rule 60 (while3 -> .)
    INPUT           reduce using rule 60 (while3 -> .)
    RBRACE          reduce using rule 60 (while3 -> .)

    while3                         shift and go to state 264

state 261

    (90) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .

    ID              reduce using rule 90 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    IF              reduce using rule 90 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    PRINT           reduce using rule 90 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    WHILE           reduce using rule 90 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    FROM            reduce using rule 90 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    INPUT           reduce using rule 90 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    RBRACE          reduce using rule 90 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)


state 262

    (25) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz .
    (26) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz . COMA varAux2

    SEMICOLON       reduce using rule 25 (varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz .)
    COMA            shift and go to state 265


state 263

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN . DO LBRACE bloqueAux RBRACE

    DO              shift and go to state 266


state 264

    (57) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .

    ID              reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    IF              reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    PRINT           reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    WHILE           reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    FROM            reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    INPUT           reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    RBRACE          reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)


state 265

    (26) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA . varAux2
    (21) varAux2 -> . ID push_var
    (22) varAux2 -> . ID push_var COMA varAux2
    (23) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo
    (24) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (25) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    ID              shift and go to state 107

    varAux2                        shift and go to state 267

state 266

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 268


state 267

    (26) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2 .

    SEMICOLON       reduce using rule 26 (varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2 .)


state 268

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE . bloqueAux RBRACE
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (82) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (83) asignacion -> . arreglo EQUAL push_poper expresion create_asign SEMICOLON
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (90) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (94) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (88) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (95) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1

    ID              shift and go to state 55
    IF              shift and go to state 50
    PRINT           shift and go to state 48
    WHILE           shift and go to state 60
    FROM            shift and go to state 58
    INPUT           shift and go to state 54

    arreglo                        shift and go to state 47
    estatuto                       shift and go to state 49
    condicion                      shift and go to state 52
    lectura                        shift and go to state 51
    loopFromDo                     shift and go to state 56
    llamadaAFuncion                shift and go to state 57
    asignacion                     shift and go to state 59
    bloqueAux                      shift and go to state 269
    while                          shift and go to state 62
    comparacion                    shift and go to state 63
    escritura                      shift and go to state 64

state 269

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 270


state 270

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .

    ID              reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    IF              reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    PRINT           reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    WHILE           reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    FROM            reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    INPUT           reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    RBRACE          reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 35 resolved as shift
WARNING: shift/reduce conflict for COMA in state 163 resolved as shift
WARNING: reduce/reduce conflict in state 163 resolved using rule (escrituraAux -> CTE_STRING push_cte)
WARNING: rejected rule (var_cte -> CTE_STRING push_cte) in state 163
WARNING: reduce/reduce conflict in state 189 resolved using rule (push_id2 -> <empty>)
WARNING: rejected rule (push_id -> <empty>) in state 189
