Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    OR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID COLON varsGlobal function main endPrograma
Rule 2     program -> PROGRAM ID COLON function main endPrograma
Rule 3     program -> PROGRAM ID COLON varsGlobal main endPrograma
Rule 4     program -> PROGRAM ID COLON main endPrograma
Rule 5     endPrograma -> <empty>
Rule 6     varsGlobal -> VAR varAuxGlobal1
Rule 7     varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON
Rule 8     varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1
Rule 9     varAuxGlobal2 -> ID
Rule 10    varAuxGlobal2 -> ID COMA varAuxGlobal2
Rule 11    varAuxGlobal2 -> ID LCORCH CTE_I RCORCH
Rule 12    varAuxGlobal2 -> ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
Rule 13    varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
Rule 14    varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2
Rule 15    main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
Rule 16    main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
Rule 17    main -> nomMain LPAREN RPAREN LBRACE llamadaAFuncion RBRACE
Rule 18    nomMain -> MAIN
Rule 19    vars -> VAR varAux1
Rule 20    varAux1 -> tipo varAux2 SEMICOLON
Rule 21    varAux1 -> tipo varAux2 SEMICOLON varAux1
Rule 22    varAux2 -> ID push_var
Rule 23    varAux2 -> ID push_var COMA varAux2
Rule 24    varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo
Rule 25    varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
Rule 26    varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
Rule 27    varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2
Rule 28    push_var -> <empty>
Rule 29    push_arreglo -> <empty>
Rule 30    push_matriz -> <empty>
Rule 31    tipo -> INT
Rule 32    tipo -> FLOAT
Rule 33    tipo -> CHAR
Rule 34    tipoFunc -> INT
Rule 35    tipoFunc -> FLOAT
Rule 36    tipoFunc -> CHAR
Rule 37    tipoFunc -> VOID
Rule 38    bloque -> LBRACE RBRACE
Rule 39    bloque -> LBRACE bloqueAux RBRACE
Rule 40    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc
Rule 41    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
Rule 42    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc function
Rule 43    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
Rule 44    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
Rule 45    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
Rule 46    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc
Rule 47    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
Rule 48    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
Rule 49    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
Rule 50    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function
Rule 51    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
Rule 52    functionReturn -> RETURN exp creaCuadReturn SEMICOLON
Rule 53    functionReturn -> empty
Rule 54    creaCuadReturn -> <empty>
Rule 55    endProc -> <empty>
Rule 56    param -> tipo ID paramAvarTable
Rule 57    param -> tipo ID paramAvarTable COMA param
Rule 58    param -> empty
Rule 59    paramAvarTable -> <empty>
Rule 60    empty -> <empty>
Rule 61    push_function -> <empty>
Rule 62    nomFunc -> ID push_function
Rule 63    bloqueAux -> estatuto
Rule 64    bloqueAux -> estatuto bloqueAux
Rule 65    while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
Rule 66    while1 -> <empty>
Rule 67    while2 -> <empty>
Rule 68    while3 -> <empty>
Rule 69    loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
Rule 70    estatuto -> asignacion
Rule 71    estatuto -> condicion
Rule 72    estatuto -> escritura
Rule 73    estatuto -> while
Rule 74    estatuto -> loopFromDo
Rule 75    estatuto -> comparacion
Rule 76    estatuto -> llamadaAFuncion SEMICOLON
Rule 77    estatuto -> lectura
Rule 78    estatuto -> BREAK generaCuadbreak SEMICOLON
Rule 79    estatuto -> transpuesta
Rule 80    estatuto -> inversa
Rule 81    transpuesta -> ID push_id TRANSPUESTA creaTrans SEMICOLON
Rule 82    inversa -> ID push_id INVERSA creaInversa SEMICOLON
Rule 83    creaInversa -> <empty>
Rule 84    creaTrans -> <empty>
Rule 85    generaCuadbreak -> <empty>
Rule 86    llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
Rule 87    llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
Rule 88    actualizaFuncion -> <empty>
Rule 89    gosub -> <empty>
Rule 90    generarEra -> <empty>
Rule 91    paramFuncion -> ID push_id2 paramFuncionAux
Rule 92    paramFuncion -> ID push_id2 paramFuncionAux COMA paramFuncion
Rule 93    paramFuncion -> exp paramFuncionAux
Rule 94    paramFuncion -> exp paramFuncionAux COMA paramFuncion
Rule 95    paramFuncion -> empty
Rule 96    paramFuncionAux -> <empty>
Rule 97    push_id2 -> <empty>
Rule 98    arreglo -> ID push_id LCORCH exp RCORCH ver_dim1
Rule 99    matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2
Rule 100   ver_dim2 -> <empty>
Rule 101   asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON
Rule 102   asignacion -> arreglo EQUAL push_poper exp create_asign SEMICOLON
Rule 103   asignacion -> matrix EQUAL push_poper exp create_asign SEMICOLON
Rule 104   asignacion -> ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
Rule 105   asignacion -> ID push_id EQUAL push_poper determinante SEMICOLON
Rule 106   determinante -> ID push_id DETERMINANT
Rule 107   push_id_dimensionada -> <empty>
Rule 108   create_asign_dim -> <empty>
Rule 109   ver_dim1 -> <empty>
Rule 110   create_asign -> <empty>
Rule 111   comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
Rule 112   condicion -> IF LPAREN expresion RPAREN cond bloque condFinal
Rule 113   condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
Rule 114   cond -> <empty>
Rule 115   condElse -> <empty>
Rule 116   condFinal -> <empty>
Rule 117   escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
Rule 118   escritura -> PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON
Rule 119   lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
Rule 120   quad_print -> <empty>
Rule 121   escrituraAux -> expresion
Rule 122   escrituraAux -> CTE_STRING push_cte
Rule 123   escrituraAux -> expresion COMA escrituraAux
Rule 124   escrituraAux -> CTE_STRING push_cte COMA escrituraAux
Rule 125   escrituraAux -> llamadaAFuncion
Rule 126   expresion -> exp
Rule 127   expresion -> exp comp exp quad_comp
Rule 128   comp -> LOWERTHAN push_poper
Rule 129   comp -> MORETHAN push_poper
Rule 130   comp -> DIFFERENT push_poper
Rule 131   comp -> DOUBLEEQUAL push_poper
Rule 132   comp -> LOWEREQUAL push_poper
Rule 133   comp -> MOREEQUAL push_poper
Rule 134   quad_comp -> <empty>
Rule 135   exp -> termino quad_term
Rule 136   exp -> termino quad_term exp1
Rule 137   exp1 -> PLUS push_poper exp
Rule 138   exp1 -> MINUS push_poper exp
Rule 139   quad_term -> <empty>
Rule 140   quad_fact -> <empty>
Rule 141   termino -> factor quad_fact
Rule 142   termino -> factor quad_fact termino1
Rule 143   termino1 -> TIMES push_poper termino
Rule 144   termino1 -> DIVIDE push_poper termino
Rule 145   factor -> LPAREN expresion RPAREN
Rule 146   factor -> factorAux
Rule 147   factorAux -> PLUS push_poper var_cte
Rule 148   factorAux -> MINUS push_poper var_cte
Rule 149   factorAux -> var_cte
Rule 150   push_id -> <empty>
Rule 151   push_cte -> <empty>
Rule 152   push_poper -> <empty>
Rule 153   var_cte -> ID push_id
Rule 154   var_cte -> CTE_I push_cte
Rule 155   var_cte -> CTE_F push_cte
Rule 156   var_cte -> CTE_STRING push_cte
Rule 157   var_cte -> arreglo
Rule 158   var_cte -> matrix

Terminals, with rules where they appear

AND                  : 
BREAK                : 78
CHAR                 : 33 36
COLON                : 1 2 3 4
COMA                 : 10 12 14 23 25 27 57 92 94 123 124
CTE_F                : 155
CTE_I                : 11 12 13 13 14 14 24 25 26 26 27 27 154
CTE_STRING           : 122 124 156
DETERMINANT          : 106
DIFFERENT            : 130
DIVIDE               : 144
DO                   : 69
DOUBLEEQUAL          : 111 131
ELSE                 : 113
EQUAL                : 69 101 102 103 104 105
FLOAT                : 32 35
FROM                 : 69
FUNCTION             : 40 41 42 43 44 45 46 47 48 49 50 51
ID                   : 1 2 3 4 9 10 11 12 13 14 22 23 24 25 26 27 56 57 62 69 81 82 86 87 91 92 98 99 101 104 105 106 111 119 153
IF                   : 112 113
INPUT                : 119
INT                  : 31 34
INVERSA              : 82
LBRACE               : 15 16 17 38 39 40 41 42 43 44 45 46 47 48 49 50 51 65 69
LCORCH               : 11 12 13 13 14 14 24 25 26 26 27 27 98 99 99
LOWEREQUAL           : 132
LOWERTHAN            : 128
LPAREN               : 15 16 17 40 41 42 43 44 45 46 47 48 49 50 51 65 69 69 86 87 112 113 117 118 119 145
MAIN                 : 18
MINUS                : 138 148
MOREEQUAL            : 133
MORETHAN             : 129
OR                   : 
PLUS                 : 137 147
PRINT                : 117 118
PROGRAM              : 1 2 3 4
RBRACE               : 15 16 17 38 39 40 41 42 43 44 45 46 47 48 49 50 51 65 69
RCORCH               : 11 12 13 13 14 14 24 25 26 26 27 27 98 99 99
RETURN               : 52
RPAREN               : 15 16 17 40 41 42 43 44 45 46 47 48 49 50 51 65 69 69 86 87 112 113 117 118 119 145
SEMICOLON            : 7 8 20 21 52 76 78 81 82 101 102 103 104 105 111 117 118 119
TIMES                : 143
TO                   : 69
TRANSPUESTA          : 81
VAR                  : 6 19
VOID                 : 37
WHILE                : 65
error                : 

Nonterminals, with rules where they appear

actualizaFuncion     : 86 87
arreglo              : 102 157
asignacion           : 70
bloque               : 112 113 113
bloqueAux            : 15 16 39 41 43 44 45 47 48 49 51 64 65 69
comp                 : 127
comparacion          : 75
cond                 : 112 113
condElse             : 113
condFinal            : 112 113
condicion            : 71
creaCuadReturn       : 52
creaInversa          : 82
creaTrans            : 81
create_asign         : 101 102 103 104
create_asign_dim     : 
determinante         : 105
empty                : 53 58 95
endProc              : 40 41 42 43 44 45 46 47 48 49 50 51
endPrograma          : 1 2 3 4
escritura            : 72
escrituraAux         : 117 123 124
estatuto             : 63 64
exp                  : 52 93 94 98 99 99 102 103 126 127 127 137 138
exp1                 : 136
expresion            : 65 69 69 86 101 111 112 113 121 123 145
factor               : 141 142
factorAux            : 146
function             : 1 2 42 43 45 48 50 51
functionReturn       : 40 41 42 43 44 45 46 47 48 49 50 51
generaCuadbreak      : 78
generarEra           : 86 87
gosub                : 86 87
inversa              : 80
lectura              : 77
llamadaAFuncion      : 17 76 104 118 125
loopFromDo           : 74
main                 : 1 2 3 4
matrix               : 103 158
nomFunc              : 40 41 42 43 44 45 46 47 48 49 50 51
nomMain              : 15 16 17
param                : 46 47 48 49 50 51 57
paramAvarTable       : 56 57
paramFuncion         : 86 87 92 94
paramFuncionAux      : 91 92 93 94
program              : 0
push_arreglo         : 24 25
push_cte             : 122 124 154 155 156
push_function        : 62
push_id              : 81 82 98 99 101 104 105 106 111 119 153
push_id2             : 91 92
push_id_dimensionada : 
push_matriz          : 26 27
push_poper           : 101 102 103 104 105 111 117 118 119 128 129 130 131 132 133 137 138 143 144 147 148
push_var             : 22 23
quad_comp            : 127
quad_fact            : 141 142
quad_print           : 117 118 119
quad_term            : 135 136
termino              : 135 136 143 144
termino1             : 142
tipo                 : 7 8 20 21 56 57
tipoFunc             : 40 41 42 43 44 45 46 47 48 49 50 51
transpuesta          : 79
varAux1              : 19 21
varAux2              : 20 21 23 25 27
varAuxGlobal1        : 6 8
varAuxGlobal2        : 7 8 10 12 14
var_cte              : 147 148 149
vars                 : 16 41 43 49 51
varsGlobal           : 1 3
ver_dim1             : 98
ver_dim2             : 99
while                : 73
while1               : 65
while2               : 65
while3               : 65

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID COLON varsGlobal function main endPrograma
    (2) program -> . PROGRAM ID COLON function main endPrograma
    (3) program -> . PROGRAM ID COLON varsGlobal main endPrograma
    (4) program -> . PROGRAM ID COLON main endPrograma

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID COLON varsGlobal function main endPrograma
    (2) program -> PROGRAM . ID COLON function main endPrograma
    (3) program -> PROGRAM . ID COLON varsGlobal main endPrograma
    (4) program -> PROGRAM . ID COLON main endPrograma

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . COLON varsGlobal function main endPrograma
    (2) program -> PROGRAM ID . COLON function main endPrograma
    (3) program -> PROGRAM ID . COLON varsGlobal main endPrograma
    (4) program -> PROGRAM ID . COLON main endPrograma

    COLON           shift and go to state 4


state 4

    (1) program -> PROGRAM ID COLON . varsGlobal function main endPrograma
    (2) program -> PROGRAM ID COLON . function main endPrograma
    (3) program -> PROGRAM ID COLON . varsGlobal main endPrograma
    (4) program -> PROGRAM ID COLON . main endPrograma
    (6) varsGlobal -> . VAR varAuxGlobal1
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc
    (47) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function
    (51) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (15) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (17) main -> . nomMain LPAREN RPAREN LBRACE llamadaAFuncion RBRACE
    (18) nomMain -> . MAIN

    VAR             shift and go to state 10
    FUNCTION        shift and go to state 5
    MAIN            shift and go to state 11

    function                       shift and go to state 9
    varsGlobal                     shift and go to state 7
    nomMain                        shift and go to state 6
    main                           shift and go to state 8

state 5

    (40) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc
    (41) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (42) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc function
    (43) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (45) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (46) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc
    (47) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function
    (51) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (34) tipoFunc -> . INT
    (35) tipoFunc -> . FLOAT
    (36) tipoFunc -> . CHAR
    (37) tipoFunc -> . VOID

    INT             shift and go to state 12
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 13

    tipoFunc                       shift and go to state 16

state 6

    (15) main -> nomMain . LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> nomMain . LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (17) main -> nomMain . LPAREN RPAREN LBRACE llamadaAFuncion RBRACE

    LPAREN          shift and go to state 17


state 7

    (1) program -> PROGRAM ID COLON varsGlobal . function main endPrograma
    (3) program -> PROGRAM ID COLON varsGlobal . main endPrograma
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc
    (47) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function
    (51) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (15) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (17) main -> . nomMain LPAREN RPAREN LBRACE llamadaAFuncion RBRACE
    (18) nomMain -> . MAIN

    FUNCTION        shift and go to state 5
    MAIN            shift and go to state 11

    function                       shift and go to state 19
    nomMain                        shift and go to state 6
    main                           shift and go to state 18

state 8

    (4) program -> PROGRAM ID COLON main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 20

state 9

    (2) program -> PROGRAM ID COLON function . main endPrograma
    (15) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (17) main -> . nomMain LPAREN RPAREN LBRACE llamadaAFuncion RBRACE
    (18) nomMain -> . MAIN

    MAIN            shift and go to state 11

    nomMain                        shift and go to state 6
    main                           shift and go to state 21

state 10

    (6) varsGlobal -> VAR . varAuxGlobal1
    (7) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON
    (8) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON varAuxGlobal1
    (31) tipo -> . INT
    (32) tipo -> . FLOAT
    (33) tipo -> . CHAR

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAuxGlobal1                  shift and go to state 26
    tipo                           shift and go to state 22

state 11

    (18) nomMain -> MAIN .

    LPAREN          reduce using rule 18 (nomMain -> MAIN .)


state 12

    (34) tipoFunc -> INT .

    ID              reduce using rule 34 (tipoFunc -> INT .)


state 13

    (37) tipoFunc -> VOID .

    ID              reduce using rule 37 (tipoFunc -> VOID .)


state 14

    (35) tipoFunc -> FLOAT .

    ID              reduce using rule 35 (tipoFunc -> FLOAT .)


state 15

    (36) tipoFunc -> CHAR .

    ID              reduce using rule 36 (tipoFunc -> CHAR .)


state 16

    (40) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc
    (41) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (42) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc function
    (43) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (45) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (46) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc
    (47) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function
    (51) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (62) nomFunc -> . ID push_function

    ID              shift and go to state 28

    nomFunc                        shift and go to state 27

state 17

    (15) main -> nomMain LPAREN . RPAREN LBRACE bloqueAux RBRACE
    (16) main -> nomMain LPAREN . RPAREN LBRACE vars bloqueAux RBRACE
    (17) main -> nomMain LPAREN . RPAREN LBRACE llamadaAFuncion RBRACE

    RPAREN          shift and go to state 29


state 18

    (3) program -> PROGRAM ID COLON varsGlobal main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 30

state 19

    (1) program -> PROGRAM ID COLON varsGlobal function . main endPrograma
    (15) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (17) main -> . nomMain LPAREN RPAREN LBRACE llamadaAFuncion RBRACE
    (18) nomMain -> . MAIN

    MAIN            shift and go to state 11

    nomMain                        shift and go to state 6
    main                           shift and go to state 31

state 20

    (4) program -> PROGRAM ID COLON main endPrograma .

    $end            reduce using rule 4 (program -> PROGRAM ID COLON main endPrograma .)


state 21

    (2) program -> PROGRAM ID COLON function main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 32

state 22

    (7) varAuxGlobal1 -> tipo . varAuxGlobal2 SEMICOLON
    (8) varAuxGlobal1 -> tipo . varAuxGlobal2 SEMICOLON varAuxGlobal1
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2
    (11) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 33

state 23

    (31) tipo -> INT .

    ID              reduce using rule 31 (tipo -> INT .)


state 24

    (32) tipo -> FLOAT .

    ID              reduce using rule 32 (tipo -> FLOAT .)


state 25

    (33) tipo -> CHAR .

    ID              reduce using rule 33 (tipo -> CHAR .)


state 26

    (6) varsGlobal -> VAR varAuxGlobal1 .

    FUNCTION        reduce using rule 6 (varsGlobal -> VAR varAuxGlobal1 .)
    MAIN            reduce using rule 6 (varsGlobal -> VAR varAuxGlobal1 .)


state 27

    (40) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE functionReturn RBRACE endProc
    (41) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (42) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE functionReturn RBRACE endProc function
    (43) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (46) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE functionReturn RBRACE endProc
    (47) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function
    (51) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function

    LPAREN          shift and go to state 35


state 28

    (62) nomFunc -> ID . push_function
    (61) push_function -> .

    LPAREN          reduce using rule 61 (push_function -> .)

    push_function                  shift and go to state 36

state 29

    (15) main -> nomMain LPAREN RPAREN . LBRACE bloqueAux RBRACE
    (16) main -> nomMain LPAREN RPAREN . LBRACE vars bloqueAux RBRACE
    (17) main -> nomMain LPAREN RPAREN . LBRACE llamadaAFuncion RBRACE

    LBRACE          shift and go to state 37


state 30

    (3) program -> PROGRAM ID COLON varsGlobal main endPrograma .

    $end            reduce using rule 3 (program -> PROGRAM ID COLON varsGlobal main endPrograma .)


state 31

    (1) program -> PROGRAM ID COLON varsGlobal function main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 38

state 32

    (2) program -> PROGRAM ID COLON function main endPrograma .

    $end            reduce using rule 2 (program -> PROGRAM ID COLON function main endPrograma .)


state 33

    (7) varAuxGlobal1 -> tipo varAuxGlobal2 . SEMICOLON
    (8) varAuxGlobal1 -> tipo varAuxGlobal2 . SEMICOLON varAuxGlobal1

    SEMICOLON       shift and go to state 39


state 34

    (9) varAuxGlobal2 -> ID .
    (10) varAuxGlobal2 -> ID . COMA varAuxGlobal2
    (11) varAuxGlobal2 -> ID . LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> ID . LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> ID . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> ID . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    SEMICOLON       reduce using rule 9 (varAuxGlobal2 -> ID .)
    COMA            shift and go to state 41
    LCORCH          shift and go to state 40


state 35

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE functionReturn RBRACE endProc
    (41) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE functionReturn RBRACE endProc function
    (43) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE functionReturn RBRACE endProc
    (47) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE functionReturn RBRACE endProc function
    (51) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (56) param -> . tipo ID paramAvarTable
    (57) param -> . tipo ID paramAvarTable COMA param
    (58) param -> . empty
    (31) tipo -> . INT
    (32) tipo -> . FLOAT
    (33) tipo -> . CHAR
    (60) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 42
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

  ! RPAREN          [ reduce using rule 60 (empty -> .) ]

    tipo                           shift and go to state 45
    param                          shift and go to state 43
    empty                          shift and go to state 44

state 36

    (62) nomFunc -> ID push_function .

    LPAREN          reduce using rule 62 (nomFunc -> ID push_function .)


state 37

    (15) main -> nomMain LPAREN RPAREN LBRACE . bloqueAux RBRACE
    (16) main -> nomMain LPAREN RPAREN LBRACE . vars bloqueAux RBRACE
    (17) main -> nomMain LPAREN RPAREN LBRACE . llamadaAFuncion RBRACE
    (63) bloqueAux -> . estatuto
    (64) bloqueAux -> . estatuto bloqueAux
    (19) vars -> . VAR varAux1
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (70) estatuto -> . asignacion
    (71) estatuto -> . condicion
    (72) estatuto -> . escritura
    (73) estatuto -> . while
    (74) estatuto -> . loopFromDo
    (75) estatuto -> . comparacion
    (76) estatuto -> . llamadaAFuncion SEMICOLON
    (77) estatuto -> . lectura
    (78) estatuto -> . BREAK generaCuadbreak SEMICOLON
    (79) estatuto -> . transpuesta
    (80) estatuto -> . inversa
    (101) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (102) asignacion -> . arreglo EQUAL push_poper exp create_asign SEMICOLON
    (103) asignacion -> . matrix EQUAL push_poper exp create_asign SEMICOLON
    (104) asignacion -> . ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> . ID push_id EQUAL push_poper determinante SEMICOLON
    (112) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (113) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (117) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (118) escritura -> . PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON
    (65) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (69) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (111) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (119) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) transpuesta -> . ID push_id TRANSPUESTA creaTrans SEMICOLON
    (82) inversa -> . ID push_id INVERSA creaInversa SEMICOLON
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    VAR             shift and go to state 55
    ID              shift and go to state 57
    BREAK           shift and go to state 65
    IF              shift and go to state 51
    PRINT           shift and go to state 48
    WHILE           shift and go to state 63
    FROM            shift and go to state 60
    INPUT           shift and go to state 56

    vars                           shift and go to state 46
    arreglo                        shift and go to state 47
    matrix                         shift and go to state 49
    estatuto                       shift and go to state 50
    lectura                        shift and go to state 52
    transpuesta                    shift and go to state 53
    condicion                      shift and go to state 54
    loopFromDo                     shift and go to state 58
    llamadaAFuncion                shift and go to state 59
    asignacion                     shift and go to state 61
    inversa                        shift and go to state 62
    bloqueAux                      shift and go to state 64
    while                          shift and go to state 66
    comparacion                    shift and go to state 67
    escritura                      shift and go to state 68

state 38

    (1) program -> PROGRAM ID COLON varsGlobal function main endPrograma .

    $end            reduce using rule 1 (program -> PROGRAM ID COLON varsGlobal function main endPrograma .)


state 39

    (7) varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON .
    (8) varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON . varAuxGlobal1
    (7) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON
    (8) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON varAuxGlobal1
    (31) tipo -> . INT
    (32) tipo -> . FLOAT
    (33) tipo -> . CHAR

    FUNCTION        reduce using rule 7 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON .)
    MAIN            reduce using rule 7 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAuxGlobal1                  shift and go to state 69
    tipo                           shift and go to state 22

state 40

    (11) varAuxGlobal2 -> ID LCORCH . CTE_I RCORCH
    (12) varAuxGlobal2 -> ID LCORCH . CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> ID LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> ID LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    CTE_I           shift and go to state 70


state 41

    (10) varAuxGlobal2 -> ID COMA . varAuxGlobal2
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2
    (11) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 71

state 42

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE functionReturn RBRACE endProc
    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE vars bloqueAux functionReturn RBRACE endProc
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE functionReturn RBRACE endProc function
    (43) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE bloqueAux functionReturn RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE bloqueAux functionReturn RBRACE endProc function

    LBRACE          shift and go to state 72


state 43

    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE functionReturn RBRACE endProc
    (47) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE functionReturn RBRACE endProc function
    (51) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function

    RPAREN          shift and go to state 73


state 44

    (58) param -> empty .

    RPAREN          reduce using rule 58 (param -> empty .)


state 45

    (56) param -> tipo . ID paramAvarTable
    (57) param -> tipo . ID paramAvarTable COMA param

    ID              shift and go to state 74


state 46

    (16) main -> nomMain LPAREN RPAREN LBRACE vars . bloqueAux RBRACE
    (63) bloqueAux -> . estatuto
    (64) bloqueAux -> . estatuto bloqueAux
    (70) estatuto -> . asignacion
    (71) estatuto -> . condicion
    (72) estatuto -> . escritura
    (73) estatuto -> . while
    (74) estatuto -> . loopFromDo
    (75) estatuto -> . comparacion
    (76) estatuto -> . llamadaAFuncion SEMICOLON
    (77) estatuto -> . lectura
    (78) estatuto -> . BREAK generaCuadbreak SEMICOLON
    (79) estatuto -> . transpuesta
    (80) estatuto -> . inversa
    (101) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (102) asignacion -> . arreglo EQUAL push_poper exp create_asign SEMICOLON
    (103) asignacion -> . matrix EQUAL push_poper exp create_asign SEMICOLON
    (104) asignacion -> . ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> . ID push_id EQUAL push_poper determinante SEMICOLON
    (112) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (113) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (117) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (118) escritura -> . PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON
    (65) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (69) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (111) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (119) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) transpuesta -> . ID push_id TRANSPUESTA creaTrans SEMICOLON
    (82) inversa -> . ID push_id INVERSA creaInversa SEMICOLON
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    BREAK           shift and go to state 65
    ID              shift and go to state 75
    IF              shift and go to state 51
    PRINT           shift and go to state 48
    WHILE           shift and go to state 63
    FROM            shift and go to state 60
    INPUT           shift and go to state 56

    arreglo                        shift and go to state 47
    matrix                         shift and go to state 49
    estatuto                       shift and go to state 50
    condicion                      shift and go to state 54
    lectura                        shift and go to state 52
    transpuesta                    shift and go to state 53
    loopFromDo                     shift and go to state 58
    llamadaAFuncion                shift and go to state 76
    asignacion                     shift and go to state 61
    inversa                        shift and go to state 62
    bloqueAux                      shift and go to state 77
    while                          shift and go to state 66
    comparacion                    shift and go to state 67
    escritura                      shift and go to state 68

state 47

    (102) asignacion -> arreglo . EQUAL push_poper exp create_asign SEMICOLON

    EQUAL           shift and go to state 78


state 48

    (117) escritura -> PRINT . push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (118) escritura -> PRINT . push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 79

state 49

    (103) asignacion -> matrix . EQUAL push_poper exp create_asign SEMICOLON

    EQUAL           shift and go to state 80


state 50

    (63) bloqueAux -> estatuto .
    (64) bloqueAux -> estatuto . bloqueAux
    (63) bloqueAux -> . estatuto
    (64) bloqueAux -> . estatuto bloqueAux
    (70) estatuto -> . asignacion
    (71) estatuto -> . condicion
    (72) estatuto -> . escritura
    (73) estatuto -> . while
    (74) estatuto -> . loopFromDo
    (75) estatuto -> . comparacion
    (76) estatuto -> . llamadaAFuncion SEMICOLON
    (77) estatuto -> . lectura
    (78) estatuto -> . BREAK generaCuadbreak SEMICOLON
    (79) estatuto -> . transpuesta
    (80) estatuto -> . inversa
    (101) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (102) asignacion -> . arreglo EQUAL push_poper exp create_asign SEMICOLON
    (103) asignacion -> . matrix EQUAL push_poper exp create_asign SEMICOLON
    (104) asignacion -> . ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> . ID push_id EQUAL push_poper determinante SEMICOLON
    (112) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (113) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (117) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (118) escritura -> . PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON
    (65) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (69) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (111) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (119) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) transpuesta -> . ID push_id TRANSPUESTA creaTrans SEMICOLON
    (82) inversa -> . ID push_id INVERSA creaInversa SEMICOLON
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    RETURN          reduce using rule 63 (bloqueAux -> estatuto .)
    RBRACE          reduce using rule 63 (bloqueAux -> estatuto .)
    BREAK           shift and go to state 65
    ID              shift and go to state 75
    IF              shift and go to state 51
    PRINT           shift and go to state 48
    WHILE           shift and go to state 63
    FROM            shift and go to state 60
    INPUT           shift and go to state 56

    arreglo                        shift and go to state 47
    matrix                         shift and go to state 49
    estatuto                       shift and go to state 50
    while                          shift and go to state 66
    condicion                      shift and go to state 54
    lectura                        shift and go to state 52
    transpuesta                    shift and go to state 53
    loopFromDo                     shift and go to state 58
    llamadaAFuncion                shift and go to state 76
    asignacion                     shift and go to state 61
    inversa                        shift and go to state 62
    bloqueAux                      shift and go to state 81
    comparacion                    shift and go to state 67
    escritura                      shift and go to state 68

state 51

    (112) condicion -> IF . LPAREN expresion RPAREN cond bloque condFinal
    (113) condicion -> IF . LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal

    LPAREN          shift and go to state 82


state 52

    (77) estatuto -> lectura .

    BREAK           reduce using rule 77 (estatuto -> lectura .)
    ID              reduce using rule 77 (estatuto -> lectura .)
    IF              reduce using rule 77 (estatuto -> lectura .)
    PRINT           reduce using rule 77 (estatuto -> lectura .)
    WHILE           reduce using rule 77 (estatuto -> lectura .)
    FROM            reduce using rule 77 (estatuto -> lectura .)
    INPUT           reduce using rule 77 (estatuto -> lectura .)
    RBRACE          reduce using rule 77 (estatuto -> lectura .)
    RETURN          reduce using rule 77 (estatuto -> lectura .)


state 53

    (79) estatuto -> transpuesta .

    BREAK           reduce using rule 79 (estatuto -> transpuesta .)
    ID              reduce using rule 79 (estatuto -> transpuesta .)
    IF              reduce using rule 79 (estatuto -> transpuesta .)
    PRINT           reduce using rule 79 (estatuto -> transpuesta .)
    WHILE           reduce using rule 79 (estatuto -> transpuesta .)
    FROM            reduce using rule 79 (estatuto -> transpuesta .)
    INPUT           reduce using rule 79 (estatuto -> transpuesta .)
    RBRACE          reduce using rule 79 (estatuto -> transpuesta .)
    RETURN          reduce using rule 79 (estatuto -> transpuesta .)


state 54

    (71) estatuto -> condicion .

    BREAK           reduce using rule 71 (estatuto -> condicion .)
    ID              reduce using rule 71 (estatuto -> condicion .)
    IF              reduce using rule 71 (estatuto -> condicion .)
    PRINT           reduce using rule 71 (estatuto -> condicion .)
    WHILE           reduce using rule 71 (estatuto -> condicion .)
    FROM            reduce using rule 71 (estatuto -> condicion .)
    INPUT           reduce using rule 71 (estatuto -> condicion .)
    RBRACE          reduce using rule 71 (estatuto -> condicion .)
    RETURN          reduce using rule 71 (estatuto -> condicion .)


state 55

    (19) vars -> VAR . varAux1
    (20) varAux1 -> . tipo varAux2 SEMICOLON
    (21) varAux1 -> . tipo varAux2 SEMICOLON varAux1
    (31) tipo -> . INT
    (32) tipo -> . FLOAT
    (33) tipo -> . CHAR

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAux1                        shift and go to state 84
    tipo                           shift and go to state 83

state 56

    (119) lectura -> INPUT . push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 85

state 57

    (86) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (101) asignacion -> ID . push_id EQUAL push_poper expresion create_asign SEMICOLON
    (104) asignacion -> ID . push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> ID . push_id EQUAL push_poper determinante SEMICOLON
    (111) comparacion -> ID . push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (81) transpuesta -> ID . push_id TRANSPUESTA creaTrans SEMICOLON
    (82) inversa -> ID . push_id INVERSA creaInversa SEMICOLON
    (98) arreglo -> ID . push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> ID . push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2
    (88) actualizaFuncion -> .
    (150) push_id -> .

    LPAREN          reduce using rule 88 (actualizaFuncion -> .)
    EQUAL           reduce using rule 150 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 150 (push_id -> .)
    TRANSPUESTA     reduce using rule 150 (push_id -> .)
    INVERSA         reduce using rule 150 (push_id -> .)
    LCORCH          reduce using rule 150 (push_id -> .)

    actualizaFuncion               shift and go to state 87
    push_id                        shift and go to state 86

state 58

    (74) estatuto -> loopFromDo .

    BREAK           reduce using rule 74 (estatuto -> loopFromDo .)
    ID              reduce using rule 74 (estatuto -> loopFromDo .)
    IF              reduce using rule 74 (estatuto -> loopFromDo .)
    PRINT           reduce using rule 74 (estatuto -> loopFromDo .)
    WHILE           reduce using rule 74 (estatuto -> loopFromDo .)
    FROM            reduce using rule 74 (estatuto -> loopFromDo .)
    INPUT           reduce using rule 74 (estatuto -> loopFromDo .)
    RBRACE          reduce using rule 74 (estatuto -> loopFromDo .)
    RETURN          reduce using rule 74 (estatuto -> loopFromDo .)


state 59

    (17) main -> nomMain LPAREN RPAREN LBRACE llamadaAFuncion . RBRACE
    (76) estatuto -> llamadaAFuncion . SEMICOLON

    RBRACE          shift and go to state 88
    SEMICOLON       shift and go to state 89


state 60

    (69) loopFromDo -> FROM . LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    LPAREN          shift and go to state 90


state 61

    (70) estatuto -> asignacion .

    BREAK           reduce using rule 70 (estatuto -> asignacion .)
    ID              reduce using rule 70 (estatuto -> asignacion .)
    IF              reduce using rule 70 (estatuto -> asignacion .)
    PRINT           reduce using rule 70 (estatuto -> asignacion .)
    WHILE           reduce using rule 70 (estatuto -> asignacion .)
    FROM            reduce using rule 70 (estatuto -> asignacion .)
    INPUT           reduce using rule 70 (estatuto -> asignacion .)
    RBRACE          reduce using rule 70 (estatuto -> asignacion .)
    RETURN          reduce using rule 70 (estatuto -> asignacion .)


state 62

    (80) estatuto -> inversa .

    BREAK           reduce using rule 80 (estatuto -> inversa .)
    ID              reduce using rule 80 (estatuto -> inversa .)
    IF              reduce using rule 80 (estatuto -> inversa .)
    PRINT           reduce using rule 80 (estatuto -> inversa .)
    WHILE           reduce using rule 80 (estatuto -> inversa .)
    FROM            reduce using rule 80 (estatuto -> inversa .)
    INPUT           reduce using rule 80 (estatuto -> inversa .)
    RBRACE          reduce using rule 80 (estatuto -> inversa .)
    RETURN          reduce using rule 80 (estatuto -> inversa .)


state 63

    (65) while -> WHILE . while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (66) while1 -> .

    LPAREN          reduce using rule 66 (while1 -> .)

    while1                         shift and go to state 91

state 64

    (15) main -> nomMain LPAREN RPAREN LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 92


state 65

    (78) estatuto -> BREAK . generaCuadbreak SEMICOLON
    (85) generaCuadbreak -> .

    SEMICOLON       reduce using rule 85 (generaCuadbreak -> .)

    generaCuadbreak                shift and go to state 93

state 66

    (73) estatuto -> while .

    BREAK           reduce using rule 73 (estatuto -> while .)
    ID              reduce using rule 73 (estatuto -> while .)
    IF              reduce using rule 73 (estatuto -> while .)
    PRINT           reduce using rule 73 (estatuto -> while .)
    WHILE           reduce using rule 73 (estatuto -> while .)
    FROM            reduce using rule 73 (estatuto -> while .)
    INPUT           reduce using rule 73 (estatuto -> while .)
    RBRACE          reduce using rule 73 (estatuto -> while .)
    RETURN          reduce using rule 73 (estatuto -> while .)


state 67

    (75) estatuto -> comparacion .

    BREAK           reduce using rule 75 (estatuto -> comparacion .)
    ID              reduce using rule 75 (estatuto -> comparacion .)
    IF              reduce using rule 75 (estatuto -> comparacion .)
    PRINT           reduce using rule 75 (estatuto -> comparacion .)
    WHILE           reduce using rule 75 (estatuto -> comparacion .)
    FROM            reduce using rule 75 (estatuto -> comparacion .)
    INPUT           reduce using rule 75 (estatuto -> comparacion .)
    RBRACE          reduce using rule 75 (estatuto -> comparacion .)
    RETURN          reduce using rule 75 (estatuto -> comparacion .)


state 68

    (72) estatuto -> escritura .

    BREAK           reduce using rule 72 (estatuto -> escritura .)
    ID              reduce using rule 72 (estatuto -> escritura .)
    IF              reduce using rule 72 (estatuto -> escritura .)
    PRINT           reduce using rule 72 (estatuto -> escritura .)
    WHILE           reduce using rule 72 (estatuto -> escritura .)
    FROM            reduce using rule 72 (estatuto -> escritura .)
    INPUT           reduce using rule 72 (estatuto -> escritura .)
    RBRACE          reduce using rule 72 (estatuto -> escritura .)
    RETURN          reduce using rule 72 (estatuto -> escritura .)


state 69

    (8) varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1 .

    FUNCTION        reduce using rule 8 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1 .)
    MAIN            reduce using rule 8 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1 .)


state 70

    (11) varAuxGlobal2 -> ID LCORCH CTE_I . RCORCH
    (12) varAuxGlobal2 -> ID LCORCH CTE_I . RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> ID LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> ID LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    RCORCH          shift and go to state 94


state 71

    (10) varAuxGlobal2 -> ID COMA varAuxGlobal2 .

    SEMICOLON       reduce using rule 10 (varAuxGlobal2 -> ID COMA varAuxGlobal2 .)


state 72

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . functionReturn RBRACE endProc
    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . vars bloqueAux functionReturn RBRACE endProc
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . functionReturn RBRACE endProc function
    (43) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . bloqueAux functionReturn RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . bloqueAux functionReturn RBRACE endProc function
    (52) functionReturn -> . RETURN exp creaCuadReturn SEMICOLON
    (53) functionReturn -> . empty
    (19) vars -> . VAR varAux1
    (63) bloqueAux -> . estatuto
    (64) bloqueAux -> . estatuto bloqueAux
    (60) empty -> .
    (70) estatuto -> . asignacion
    (71) estatuto -> . condicion
    (72) estatuto -> . escritura
    (73) estatuto -> . while
    (74) estatuto -> . loopFromDo
    (75) estatuto -> . comparacion
    (76) estatuto -> . llamadaAFuncion SEMICOLON
    (77) estatuto -> . lectura
    (78) estatuto -> . BREAK generaCuadbreak SEMICOLON
    (79) estatuto -> . transpuesta
    (80) estatuto -> . inversa
    (101) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (102) asignacion -> . arreglo EQUAL push_poper exp create_asign SEMICOLON
    (103) asignacion -> . matrix EQUAL push_poper exp create_asign SEMICOLON
    (104) asignacion -> . ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> . ID push_id EQUAL push_poper determinante SEMICOLON
    (112) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (113) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (117) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (118) escritura -> . PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON
    (65) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (69) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (111) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (119) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) transpuesta -> . ID push_id TRANSPUESTA creaTrans SEMICOLON
    (82) inversa -> . ID push_id INVERSA creaInversa SEMICOLON
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    RETURN          shift and go to state 95
    VAR             shift and go to state 55
    RBRACE          reduce using rule 60 (empty -> .)
    BREAK           shift and go to state 65
    ID              shift and go to state 75
    IF              shift and go to state 51
    PRINT           shift and go to state 48
    WHILE           shift and go to state 63
    FROM            shift and go to state 60
    INPUT           shift and go to state 56

    arreglo                        shift and go to state 47
    vars                           shift and go to state 96
    estatuto                       shift and go to state 50
    matrix                         shift and go to state 49
    condicion                      shift and go to state 54
    functionReturn                 shift and go to state 97
    lectura                        shift and go to state 52
    empty                          shift and go to state 98
    transpuesta                    shift and go to state 53
    loopFromDo                     shift and go to state 58
    llamadaAFuncion                shift and go to state 76
    asignacion                     shift and go to state 61
    inversa                        shift and go to state 62
    bloqueAux                      shift and go to state 99
    while                          shift and go to state 66
    comparacion                    shift and go to state 67
    escritura                      shift and go to state 68

state 73

    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE functionReturn RBRACE endProc
    (47) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE functionReturn RBRACE endProc function
    (51) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE vars bloqueAux functionReturn RBRACE endProc function

    LBRACE          shift and go to state 100


state 74

    (56) param -> tipo ID . paramAvarTable
    (57) param -> tipo ID . paramAvarTable COMA param
    (59) paramAvarTable -> .

    COMA            reduce using rule 59 (paramAvarTable -> .)
    RPAREN          reduce using rule 59 (paramAvarTable -> .)

    paramAvarTable                 shift and go to state 101

state 75

    (101) asignacion -> ID . push_id EQUAL push_poper expresion create_asign SEMICOLON
    (104) asignacion -> ID . push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> ID . push_id EQUAL push_poper determinante SEMICOLON
    (111) comparacion -> ID . push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (86) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (81) transpuesta -> ID . push_id TRANSPUESTA creaTrans SEMICOLON
    (82) inversa -> ID . push_id INVERSA creaInversa SEMICOLON
    (98) arreglo -> ID . push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> ID . push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2
    (150) push_id -> .
    (88) actualizaFuncion -> .

    EQUAL           reduce using rule 150 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 150 (push_id -> .)
    TRANSPUESTA     reduce using rule 150 (push_id -> .)
    INVERSA         reduce using rule 150 (push_id -> .)
    LCORCH          reduce using rule 150 (push_id -> .)
    LPAREN          reduce using rule 88 (actualizaFuncion -> .)

    actualizaFuncion               shift and go to state 87
    push_id                        shift and go to state 86

state 76

    (76) estatuto -> llamadaAFuncion . SEMICOLON

    SEMICOLON       shift and go to state 89


state 77

    (16) main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux . RBRACE

    RBRACE          shift and go to state 102


state 78

    (102) asignacion -> arreglo EQUAL . push_poper exp create_asign SEMICOLON
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 103

state 79

    (117) escritura -> PRINT push_poper . LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (118) escritura -> PRINT push_poper . LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON

    LPAREN          shift and go to state 104


state 80

    (103) asignacion -> matrix EQUAL . push_poper exp create_asign SEMICOLON
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 105

state 81

    (64) bloqueAux -> estatuto bloqueAux .

    RETURN          reduce using rule 64 (bloqueAux -> estatuto bloqueAux .)
    RBRACE          reduce using rule 64 (bloqueAux -> estatuto bloqueAux .)


state 82

    (112) condicion -> IF LPAREN . expresion RPAREN cond bloque condFinal
    (113) condicion -> IF LPAREN . expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (126) expresion -> . exp
    (127) expresion -> . exp comp exp quad_comp
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    expresion                      shift and go to state 118
    exp                            shift and go to state 119
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106

state 83

    (20) varAux1 -> tipo . varAux2 SEMICOLON
    (21) varAux1 -> tipo . varAux2 SEMICOLON varAux1
    (22) varAux2 -> . ID push_var
    (23) varAux2 -> . ID push_var COMA varAux2
    (24) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo
    (25) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (26) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (27) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    ID              shift and go to state 122

    varAux2                        shift and go to state 121

state 84

    (19) vars -> VAR varAux1 .

    BREAK           reduce using rule 19 (vars -> VAR varAux1 .)
    ID              reduce using rule 19 (vars -> VAR varAux1 .)
    IF              reduce using rule 19 (vars -> VAR varAux1 .)
    PRINT           reduce using rule 19 (vars -> VAR varAux1 .)
    WHILE           reduce using rule 19 (vars -> VAR varAux1 .)
    FROM            reduce using rule 19 (vars -> VAR varAux1 .)
    INPUT           reduce using rule 19 (vars -> VAR varAux1 .)


state 85

    (119) lectura -> INPUT push_poper . LPAREN ID push_id RPAREN quad_print SEMICOLON

    LPAREN          shift and go to state 123


state 86

    (101) asignacion -> ID push_id . EQUAL push_poper expresion create_asign SEMICOLON
    (104) asignacion -> ID push_id . EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> ID push_id . EQUAL push_poper determinante SEMICOLON
    (111) comparacion -> ID push_id . DOUBLEEQUAL push_poper expresion SEMICOLON
    (81) transpuesta -> ID push_id . TRANSPUESTA creaTrans SEMICOLON
    (82) inversa -> ID push_id . INVERSA creaInversa SEMICOLON
    (98) arreglo -> ID push_id . LCORCH exp RCORCH ver_dim1
    (99) matrix -> ID push_id . LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    EQUAL           shift and go to state 127
    DOUBLEEQUAL     shift and go to state 124
    TRANSPUESTA     shift and go to state 128
    INVERSA         shift and go to state 125
    LCORCH          shift and go to state 126


state 87

    (86) llamadaAFuncion -> ID actualizaFuncion . generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> ID actualizaFuncion . generarEra LPAREN paramFuncion gosub RPAREN
    (90) generarEra -> .

    LPAREN          reduce using rule 90 (generarEra -> .)

    generarEra                     shift and go to state 129

state 88

    (17) main -> nomMain LPAREN RPAREN LBRACE llamadaAFuncion RBRACE .

    $end            reduce using rule 17 (main -> nomMain LPAREN RPAREN LBRACE llamadaAFuncion RBRACE .)


state 89

    (76) estatuto -> llamadaAFuncion SEMICOLON .

    BREAK           reduce using rule 76 (estatuto -> llamadaAFuncion SEMICOLON .)
    ID              reduce using rule 76 (estatuto -> llamadaAFuncion SEMICOLON .)
    IF              reduce using rule 76 (estatuto -> llamadaAFuncion SEMICOLON .)
    PRINT           reduce using rule 76 (estatuto -> llamadaAFuncion SEMICOLON .)
    WHILE           reduce using rule 76 (estatuto -> llamadaAFuncion SEMICOLON .)
    FROM            reduce using rule 76 (estatuto -> llamadaAFuncion SEMICOLON .)
    INPUT           reduce using rule 76 (estatuto -> llamadaAFuncion SEMICOLON .)
    RBRACE          reduce using rule 76 (estatuto -> llamadaAFuncion SEMICOLON .)
    RETURN          reduce using rule 76 (estatuto -> llamadaAFuncion SEMICOLON .)


state 90

    (69) loopFromDo -> FROM LPAREN . ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    ID              shift and go to state 130


state 91

    (65) while -> WHILE while1 . LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3

    LPAREN          shift and go to state 131


state 92

    (15) main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE .

    $end            reduce using rule 15 (main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE .)


state 93

    (78) estatuto -> BREAK generaCuadbreak . SEMICOLON

    SEMICOLON       shift and go to state 132


state 94

    (11) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH .
    (12) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH . COMA varAuxGlobal2
    (13) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH COMA varAuxGlobal2

    SEMICOLON       reduce using rule 11 (varAuxGlobal2 -> ID LCORCH CTE_I RCORCH .)
    COMA            shift and go to state 134
    LCORCH          shift and go to state 133


state 95

    (52) functionReturn -> RETURN . exp creaCuadReturn SEMICOLON
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    exp                            shift and go to state 135
    factor                         shift and go to state 112
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106

state 96

    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars . bloqueAux functionReturn RBRACE endProc
    (43) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars . bloqueAux functionReturn RBRACE endProc function
    (63) bloqueAux -> . estatuto
    (64) bloqueAux -> . estatuto bloqueAux
    (70) estatuto -> . asignacion
    (71) estatuto -> . condicion
    (72) estatuto -> . escritura
    (73) estatuto -> . while
    (74) estatuto -> . loopFromDo
    (75) estatuto -> . comparacion
    (76) estatuto -> . llamadaAFuncion SEMICOLON
    (77) estatuto -> . lectura
    (78) estatuto -> . BREAK generaCuadbreak SEMICOLON
    (79) estatuto -> . transpuesta
    (80) estatuto -> . inversa
    (101) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (102) asignacion -> . arreglo EQUAL push_poper exp create_asign SEMICOLON
    (103) asignacion -> . matrix EQUAL push_poper exp create_asign SEMICOLON
    (104) asignacion -> . ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> . ID push_id EQUAL push_poper determinante SEMICOLON
    (112) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (113) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (117) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (118) escritura -> . PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON
    (65) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (69) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (111) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (119) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) transpuesta -> . ID push_id TRANSPUESTA creaTrans SEMICOLON
    (82) inversa -> . ID push_id INVERSA creaInversa SEMICOLON
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    BREAK           shift and go to state 65
    ID              shift and go to state 75
    IF              shift and go to state 51
    PRINT           shift and go to state 48
    WHILE           shift and go to state 63
    FROM            shift and go to state 60
    INPUT           shift and go to state 56

    arreglo                        shift and go to state 47
    matrix                         shift and go to state 49
    estatuto                       shift and go to state 50
    condicion                      shift and go to state 54
    lectura                        shift and go to state 52
    transpuesta                    shift and go to state 53
    loopFromDo                     shift and go to state 58
    llamadaAFuncion                shift and go to state 76
    asignacion                     shift and go to state 61
    inversa                        shift and go to state 62
    bloqueAux                      shift and go to state 136
    while                          shift and go to state 66
    comparacion                    shift and go to state 67
    escritura                      shift and go to state 68

state 97

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn . RBRACE endProc
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn . RBRACE endProc function

    RBRACE          shift and go to state 137


state 98

    (53) functionReturn -> empty .

    RBRACE          reduce using rule 53 (functionReturn -> empty .)


state 99

    (44) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux . functionReturn RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux . functionReturn RBRACE endProc function
    (52) functionReturn -> . RETURN exp creaCuadReturn SEMICOLON
    (53) functionReturn -> . empty
    (60) empty -> .

    RETURN          shift and go to state 95
    RBRACE          reduce using rule 60 (empty -> .)

    functionReturn                 shift and go to state 138
    empty                          shift and go to state 98

state 100

    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . functionReturn RBRACE endProc
    (47) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . bloqueAux functionReturn RBRACE endProc
    (48) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . bloqueAux functionReturn RBRACE endProc function
    (49) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . vars bloqueAux functionReturn RBRACE endProc
    (50) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . functionReturn RBRACE endProc function
    (51) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . vars bloqueAux functionReturn RBRACE endProc function
    (52) functionReturn -> . RETURN exp creaCuadReturn SEMICOLON
    (53) functionReturn -> . empty
    (63) bloqueAux -> . estatuto
    (64) bloqueAux -> . estatuto bloqueAux
    (19) vars -> . VAR varAux1
    (60) empty -> .
    (70) estatuto -> . asignacion
    (71) estatuto -> . condicion
    (72) estatuto -> . escritura
    (73) estatuto -> . while
    (74) estatuto -> . loopFromDo
    (75) estatuto -> . comparacion
    (76) estatuto -> . llamadaAFuncion SEMICOLON
    (77) estatuto -> . lectura
    (78) estatuto -> . BREAK generaCuadbreak SEMICOLON
    (79) estatuto -> . transpuesta
    (80) estatuto -> . inversa
    (101) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (102) asignacion -> . arreglo EQUAL push_poper exp create_asign SEMICOLON
    (103) asignacion -> . matrix EQUAL push_poper exp create_asign SEMICOLON
    (104) asignacion -> . ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> . ID push_id EQUAL push_poper determinante SEMICOLON
    (112) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (113) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (117) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (118) escritura -> . PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON
    (65) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (69) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (111) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (119) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) transpuesta -> . ID push_id TRANSPUESTA creaTrans SEMICOLON
    (82) inversa -> . ID push_id INVERSA creaInversa SEMICOLON
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    RETURN          shift and go to state 95
    VAR             shift and go to state 55
    RBRACE          reduce using rule 60 (empty -> .)
    BREAK           shift and go to state 65
    ID              shift and go to state 75
    IF              shift and go to state 51
    PRINT           shift and go to state 48
    WHILE           shift and go to state 63
    FROM            shift and go to state 60
    INPUT           shift and go to state 56

    arreglo                        shift and go to state 47
    vars                           shift and go to state 139
    estatuto                       shift and go to state 50
    matrix                         shift and go to state 49
    condicion                      shift and go to state 54
    functionReturn                 shift and go to state 140
    lectura                        shift and go to state 52
    empty                          shift and go to state 98
    transpuesta                    shift and go to state 53
    loopFromDo                     shift and go to state 58
    llamadaAFuncion                shift and go to state 76
    asignacion                     shift and go to state 61
    inversa                        shift and go to state 62
    bloqueAux                      shift and go to state 141
    while                          shift and go to state 66
    comparacion                    shift and go to state 67
    escritura                      shift and go to state 68

state 101

    (56) param -> tipo ID paramAvarTable .
    (57) param -> tipo ID paramAvarTable . COMA param

    RPAREN          reduce using rule 56 (param -> tipo ID paramAvarTable .)
    COMA            shift and go to state 142


state 102

    (16) main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE .

    $end            reduce using rule 16 (main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE .)


state 103

    (102) asignacion -> arreglo EQUAL push_poper . exp create_asign SEMICOLON
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    exp                            shift and go to state 143
    factorAux                      shift and go to state 120
    factor                         shift and go to state 112
    var_cte                        shift and go to state 106

state 104

    (117) escritura -> PRINT push_poper LPAREN . escrituraAux RPAREN quad_print SEMICOLON
    (118) escritura -> PRINT push_poper LPAREN . llamadaAFuncion RPAREN quad_print SEMICOLON
    (121) escrituraAux -> . expresion
    (122) escrituraAux -> . CTE_STRING push_cte
    (123) escrituraAux -> . expresion COMA escrituraAux
    (124) escrituraAux -> . CTE_STRING push_cte COMA escrituraAux
    (125) escrituraAux -> . llamadaAFuncion
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (126) expresion -> . exp
    (127) expresion -> . exp comp exp quad_comp
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    CTE_STRING      shift and go to state 144
    ID              shift and go to state 146
    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113

    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    expresion                      shift and go to state 145
    var_cte                        shift and go to state 106
    escrituraAux                   shift and go to state 147
    llamadaAFuncion                shift and go to state 148
    exp                            shift and go to state 119
    factorAux                      shift and go to state 120

state 105

    (103) asignacion -> matrix EQUAL push_poper . exp create_asign SEMICOLON
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    exp                            shift and go to state 149
    factorAux                      shift and go to state 120
    factor                         shift and go to state 112
    var_cte                        shift and go to state 106

state 106

    (149) factorAux -> var_cte .

    TIMES           reduce using rule 149 (factorAux -> var_cte .)
    DIVIDE          reduce using rule 149 (factorAux -> var_cte .)
    PLUS            reduce using rule 149 (factorAux -> var_cte .)
    MINUS           reduce using rule 149 (factorAux -> var_cte .)
    SEMICOLON       reduce using rule 149 (factorAux -> var_cte .)
    LOWERTHAN       reduce using rule 149 (factorAux -> var_cte .)
    MORETHAN        reduce using rule 149 (factorAux -> var_cte .)
    DIFFERENT       reduce using rule 149 (factorAux -> var_cte .)
    DOUBLEEQUAL     reduce using rule 149 (factorAux -> var_cte .)
    LOWEREQUAL      reduce using rule 149 (factorAux -> var_cte .)
    MOREEQUAL       reduce using rule 149 (factorAux -> var_cte .)
    RPAREN          reduce using rule 149 (factorAux -> var_cte .)
    COMA            reduce using rule 149 (factorAux -> var_cte .)
    RCORCH          reduce using rule 149 (factorAux -> var_cte .)
    RBRACE          reduce using rule 149 (factorAux -> var_cte .)


state 107

    (157) var_cte -> arreglo .

    TIMES           reduce using rule 157 (var_cte -> arreglo .)
    DIVIDE          reduce using rule 157 (var_cte -> arreglo .)
    PLUS            reduce using rule 157 (var_cte -> arreglo .)
    MINUS           reduce using rule 157 (var_cte -> arreglo .)
    LOWERTHAN       reduce using rule 157 (var_cte -> arreglo .)
    MORETHAN        reduce using rule 157 (var_cte -> arreglo .)
    DIFFERENT       reduce using rule 157 (var_cte -> arreglo .)
    DOUBLEEQUAL     reduce using rule 157 (var_cte -> arreglo .)
    LOWEREQUAL      reduce using rule 157 (var_cte -> arreglo .)
    MOREEQUAL       reduce using rule 157 (var_cte -> arreglo .)
    COMA            reduce using rule 157 (var_cte -> arreglo .)
    RPAREN          reduce using rule 157 (var_cte -> arreglo .)
    RCORCH          reduce using rule 157 (var_cte -> arreglo .)
    SEMICOLON       reduce using rule 157 (var_cte -> arreglo .)
    RBRACE          reduce using rule 157 (var_cte -> arreglo .)


state 108

    (135) exp -> termino . quad_term
    (136) exp -> termino . quad_term exp1
    (139) quad_term -> .

    PLUS            reduce using rule 139 (quad_term -> .)
    MINUS           reduce using rule 139 (quad_term -> .)
    LOWERTHAN       reduce using rule 139 (quad_term -> .)
    MORETHAN        reduce using rule 139 (quad_term -> .)
    DIFFERENT       reduce using rule 139 (quad_term -> .)
    DOUBLEEQUAL     reduce using rule 139 (quad_term -> .)
    LOWEREQUAL      reduce using rule 139 (quad_term -> .)
    MOREEQUAL       reduce using rule 139 (quad_term -> .)
    RPAREN          reduce using rule 139 (quad_term -> .)
    SEMICOLON       reduce using rule 139 (quad_term -> .)
    COMA            reduce using rule 139 (quad_term -> .)
    RCORCH          reduce using rule 139 (quad_term -> .)
    RBRACE          reduce using rule 139 (quad_term -> .)

    quad_term                      shift and go to state 150

state 109

    (148) factorAux -> MINUS . push_poper var_cte
    (152) push_poper -> .

    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 151

state 110

    (158) var_cte -> matrix .

    TIMES           reduce using rule 158 (var_cte -> matrix .)
    DIVIDE          reduce using rule 158 (var_cte -> matrix .)
    PLUS            reduce using rule 158 (var_cte -> matrix .)
    MINUS           reduce using rule 158 (var_cte -> matrix .)
    LOWERTHAN       reduce using rule 158 (var_cte -> matrix .)
    MORETHAN        reduce using rule 158 (var_cte -> matrix .)
    DIFFERENT       reduce using rule 158 (var_cte -> matrix .)
    DOUBLEEQUAL     reduce using rule 158 (var_cte -> matrix .)
    LOWEREQUAL      reduce using rule 158 (var_cte -> matrix .)
    MOREEQUAL       reduce using rule 158 (var_cte -> matrix .)
    COMA            reduce using rule 158 (var_cte -> matrix .)
    RPAREN          reduce using rule 158 (var_cte -> matrix .)
    RCORCH          reduce using rule 158 (var_cte -> matrix .)
    SEMICOLON       reduce using rule 158 (var_cte -> matrix .)
    RBRACE          reduce using rule 158 (var_cte -> matrix .)


state 111

    (147) factorAux -> PLUS . push_poper var_cte
    (152) push_poper -> .

    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 152

state 112

    (141) termino -> factor . quad_fact
    (142) termino -> factor . quad_fact termino1
    (140) quad_fact -> .

    TIMES           reduce using rule 140 (quad_fact -> .)
    DIVIDE          reduce using rule 140 (quad_fact -> .)
    PLUS            reduce using rule 140 (quad_fact -> .)
    MINUS           reduce using rule 140 (quad_fact -> .)
    LOWERTHAN       reduce using rule 140 (quad_fact -> .)
    MORETHAN        reduce using rule 140 (quad_fact -> .)
    DIFFERENT       reduce using rule 140 (quad_fact -> .)
    DOUBLEEQUAL     reduce using rule 140 (quad_fact -> .)
    LOWEREQUAL      reduce using rule 140 (quad_fact -> .)
    MOREEQUAL       reduce using rule 140 (quad_fact -> .)
    RPAREN          reduce using rule 140 (quad_fact -> .)
    SEMICOLON       reduce using rule 140 (quad_fact -> .)
    COMA            reduce using rule 140 (quad_fact -> .)
    RCORCH          reduce using rule 140 (quad_fact -> .)
    RBRACE          reduce using rule 140 (quad_fact -> .)

    quad_fact                      shift and go to state 153

state 113

    (155) var_cte -> CTE_F . push_cte
    (151) push_cte -> .

    TIMES           reduce using rule 151 (push_cte -> .)
    DIVIDE          reduce using rule 151 (push_cte -> .)
    PLUS            reduce using rule 151 (push_cte -> .)
    MINUS           reduce using rule 151 (push_cte -> .)
    LOWERTHAN       reduce using rule 151 (push_cte -> .)
    MORETHAN        reduce using rule 151 (push_cte -> .)
    DIFFERENT       reduce using rule 151 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 151 (push_cte -> .)
    LOWEREQUAL      reduce using rule 151 (push_cte -> .)
    MOREEQUAL       reduce using rule 151 (push_cte -> .)
    RPAREN          reduce using rule 151 (push_cte -> .)
    SEMICOLON       reduce using rule 151 (push_cte -> .)
    COMA            reduce using rule 151 (push_cte -> .)
    RCORCH          reduce using rule 151 (push_cte -> .)
    RBRACE          reduce using rule 151 (push_cte -> .)

    push_cte                       shift and go to state 154

state 114

    (156) var_cte -> CTE_STRING . push_cte
    (151) push_cte -> .

    TIMES           reduce using rule 151 (push_cte -> .)
    DIVIDE          reduce using rule 151 (push_cte -> .)
    PLUS            reduce using rule 151 (push_cte -> .)
    MINUS           reduce using rule 151 (push_cte -> .)
    LOWERTHAN       reduce using rule 151 (push_cte -> .)
    MORETHAN        reduce using rule 151 (push_cte -> .)
    DIFFERENT       reduce using rule 151 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 151 (push_cte -> .)
    LOWEREQUAL      reduce using rule 151 (push_cte -> .)
    MOREEQUAL       reduce using rule 151 (push_cte -> .)
    RPAREN          reduce using rule 151 (push_cte -> .)
    SEMICOLON       reduce using rule 151 (push_cte -> .)
    RCORCH          reduce using rule 151 (push_cte -> .)
    COMA            reduce using rule 151 (push_cte -> .)
    RBRACE          reduce using rule 151 (push_cte -> .)

    push_cte                       shift and go to state 155

state 115

    (154) var_cte -> CTE_I . push_cte
    (151) push_cte -> .

    TIMES           reduce using rule 151 (push_cte -> .)
    DIVIDE          reduce using rule 151 (push_cte -> .)
    PLUS            reduce using rule 151 (push_cte -> .)
    MINUS           reduce using rule 151 (push_cte -> .)
    LOWERTHAN       reduce using rule 151 (push_cte -> .)
    MORETHAN        reduce using rule 151 (push_cte -> .)
    DIFFERENT       reduce using rule 151 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 151 (push_cte -> .)
    LOWEREQUAL      reduce using rule 151 (push_cte -> .)
    MOREEQUAL       reduce using rule 151 (push_cte -> .)
    RPAREN          reduce using rule 151 (push_cte -> .)
    SEMICOLON       reduce using rule 151 (push_cte -> .)
    COMA            reduce using rule 151 (push_cte -> .)
    RCORCH          reduce using rule 151 (push_cte -> .)
    RBRACE          reduce using rule 151 (push_cte -> .)

    push_cte                       shift and go to state 156

state 116

    (145) factor -> LPAREN . expresion RPAREN
    (126) expresion -> . exp
    (127) expresion -> . exp comp exp quad_comp
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    expresion                      shift and go to state 157
    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    exp                            shift and go to state 119
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106

state 117

    (153) var_cte -> ID . push_id
    (98) arreglo -> ID . push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> ID . push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2
    (150) push_id -> .

    LCORCH          reduce using rule 150 (push_id -> .)
    TIMES           reduce using rule 150 (push_id -> .)
    DIVIDE          reduce using rule 150 (push_id -> .)
    PLUS            reduce using rule 150 (push_id -> .)
    MINUS           reduce using rule 150 (push_id -> .)
    LOWERTHAN       reduce using rule 150 (push_id -> .)
    MORETHAN        reduce using rule 150 (push_id -> .)
    DIFFERENT       reduce using rule 150 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 150 (push_id -> .)
    LOWEREQUAL      reduce using rule 150 (push_id -> .)
    MOREEQUAL       reduce using rule 150 (push_id -> .)
    RPAREN          reduce using rule 150 (push_id -> .)
    SEMICOLON       reduce using rule 150 (push_id -> .)
    RCORCH          reduce using rule 150 (push_id -> .)
    COMA            reduce using rule 150 (push_id -> .)
    RBRACE          reduce using rule 150 (push_id -> .)

    push_id                        shift and go to state 158

state 118

    (112) condicion -> IF LPAREN expresion . RPAREN cond bloque condFinal
    (113) condicion -> IF LPAREN expresion . RPAREN cond bloque ELSE condElse bloque condFinal

    RPAREN          shift and go to state 159


state 119

    (126) expresion -> exp .
    (127) expresion -> exp . comp exp quad_comp
    (128) comp -> . LOWERTHAN push_poper
    (129) comp -> . MORETHAN push_poper
    (130) comp -> . DIFFERENT push_poper
    (131) comp -> . DOUBLEEQUAL push_poper
    (132) comp -> . LOWEREQUAL push_poper
    (133) comp -> . MOREEQUAL push_poper

    RPAREN          reduce using rule 126 (expresion -> exp .)
    SEMICOLON       reduce using rule 126 (expresion -> exp .)
    RBRACE          reduce using rule 126 (expresion -> exp .)
    COMA            reduce using rule 126 (expresion -> exp .)
    LOWERTHAN       shift and go to state 163
    MORETHAN        shift and go to state 166
    DIFFERENT       shift and go to state 161
    DOUBLEEQUAL     shift and go to state 162
    LOWEREQUAL      shift and go to state 165
    MOREEQUAL       shift and go to state 160

    comp                           shift and go to state 164

state 120

    (146) factor -> factorAux .

    TIMES           reduce using rule 146 (factor -> factorAux .)
    DIVIDE          reduce using rule 146 (factor -> factorAux .)
    PLUS            reduce using rule 146 (factor -> factorAux .)
    MINUS           reduce using rule 146 (factor -> factorAux .)
    LOWERTHAN       reduce using rule 146 (factor -> factorAux .)
    MORETHAN        reduce using rule 146 (factor -> factorAux .)
    DIFFERENT       reduce using rule 146 (factor -> factorAux .)
    DOUBLEEQUAL     reduce using rule 146 (factor -> factorAux .)
    LOWEREQUAL      reduce using rule 146 (factor -> factorAux .)
    MOREEQUAL       reduce using rule 146 (factor -> factorAux .)
    RBRACE          reduce using rule 146 (factor -> factorAux .)
    SEMICOLON       reduce using rule 146 (factor -> factorAux .)
    RPAREN          reduce using rule 146 (factor -> factorAux .)
    COMA            reduce using rule 146 (factor -> factorAux .)
    RCORCH          reduce using rule 146 (factor -> factorAux .)


state 121

    (20) varAux1 -> tipo varAux2 . SEMICOLON
    (21) varAux1 -> tipo varAux2 . SEMICOLON varAux1

    SEMICOLON       shift and go to state 167


state 122

    (22) varAux2 -> ID . push_var
    (23) varAux2 -> ID . push_var COMA varAux2
    (24) varAux2 -> ID . LCORCH CTE_I RCORCH push_arreglo
    (25) varAux2 -> ID . LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (26) varAux2 -> ID . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (27) varAux2 -> ID . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2
    (28) push_var -> .

    LCORCH          shift and go to state 168
    COMA            reduce using rule 28 (push_var -> .)
    SEMICOLON       reduce using rule 28 (push_var -> .)

    push_var                       shift and go to state 169

state 123

    (119) lectura -> INPUT push_poper LPAREN . ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 170


state 124

    (111) comparacion -> ID push_id DOUBLEEQUAL . push_poper expresion SEMICOLON
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 171

state 125

    (82) inversa -> ID push_id INVERSA . creaInversa SEMICOLON
    (83) creaInversa -> .

    SEMICOLON       reduce using rule 83 (creaInversa -> .)

    creaInversa                    shift and go to state 172

state 126

    (98) arreglo -> ID push_id LCORCH . exp RCORCH ver_dim1
    (99) matrix -> ID push_id LCORCH . exp RCORCH LCORCH exp RCORCH ver_dim2
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    arreglo                        shift and go to state 107
    factor                         shift and go to state 112
    termino                        shift and go to state 108
    exp                            shift and go to state 173
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106

state 127

    (101) asignacion -> ID push_id EQUAL . push_poper expresion create_asign SEMICOLON
    (104) asignacion -> ID push_id EQUAL . push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> ID push_id EQUAL . push_poper determinante SEMICOLON
    (152) push_poper -> .

    ID              reduce using rule 152 (push_poper -> .)
    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 174

state 128

    (81) transpuesta -> ID push_id TRANSPUESTA . creaTrans SEMICOLON
    (84) creaTrans -> .

    SEMICOLON       reduce using rule 84 (creaTrans -> .)

    creaTrans                      shift and go to state 175

state 129

    (86) llamadaAFuncion -> ID actualizaFuncion generarEra . LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> ID actualizaFuncion generarEra . LPAREN paramFuncion gosub RPAREN

    LPAREN          shift and go to state 176


state 130

    (69) loopFromDo -> FROM LPAREN ID . EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    EQUAL           shift and go to state 177


state 131

    (65) while -> WHILE while1 LPAREN . expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (126) expresion -> . exp
    (127) expresion -> . exp comp exp quad_comp
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    var_cte                        shift and go to state 106
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    expresion                      shift and go to state 178
    exp                            shift and go to state 119
    factorAux                      shift and go to state 120

state 132

    (78) estatuto -> BREAK generaCuadbreak SEMICOLON .

    BREAK           reduce using rule 78 (estatuto -> BREAK generaCuadbreak SEMICOLON .)
    ID              reduce using rule 78 (estatuto -> BREAK generaCuadbreak SEMICOLON .)
    IF              reduce using rule 78 (estatuto -> BREAK generaCuadbreak SEMICOLON .)
    PRINT           reduce using rule 78 (estatuto -> BREAK generaCuadbreak SEMICOLON .)
    WHILE           reduce using rule 78 (estatuto -> BREAK generaCuadbreak SEMICOLON .)
    FROM            reduce using rule 78 (estatuto -> BREAK generaCuadbreak SEMICOLON .)
    INPUT           reduce using rule 78 (estatuto -> BREAK generaCuadbreak SEMICOLON .)
    RBRACE          reduce using rule 78 (estatuto -> BREAK generaCuadbreak SEMICOLON .)
    RETURN          reduce using rule 78 (estatuto -> BREAK generaCuadbreak SEMICOLON .)


state 133

    (13) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH
    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH COMA varAuxGlobal2

    CTE_I           shift and go to state 179


state 134

    (12) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH COMA . varAuxGlobal2
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2
    (11) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 180

state 135

    (52) functionReturn -> RETURN exp . creaCuadReturn SEMICOLON
    (54) creaCuadReturn -> .

    SEMICOLON       reduce using rule 54 (creaCuadReturn -> .)

    creaCuadReturn                 shift and go to state 181

state 136

    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux . functionReturn RBRACE endProc
    (43) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux . functionReturn RBRACE endProc function
    (52) functionReturn -> . RETURN exp creaCuadReturn SEMICOLON
    (53) functionReturn -> . empty
    (60) empty -> .

    RETURN          shift and go to state 95
    RBRACE          reduce using rule 60 (empty -> .)

    functionReturn                 shift and go to state 182
    empty                          shift and go to state 98

state 137

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE . endProc
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE . endProc function
    (55) endProc -> .

    FUNCTION        reduce using rule 55 (endProc -> .)
    MAIN            reduce using rule 55 (endProc -> .)

    endProc                        shift and go to state 183

state 138

    (44) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn . RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn . RBRACE endProc function

    RBRACE          shift and go to state 184


state 139

    (49) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars . bloqueAux functionReturn RBRACE endProc
    (51) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars . bloqueAux functionReturn RBRACE endProc function
    (63) bloqueAux -> . estatuto
    (64) bloqueAux -> . estatuto bloqueAux
    (70) estatuto -> . asignacion
    (71) estatuto -> . condicion
    (72) estatuto -> . escritura
    (73) estatuto -> . while
    (74) estatuto -> . loopFromDo
    (75) estatuto -> . comparacion
    (76) estatuto -> . llamadaAFuncion SEMICOLON
    (77) estatuto -> . lectura
    (78) estatuto -> . BREAK generaCuadbreak SEMICOLON
    (79) estatuto -> . transpuesta
    (80) estatuto -> . inversa
    (101) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (102) asignacion -> . arreglo EQUAL push_poper exp create_asign SEMICOLON
    (103) asignacion -> . matrix EQUAL push_poper exp create_asign SEMICOLON
    (104) asignacion -> . ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> . ID push_id EQUAL push_poper determinante SEMICOLON
    (112) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (113) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (117) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (118) escritura -> . PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON
    (65) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (69) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (111) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (119) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) transpuesta -> . ID push_id TRANSPUESTA creaTrans SEMICOLON
    (82) inversa -> . ID push_id INVERSA creaInversa SEMICOLON
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    BREAK           shift and go to state 65
    ID              shift and go to state 75
    IF              shift and go to state 51
    PRINT           shift and go to state 48
    WHILE           shift and go to state 63
    FROM            shift and go to state 60
    INPUT           shift and go to state 56

    arreglo                        shift and go to state 47
    matrix                         shift and go to state 49
    estatuto                       shift and go to state 50
    condicion                      shift and go to state 54
    lectura                        shift and go to state 52
    transpuesta                    shift and go to state 53
    loopFromDo                     shift and go to state 58
    llamadaAFuncion                shift and go to state 76
    asignacion                     shift and go to state 61
    inversa                        shift and go to state 62
    bloqueAux                      shift and go to state 185
    while                          shift and go to state 66
    comparacion                    shift and go to state 67
    escritura                      shift and go to state 68

state 140

    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn . RBRACE endProc
    (50) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn . RBRACE endProc function

    RBRACE          shift and go to state 186


state 141

    (47) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux . functionReturn RBRACE endProc
    (48) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux . functionReturn RBRACE endProc function
    (52) functionReturn -> . RETURN exp creaCuadReturn SEMICOLON
    (53) functionReturn -> . empty
    (60) empty -> .

    RETURN          shift and go to state 95
    RBRACE          reduce using rule 60 (empty -> .)

    functionReturn                 shift and go to state 187
    empty                          shift and go to state 98

state 142

    (57) param -> tipo ID paramAvarTable COMA . param
    (56) param -> . tipo ID paramAvarTable
    (57) param -> . tipo ID paramAvarTable COMA param
    (58) param -> . empty
    (31) tipo -> . INT
    (32) tipo -> . FLOAT
    (33) tipo -> . CHAR
    (60) empty -> .

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    RPAREN          reduce using rule 60 (empty -> .)

    empty                          shift and go to state 44
    param                          shift and go to state 188
    tipo                           shift and go to state 45

state 143

    (102) asignacion -> arreglo EQUAL push_poper exp . create_asign SEMICOLON
    (110) create_asign -> .

    SEMICOLON       reduce using rule 110 (create_asign -> .)

    create_asign                   shift and go to state 189

state 144

    (122) escrituraAux -> CTE_STRING . push_cte
    (124) escrituraAux -> CTE_STRING . push_cte COMA escrituraAux
    (156) var_cte -> CTE_STRING . push_cte
    (151) push_cte -> .

    COMA            reduce using rule 151 (push_cte -> .)
    RPAREN          reduce using rule 151 (push_cte -> .)
    TIMES           reduce using rule 151 (push_cte -> .)
    DIVIDE          reduce using rule 151 (push_cte -> .)
    PLUS            reduce using rule 151 (push_cte -> .)
    MINUS           reduce using rule 151 (push_cte -> .)
    LOWERTHAN       reduce using rule 151 (push_cte -> .)
    MORETHAN        reduce using rule 151 (push_cte -> .)
    DIFFERENT       reduce using rule 151 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 151 (push_cte -> .)
    LOWEREQUAL      reduce using rule 151 (push_cte -> .)
    MOREEQUAL       reduce using rule 151 (push_cte -> .)

    push_cte                       shift and go to state 190

state 145

    (121) escrituraAux -> expresion .
    (123) escrituraAux -> expresion . COMA escrituraAux

    RPAREN          reduce using rule 121 (escrituraAux -> expresion .)
    COMA            shift and go to state 191


state 146

    (86) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (153) var_cte -> ID . push_id
    (98) arreglo -> ID . push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> ID . push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2
    (88) actualizaFuncion -> .
    (150) push_id -> .

    LPAREN          reduce using rule 88 (actualizaFuncion -> .)
    LCORCH          reduce using rule 150 (push_id -> .)
    TIMES           reduce using rule 150 (push_id -> .)
    DIVIDE          reduce using rule 150 (push_id -> .)
    PLUS            reduce using rule 150 (push_id -> .)
    MINUS           reduce using rule 150 (push_id -> .)
    LOWERTHAN       reduce using rule 150 (push_id -> .)
    MORETHAN        reduce using rule 150 (push_id -> .)
    DIFFERENT       reduce using rule 150 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 150 (push_id -> .)
    LOWEREQUAL      reduce using rule 150 (push_id -> .)
    MOREEQUAL       reduce using rule 150 (push_id -> .)
    COMA            reduce using rule 150 (push_id -> .)
    RPAREN          reduce using rule 150 (push_id -> .)

    actualizaFuncion               shift and go to state 87
    push_id                        shift and go to state 158

state 147

    (117) escritura -> PRINT push_poper LPAREN escrituraAux . RPAREN quad_print SEMICOLON

    RPAREN          shift and go to state 192


state 148

    (118) escritura -> PRINT push_poper LPAREN llamadaAFuncion . RPAREN quad_print SEMICOLON
    (125) escrituraAux -> llamadaAFuncion .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 193

  ! RPAREN          [ reduce using rule 125 (escrituraAux -> llamadaAFuncion .) ]


state 149

    (103) asignacion -> matrix EQUAL push_poper exp . create_asign SEMICOLON
    (110) create_asign -> .

    SEMICOLON       reduce using rule 110 (create_asign -> .)

    create_asign                   shift and go to state 194

state 150

    (135) exp -> termino quad_term .
    (136) exp -> termino quad_term . exp1
    (137) exp1 -> . PLUS push_poper exp
    (138) exp1 -> . MINUS push_poper exp

    SEMICOLON       reduce using rule 135 (exp -> termino quad_term .)
    COMA            reduce using rule 135 (exp -> termino quad_term .)
    RPAREN          reduce using rule 135 (exp -> termino quad_term .)
    RCORCH          reduce using rule 135 (exp -> termino quad_term .)
    LOWERTHAN       reduce using rule 135 (exp -> termino quad_term .)
    MORETHAN        reduce using rule 135 (exp -> termino quad_term .)
    DIFFERENT       reduce using rule 135 (exp -> termino quad_term .)
    DOUBLEEQUAL     reduce using rule 135 (exp -> termino quad_term .)
    LOWEREQUAL      reduce using rule 135 (exp -> termino quad_term .)
    MOREEQUAL       reduce using rule 135 (exp -> termino quad_term .)
    RBRACE          reduce using rule 135 (exp -> termino quad_term .)
    PLUS            shift and go to state 196
    MINUS           shift and go to state 197

    exp1                           shift and go to state 195

state 151

    (148) factorAux -> MINUS push_poper . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    var_cte                        shift and go to state 198
    arreglo                        shift and go to state 107

state 152

    (147) factorAux -> PLUS push_poper . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    var_cte                        shift and go to state 199
    arreglo                        shift and go to state 107

state 153

    (141) termino -> factor quad_fact .
    (142) termino -> factor quad_fact . termino1
    (143) termino1 -> . TIMES push_poper termino
    (144) termino1 -> . DIVIDE push_poper termino

    PLUS            reduce using rule 141 (termino -> factor quad_fact .)
    MINUS           reduce using rule 141 (termino -> factor quad_fact .)
    COMA            reduce using rule 141 (termino -> factor quad_fact .)
    RPAREN          reduce using rule 141 (termino -> factor quad_fact .)
    LOWERTHAN       reduce using rule 141 (termino -> factor quad_fact .)
    MORETHAN        reduce using rule 141 (termino -> factor quad_fact .)
    DIFFERENT       reduce using rule 141 (termino -> factor quad_fact .)
    DOUBLEEQUAL     reduce using rule 141 (termino -> factor quad_fact .)
    LOWEREQUAL      reduce using rule 141 (termino -> factor quad_fact .)
    MOREEQUAL       reduce using rule 141 (termino -> factor quad_fact .)
    SEMICOLON       reduce using rule 141 (termino -> factor quad_fact .)
    RCORCH          reduce using rule 141 (termino -> factor quad_fact .)
    RBRACE          reduce using rule 141 (termino -> factor quad_fact .)
    TIMES           shift and go to state 202
    DIVIDE          shift and go to state 200

    termino1                       shift and go to state 201

state 154

    (155) var_cte -> CTE_F push_cte .

    TIMES           reduce using rule 155 (var_cte -> CTE_F push_cte .)
    DIVIDE          reduce using rule 155 (var_cte -> CTE_F push_cte .)
    PLUS            reduce using rule 155 (var_cte -> CTE_F push_cte .)
    MINUS           reduce using rule 155 (var_cte -> CTE_F push_cte .)
    LOWERTHAN       reduce using rule 155 (var_cte -> CTE_F push_cte .)
    MORETHAN        reduce using rule 155 (var_cte -> CTE_F push_cte .)
    DIFFERENT       reduce using rule 155 (var_cte -> CTE_F push_cte .)
    DOUBLEEQUAL     reduce using rule 155 (var_cte -> CTE_F push_cte .)
    LOWEREQUAL      reduce using rule 155 (var_cte -> CTE_F push_cte .)
    MOREEQUAL       reduce using rule 155 (var_cte -> CTE_F push_cte .)
    COMA            reduce using rule 155 (var_cte -> CTE_F push_cte .)
    RPAREN          reduce using rule 155 (var_cte -> CTE_F push_cte .)
    RCORCH          reduce using rule 155 (var_cte -> CTE_F push_cte .)
    SEMICOLON       reduce using rule 155 (var_cte -> CTE_F push_cte .)
    RBRACE          reduce using rule 155 (var_cte -> CTE_F push_cte .)


state 155

    (156) var_cte -> CTE_STRING push_cte .

    TIMES           reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    DIVIDE          reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    PLUS            reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    MINUS           reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    RCORCH          reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    LOWERTHAN       reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    MORETHAN        reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    DIFFERENT       reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    DOUBLEEQUAL     reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    LOWEREQUAL      reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    MOREEQUAL       reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    RPAREN          reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    SEMICOLON       reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    COMA            reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    RBRACE          reduce using rule 156 (var_cte -> CTE_STRING push_cte .)


state 156

    (154) var_cte -> CTE_I push_cte .

    TIMES           reduce using rule 154 (var_cte -> CTE_I push_cte .)
    DIVIDE          reduce using rule 154 (var_cte -> CTE_I push_cte .)
    PLUS            reduce using rule 154 (var_cte -> CTE_I push_cte .)
    MINUS           reduce using rule 154 (var_cte -> CTE_I push_cte .)
    LOWERTHAN       reduce using rule 154 (var_cte -> CTE_I push_cte .)
    MORETHAN        reduce using rule 154 (var_cte -> CTE_I push_cte .)
    DIFFERENT       reduce using rule 154 (var_cte -> CTE_I push_cte .)
    DOUBLEEQUAL     reduce using rule 154 (var_cte -> CTE_I push_cte .)
    LOWEREQUAL      reduce using rule 154 (var_cte -> CTE_I push_cte .)
    MOREEQUAL       reduce using rule 154 (var_cte -> CTE_I push_cte .)
    COMA            reduce using rule 154 (var_cte -> CTE_I push_cte .)
    RPAREN          reduce using rule 154 (var_cte -> CTE_I push_cte .)
    RCORCH          reduce using rule 154 (var_cte -> CTE_I push_cte .)
    SEMICOLON       reduce using rule 154 (var_cte -> CTE_I push_cte .)
    RBRACE          reduce using rule 154 (var_cte -> CTE_I push_cte .)


state 157

    (145) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 203


state 158

    (153) var_cte -> ID push_id .
    (98) arreglo -> ID push_id . LCORCH exp RCORCH ver_dim1
    (99) matrix -> ID push_id . LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    TIMES           reduce using rule 153 (var_cte -> ID push_id .)
    DIVIDE          reduce using rule 153 (var_cte -> ID push_id .)
    PLUS            reduce using rule 153 (var_cte -> ID push_id .)
    MINUS           reduce using rule 153 (var_cte -> ID push_id .)
    LOWERTHAN       reduce using rule 153 (var_cte -> ID push_id .)
    MORETHAN        reduce using rule 153 (var_cte -> ID push_id .)
    DIFFERENT       reduce using rule 153 (var_cte -> ID push_id .)
    DOUBLEEQUAL     reduce using rule 153 (var_cte -> ID push_id .)
    LOWEREQUAL      reduce using rule 153 (var_cte -> ID push_id .)
    MOREEQUAL       reduce using rule 153 (var_cte -> ID push_id .)
    COMA            reduce using rule 153 (var_cte -> ID push_id .)
    RPAREN          reduce using rule 153 (var_cte -> ID push_id .)
    RCORCH          reduce using rule 153 (var_cte -> ID push_id .)
    SEMICOLON       reduce using rule 153 (var_cte -> ID push_id .)
    RBRACE          reduce using rule 153 (var_cte -> ID push_id .)
    LCORCH          shift and go to state 126


state 159

    (112) condicion -> IF LPAREN expresion RPAREN . cond bloque condFinal
    (113) condicion -> IF LPAREN expresion RPAREN . cond bloque ELSE condElse bloque condFinal
    (114) cond -> .

    LBRACE          reduce using rule 114 (cond -> .)

    cond                           shift and go to state 204

state 160

    (133) comp -> MOREEQUAL . push_poper
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 205

state 161

    (130) comp -> DIFFERENT . push_poper
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 206

state 162

    (131) comp -> DOUBLEEQUAL . push_poper
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 207

state 163

    (128) comp -> LOWERTHAN . push_poper
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 208

state 164

    (127) expresion -> exp comp . exp quad_comp
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    exp                            shift and go to state 209
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106

state 165

    (132) comp -> LOWEREQUAL . push_poper
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 210

state 166

    (129) comp -> MORETHAN . push_poper
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 211

state 167

    (20) varAux1 -> tipo varAux2 SEMICOLON .
    (21) varAux1 -> tipo varAux2 SEMICOLON . varAux1
    (20) varAux1 -> . tipo varAux2 SEMICOLON
    (21) varAux1 -> . tipo varAux2 SEMICOLON varAux1
    (31) tipo -> . INT
    (32) tipo -> . FLOAT
    (33) tipo -> . CHAR

    BREAK           reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON .)
    ID              reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON .)
    IF              reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON .)
    PRINT           reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON .)
    WHILE           reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON .)
    FROM            reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON .)
    INPUT           reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAux1                        shift and go to state 212
    tipo                           shift and go to state 83

state 168

    (24) varAux2 -> ID LCORCH . CTE_I RCORCH push_arreglo
    (25) varAux2 -> ID LCORCH . CTE_I RCORCH push_arreglo COMA varAux2
    (26) varAux2 -> ID LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (27) varAux2 -> ID LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    CTE_I           shift and go to state 213


state 169

    (22) varAux2 -> ID push_var .
    (23) varAux2 -> ID push_var . COMA varAux2

    SEMICOLON       reduce using rule 22 (varAux2 -> ID push_var .)
    COMA            shift and go to state 214


state 170

    (119) lectura -> INPUT push_poper LPAREN ID . push_id RPAREN quad_print SEMICOLON
    (150) push_id -> .

    RPAREN          reduce using rule 150 (push_id -> .)

    push_id                        shift and go to state 215

state 171

    (111) comparacion -> ID push_id DOUBLEEQUAL push_poper . expresion SEMICOLON
    (126) expresion -> . exp
    (127) expresion -> . exp comp exp quad_comp
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    expresion                      shift and go to state 216
    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    var_cte                        shift and go to state 106
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    exp                            shift and go to state 119
    factorAux                      shift and go to state 120

state 172

    (82) inversa -> ID push_id INVERSA creaInversa . SEMICOLON

    SEMICOLON       shift and go to state 217


state 173

    (98) arreglo -> ID push_id LCORCH exp . RCORCH ver_dim1
    (99) matrix -> ID push_id LCORCH exp . RCORCH LCORCH exp RCORCH ver_dim2

    RCORCH          shift and go to state 218


state 174

    (101) asignacion -> ID push_id EQUAL push_poper . expresion create_asign SEMICOLON
    (104) asignacion -> ID push_id EQUAL push_poper . llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> ID push_id EQUAL push_poper . determinante SEMICOLON
    (126) expresion -> . exp
    (127) expresion -> . exp comp exp quad_comp
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (106) determinante -> . ID push_id DETERMINANT
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    ID              shift and go to state 219
    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    expresion                      shift and go to state 220
    llamadaAFuncion                shift and go to state 221
    determinante                   shift and go to state 222
    exp                            shift and go to state 119
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106

state 175

    (81) transpuesta -> ID push_id TRANSPUESTA creaTrans . SEMICOLON

    SEMICOLON       shift and go to state 223


state 176

    (86) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN . paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN . paramFuncion gosub RPAREN
    (91) paramFuncion -> . ID push_id2 paramFuncionAux
    (92) paramFuncion -> . ID push_id2 paramFuncionAux COMA paramFuncion
    (93) paramFuncion -> . exp paramFuncionAux
    (94) paramFuncion -> . exp paramFuncionAux COMA paramFuncion
    (95) paramFuncion -> . empty
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (60) empty -> .
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    ID              shift and go to state 226
    RPAREN          reduce using rule 60 (empty -> .)
    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    paramFuncion                   shift and go to state 224
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    empty                          shift and go to state 225
    exp                            shift and go to state 227
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106

state 177

    (69) loopFromDo -> FROM LPAREN ID EQUAL . expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (126) expresion -> . exp
    (127) expresion -> . exp comp exp quad_comp
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    expresion                      shift and go to state 228
    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    var_cte                        shift and go to state 106
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    exp                            shift and go to state 119
    factorAux                      shift and go to state 120

state 178

    (65) while -> WHILE while1 LPAREN expresion . RPAREN while2 LBRACE bloqueAux RBRACE while3

    RPAREN          shift and go to state 229


state 179

    (13) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH
    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH COMA varAuxGlobal2

    RCORCH          shift and go to state 230


state 180

    (12) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH COMA varAuxGlobal2 .

    SEMICOLON       reduce using rule 12 (varAuxGlobal2 -> ID LCORCH CTE_I RCORCH COMA varAuxGlobal2 .)


state 181

    (52) functionReturn -> RETURN exp creaCuadReturn . SEMICOLON

    SEMICOLON       shift and go to state 231


state 182

    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn . RBRACE endProc
    (43) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn . RBRACE endProc function

    RBRACE          shift and go to state 232


state 183

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc .
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc . function
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc
    (47) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function
    (51) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function

    MAIN            reduce using rule 40 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 233

state 184

    (44) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE . endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE . endProc function
    (55) endProc -> .

    FUNCTION        reduce using rule 55 (endProc -> .)
    MAIN            reduce using rule 55 (endProc -> .)

    endProc                        shift and go to state 234

state 185

    (49) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux . functionReturn RBRACE endProc
    (51) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux . functionReturn RBRACE endProc function
    (52) functionReturn -> . RETURN exp creaCuadReturn SEMICOLON
    (53) functionReturn -> . empty
    (60) empty -> .

    RETURN          shift and go to state 95
    RBRACE          reduce using rule 60 (empty -> .)

    functionReturn                 shift and go to state 235
    empty                          shift and go to state 98

state 186

    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE . endProc
    (50) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE . endProc function
    (55) endProc -> .

    FUNCTION        reduce using rule 55 (endProc -> .)
    MAIN            reduce using rule 55 (endProc -> .)

    endProc                        shift and go to state 236

state 187

    (47) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn . RBRACE endProc
    (48) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn . RBRACE endProc function

    RBRACE          shift and go to state 237


state 188

    (57) param -> tipo ID paramAvarTable COMA param .

    RPAREN          reduce using rule 57 (param -> tipo ID paramAvarTable COMA param .)


state 189

    (102) asignacion -> arreglo EQUAL push_poper exp create_asign . SEMICOLON

    SEMICOLON       shift and go to state 238


state 190

    (122) escrituraAux -> CTE_STRING push_cte .
    (124) escrituraAux -> CTE_STRING push_cte . COMA escrituraAux
    (156) var_cte -> CTE_STRING push_cte .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 122 (escrituraAux -> CTE_STRING push_cte .)
    RPAREN          reduce using rule 122 (escrituraAux -> CTE_STRING push_cte .)
    COMA            shift and go to state 239
    TIMES           reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    DIVIDE          reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    PLUS            reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    MINUS           reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    LOWERTHAN       reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    MORETHAN        reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    DIFFERENT       reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    DOUBLEEQUAL     reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    LOWEREQUAL      reduce using rule 156 (var_cte -> CTE_STRING push_cte .)
    MOREEQUAL       reduce using rule 156 (var_cte -> CTE_STRING push_cte .)

  ! COMA            [ reduce using rule 156 (var_cte -> CTE_STRING push_cte .) ]
  ! RPAREN          [ reduce using rule 156 (var_cte -> CTE_STRING push_cte .) ]


state 191

    (123) escrituraAux -> expresion COMA . escrituraAux
    (121) escrituraAux -> . expresion
    (122) escrituraAux -> . CTE_STRING push_cte
    (123) escrituraAux -> . expresion COMA escrituraAux
    (124) escrituraAux -> . CTE_STRING push_cte COMA escrituraAux
    (125) escrituraAux -> . llamadaAFuncion
    (126) expresion -> . exp
    (127) expresion -> . exp comp exp quad_comp
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    CTE_STRING      shift and go to state 144
    ID              shift and go to state 146
    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113

    var_cte                        shift and go to state 106
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    escrituraAux                   shift and go to state 240
    expresion                      shift and go to state 145
    llamadaAFuncion                shift and go to state 241
    exp                            shift and go to state 119
    factorAux                      shift and go to state 120

state 192

    (117) escritura -> PRINT push_poper LPAREN escrituraAux RPAREN . quad_print SEMICOLON
    (120) quad_print -> .

    SEMICOLON       reduce using rule 120 (quad_print -> .)

    quad_print                     shift and go to state 242

state 193

    (118) escritura -> PRINT push_poper LPAREN llamadaAFuncion RPAREN . quad_print SEMICOLON
    (120) quad_print -> .

    SEMICOLON       reduce using rule 120 (quad_print -> .)

    quad_print                     shift and go to state 243

state 194

    (103) asignacion -> matrix EQUAL push_poper exp create_asign . SEMICOLON

    SEMICOLON       shift and go to state 244


state 195

    (136) exp -> termino quad_term exp1 .

    SEMICOLON       reduce using rule 136 (exp -> termino quad_term exp1 .)
    COMA            reduce using rule 136 (exp -> termino quad_term exp1 .)
    RPAREN          reduce using rule 136 (exp -> termino quad_term exp1 .)
    RCORCH          reduce using rule 136 (exp -> termino quad_term exp1 .)
    LOWERTHAN       reduce using rule 136 (exp -> termino quad_term exp1 .)
    MORETHAN        reduce using rule 136 (exp -> termino quad_term exp1 .)
    DIFFERENT       reduce using rule 136 (exp -> termino quad_term exp1 .)
    DOUBLEEQUAL     reduce using rule 136 (exp -> termino quad_term exp1 .)
    LOWEREQUAL      reduce using rule 136 (exp -> termino quad_term exp1 .)
    MOREEQUAL       reduce using rule 136 (exp -> termino quad_term exp1 .)
    RBRACE          reduce using rule 136 (exp -> termino quad_term exp1 .)


state 196

    (137) exp1 -> PLUS . push_poper exp
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 245

state 197

    (138) exp1 -> MINUS . push_poper exp
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 246

state 198

    (148) factorAux -> MINUS push_poper var_cte .

    TIMES           reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    DIVIDE          reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    PLUS            reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    MINUS           reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    SEMICOLON       reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    LOWERTHAN       reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    MORETHAN        reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    DIFFERENT       reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    DOUBLEEQUAL     reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    LOWEREQUAL      reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    MOREEQUAL       reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    RPAREN          reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    COMA            reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    RCORCH          reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)
    RBRACE          reduce using rule 148 (factorAux -> MINUS push_poper var_cte .)


state 199

    (147) factorAux -> PLUS push_poper var_cte .

    TIMES           reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    DIVIDE          reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    PLUS            reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    MINUS           reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    SEMICOLON       reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    LOWERTHAN       reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    MORETHAN        reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    DIFFERENT       reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    DOUBLEEQUAL     reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    LOWEREQUAL      reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    MOREEQUAL       reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    RPAREN          reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    COMA            reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    RCORCH          reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)
    RBRACE          reduce using rule 147 (factorAux -> PLUS push_poper var_cte .)


state 200

    (144) termino1 -> DIVIDE . push_poper termino
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 247

state 201

    (142) termino -> factor quad_fact termino1 .

    PLUS            reduce using rule 142 (termino -> factor quad_fact termino1 .)
    MINUS           reduce using rule 142 (termino -> factor quad_fact termino1 .)
    COMA            reduce using rule 142 (termino -> factor quad_fact termino1 .)
    RPAREN          reduce using rule 142 (termino -> factor quad_fact termino1 .)
    LOWERTHAN       reduce using rule 142 (termino -> factor quad_fact termino1 .)
    MORETHAN        reduce using rule 142 (termino -> factor quad_fact termino1 .)
    DIFFERENT       reduce using rule 142 (termino -> factor quad_fact termino1 .)
    DOUBLEEQUAL     reduce using rule 142 (termino -> factor quad_fact termino1 .)
    LOWEREQUAL      reduce using rule 142 (termino -> factor quad_fact termino1 .)
    MOREEQUAL       reduce using rule 142 (termino -> factor quad_fact termino1 .)
    SEMICOLON       reduce using rule 142 (termino -> factor quad_fact termino1 .)
    RCORCH          reduce using rule 142 (termino -> factor quad_fact termino1 .)
    RBRACE          reduce using rule 142 (termino -> factor quad_fact termino1 .)


state 202

    (143) termino1 -> TIMES . push_poper termino
    (152) push_poper -> .

    LPAREN          reduce using rule 152 (push_poper -> .)
    PLUS            reduce using rule 152 (push_poper -> .)
    MINUS           reduce using rule 152 (push_poper -> .)
    ID              reduce using rule 152 (push_poper -> .)
    CTE_I           reduce using rule 152 (push_poper -> .)
    CTE_F           reduce using rule 152 (push_poper -> .)
    CTE_STRING      reduce using rule 152 (push_poper -> .)

    push_poper                     shift and go to state 248

state 203

    (145) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    LOWERTHAN       reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    MORETHAN        reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    DIFFERENT       reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    DOUBLEEQUAL     reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    LOWEREQUAL      reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    MOREEQUAL       reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    COMA            reduce using rule 145 (factor -> LPAREN expresion RPAREN .)
    RCORCH          reduce using rule 145 (factor -> LPAREN expresion RPAREN .)


state 204

    (112) condicion -> IF LPAREN expresion RPAREN cond . bloque condFinal
    (113) condicion -> IF LPAREN expresion RPAREN cond . bloque ELSE condElse bloque condFinal
    (38) bloque -> . LBRACE RBRACE
    (39) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 249

    bloque                         shift and go to state 250

state 205

    (133) comp -> MOREEQUAL push_poper .

    LPAREN          reduce using rule 133 (comp -> MOREEQUAL push_poper .)
    PLUS            reduce using rule 133 (comp -> MOREEQUAL push_poper .)
    MINUS           reduce using rule 133 (comp -> MOREEQUAL push_poper .)
    ID              reduce using rule 133 (comp -> MOREEQUAL push_poper .)
    CTE_I           reduce using rule 133 (comp -> MOREEQUAL push_poper .)
    CTE_F           reduce using rule 133 (comp -> MOREEQUAL push_poper .)
    CTE_STRING      reduce using rule 133 (comp -> MOREEQUAL push_poper .)


state 206

    (130) comp -> DIFFERENT push_poper .

    LPAREN          reduce using rule 130 (comp -> DIFFERENT push_poper .)
    PLUS            reduce using rule 130 (comp -> DIFFERENT push_poper .)
    MINUS           reduce using rule 130 (comp -> DIFFERENT push_poper .)
    ID              reduce using rule 130 (comp -> DIFFERENT push_poper .)
    CTE_I           reduce using rule 130 (comp -> DIFFERENT push_poper .)
    CTE_F           reduce using rule 130 (comp -> DIFFERENT push_poper .)
    CTE_STRING      reduce using rule 130 (comp -> DIFFERENT push_poper .)


state 207

    (131) comp -> DOUBLEEQUAL push_poper .

    LPAREN          reduce using rule 131 (comp -> DOUBLEEQUAL push_poper .)
    PLUS            reduce using rule 131 (comp -> DOUBLEEQUAL push_poper .)
    MINUS           reduce using rule 131 (comp -> DOUBLEEQUAL push_poper .)
    ID              reduce using rule 131 (comp -> DOUBLEEQUAL push_poper .)
    CTE_I           reduce using rule 131 (comp -> DOUBLEEQUAL push_poper .)
    CTE_F           reduce using rule 131 (comp -> DOUBLEEQUAL push_poper .)
    CTE_STRING      reduce using rule 131 (comp -> DOUBLEEQUAL push_poper .)


state 208

    (128) comp -> LOWERTHAN push_poper .

    LPAREN          reduce using rule 128 (comp -> LOWERTHAN push_poper .)
    PLUS            reduce using rule 128 (comp -> LOWERTHAN push_poper .)
    MINUS           reduce using rule 128 (comp -> LOWERTHAN push_poper .)
    ID              reduce using rule 128 (comp -> LOWERTHAN push_poper .)
    CTE_I           reduce using rule 128 (comp -> LOWERTHAN push_poper .)
    CTE_F           reduce using rule 128 (comp -> LOWERTHAN push_poper .)
    CTE_STRING      reduce using rule 128 (comp -> LOWERTHAN push_poper .)


state 209

    (127) expresion -> exp comp exp . quad_comp
    (134) quad_comp -> .

    RPAREN          reduce using rule 134 (quad_comp -> .)
    COMA            reduce using rule 134 (quad_comp -> .)
    SEMICOLON       reduce using rule 134 (quad_comp -> .)
    RBRACE          reduce using rule 134 (quad_comp -> .)

    quad_comp                      shift and go to state 251

state 210

    (132) comp -> LOWEREQUAL push_poper .

    LPAREN          reduce using rule 132 (comp -> LOWEREQUAL push_poper .)
    PLUS            reduce using rule 132 (comp -> LOWEREQUAL push_poper .)
    MINUS           reduce using rule 132 (comp -> LOWEREQUAL push_poper .)
    ID              reduce using rule 132 (comp -> LOWEREQUAL push_poper .)
    CTE_I           reduce using rule 132 (comp -> LOWEREQUAL push_poper .)
    CTE_F           reduce using rule 132 (comp -> LOWEREQUAL push_poper .)
    CTE_STRING      reduce using rule 132 (comp -> LOWEREQUAL push_poper .)


state 211

    (129) comp -> MORETHAN push_poper .

    LPAREN          reduce using rule 129 (comp -> MORETHAN push_poper .)
    PLUS            reduce using rule 129 (comp -> MORETHAN push_poper .)
    MINUS           reduce using rule 129 (comp -> MORETHAN push_poper .)
    ID              reduce using rule 129 (comp -> MORETHAN push_poper .)
    CTE_I           reduce using rule 129 (comp -> MORETHAN push_poper .)
    CTE_F           reduce using rule 129 (comp -> MORETHAN push_poper .)
    CTE_STRING      reduce using rule 129 (comp -> MORETHAN push_poper .)


state 212

    (21) varAux1 -> tipo varAux2 SEMICOLON varAux1 .

    BREAK           reduce using rule 21 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    ID              reduce using rule 21 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    IF              reduce using rule 21 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    PRINT           reduce using rule 21 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    WHILE           reduce using rule 21 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    FROM            reduce using rule 21 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    INPUT           reduce using rule 21 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)


state 213

    (24) varAux2 -> ID LCORCH CTE_I . RCORCH push_arreglo
    (25) varAux2 -> ID LCORCH CTE_I . RCORCH push_arreglo COMA varAux2
    (26) varAux2 -> ID LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH push_matriz
    (27) varAux2 -> ID LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    RCORCH          shift and go to state 252


state 214

    (23) varAux2 -> ID push_var COMA . varAux2
    (22) varAux2 -> . ID push_var
    (23) varAux2 -> . ID push_var COMA varAux2
    (24) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo
    (25) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (26) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (27) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    ID              shift and go to state 122

    varAux2                        shift and go to state 253

state 215

    (119) lectura -> INPUT push_poper LPAREN ID push_id . RPAREN quad_print SEMICOLON

    RPAREN          shift and go to state 254


state 216

    (111) comparacion -> ID push_id DOUBLEEQUAL push_poper expresion . SEMICOLON

    SEMICOLON       shift and go to state 255


state 217

    (82) inversa -> ID push_id INVERSA creaInversa SEMICOLON .

    BREAK           reduce using rule 82 (inversa -> ID push_id INVERSA creaInversa SEMICOLON .)
    ID              reduce using rule 82 (inversa -> ID push_id INVERSA creaInversa SEMICOLON .)
    IF              reduce using rule 82 (inversa -> ID push_id INVERSA creaInversa SEMICOLON .)
    PRINT           reduce using rule 82 (inversa -> ID push_id INVERSA creaInversa SEMICOLON .)
    WHILE           reduce using rule 82 (inversa -> ID push_id INVERSA creaInversa SEMICOLON .)
    FROM            reduce using rule 82 (inversa -> ID push_id INVERSA creaInversa SEMICOLON .)
    INPUT           reduce using rule 82 (inversa -> ID push_id INVERSA creaInversa SEMICOLON .)
    RBRACE          reduce using rule 82 (inversa -> ID push_id INVERSA creaInversa SEMICOLON .)
    RETURN          reduce using rule 82 (inversa -> ID push_id INVERSA creaInversa SEMICOLON .)


state 218

    (98) arreglo -> ID push_id LCORCH exp RCORCH . ver_dim1
    (99) matrix -> ID push_id LCORCH exp RCORCH . LCORCH exp RCORCH ver_dim2
    (109) ver_dim1 -> .

    LCORCH          shift and go to state 256
    EQUAL           reduce using rule 109 (ver_dim1 -> .)
    TIMES           reduce using rule 109 (ver_dim1 -> .)
    DIVIDE          reduce using rule 109 (ver_dim1 -> .)
    PLUS            reduce using rule 109 (ver_dim1 -> .)
    MINUS           reduce using rule 109 (ver_dim1 -> .)
    LOWERTHAN       reduce using rule 109 (ver_dim1 -> .)
    MORETHAN        reduce using rule 109 (ver_dim1 -> .)
    DIFFERENT       reduce using rule 109 (ver_dim1 -> .)
    DOUBLEEQUAL     reduce using rule 109 (ver_dim1 -> .)
    LOWEREQUAL      reduce using rule 109 (ver_dim1 -> .)
    MOREEQUAL       reduce using rule 109 (ver_dim1 -> .)
    RPAREN          reduce using rule 109 (ver_dim1 -> .)
    SEMICOLON       reduce using rule 109 (ver_dim1 -> .)
    COMA            reduce using rule 109 (ver_dim1 -> .)
    RCORCH          reduce using rule 109 (ver_dim1 -> .)
    RBRACE          reduce using rule 109 (ver_dim1 -> .)

    ver_dim1                       shift and go to state 257

state 219

    (86) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (106) determinante -> ID . push_id DETERMINANT
    (153) var_cte -> ID . push_id
    (98) arreglo -> ID . push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> ID . push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2
    (88) actualizaFuncion -> .
    (150) push_id -> .

    LPAREN          reduce using rule 88 (actualizaFuncion -> .)
    DETERMINANT     reduce using rule 150 (push_id -> .)
    LCORCH          reduce using rule 150 (push_id -> .)
    TIMES           reduce using rule 150 (push_id -> .)
    DIVIDE          reduce using rule 150 (push_id -> .)
    PLUS            reduce using rule 150 (push_id -> .)
    MINUS           reduce using rule 150 (push_id -> .)
    LOWERTHAN       reduce using rule 150 (push_id -> .)
    MORETHAN        reduce using rule 150 (push_id -> .)
    DIFFERENT       reduce using rule 150 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 150 (push_id -> .)
    LOWEREQUAL      reduce using rule 150 (push_id -> .)
    MOREEQUAL       reduce using rule 150 (push_id -> .)
    SEMICOLON       reduce using rule 150 (push_id -> .)

    actualizaFuncion               shift and go to state 87
    push_id                        shift and go to state 258

state 220

    (101) asignacion -> ID push_id EQUAL push_poper expresion . create_asign SEMICOLON
    (110) create_asign -> .

    SEMICOLON       reduce using rule 110 (create_asign -> .)

    create_asign                   shift and go to state 259

state 221

    (104) asignacion -> ID push_id EQUAL push_poper llamadaAFuncion . create_asign SEMICOLON
    (110) create_asign -> .

    SEMICOLON       reduce using rule 110 (create_asign -> .)

    create_asign                   shift and go to state 260

state 222

    (105) asignacion -> ID push_id EQUAL push_poper determinante . SEMICOLON

    SEMICOLON       shift and go to state 261


state 223

    (81) transpuesta -> ID push_id TRANSPUESTA creaTrans SEMICOLON .

    BREAK           reduce using rule 81 (transpuesta -> ID push_id TRANSPUESTA creaTrans SEMICOLON .)
    ID              reduce using rule 81 (transpuesta -> ID push_id TRANSPUESTA creaTrans SEMICOLON .)
    IF              reduce using rule 81 (transpuesta -> ID push_id TRANSPUESTA creaTrans SEMICOLON .)
    PRINT           reduce using rule 81 (transpuesta -> ID push_id TRANSPUESTA creaTrans SEMICOLON .)
    WHILE           reduce using rule 81 (transpuesta -> ID push_id TRANSPUESTA creaTrans SEMICOLON .)
    FROM            reduce using rule 81 (transpuesta -> ID push_id TRANSPUESTA creaTrans SEMICOLON .)
    INPUT           reduce using rule 81 (transpuesta -> ID push_id TRANSPUESTA creaTrans SEMICOLON .)
    RETURN          reduce using rule 81 (transpuesta -> ID push_id TRANSPUESTA creaTrans SEMICOLON .)
    RBRACE          reduce using rule 81 (transpuesta -> ID push_id TRANSPUESTA creaTrans SEMICOLON .)


state 224

    (86) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion . gosub RPAREN expresion
    (87) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion . gosub RPAREN
    (89) gosub -> .

    RPAREN          reduce using rule 89 (gosub -> .)

    gosub                          shift and go to state 262

state 225

    (95) paramFuncion -> empty .

    RPAREN          reduce using rule 95 (paramFuncion -> empty .)


state 226

    (91) paramFuncion -> ID . push_id2 paramFuncionAux
    (92) paramFuncion -> ID . push_id2 paramFuncionAux COMA paramFuncion
    (153) var_cte -> ID . push_id
    (98) arreglo -> ID . push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> ID . push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2
    (97) push_id2 -> .
    (150) push_id -> .

  ! reduce/reduce conflict for COMA resolved using rule 97 (push_id2 -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 97 (push_id2 -> .)
    COMA            reduce using rule 97 (push_id2 -> .)
    RPAREN          reduce using rule 97 (push_id2 -> .)
    LCORCH          reduce using rule 150 (push_id -> .)
    TIMES           reduce using rule 150 (push_id -> .)
    DIVIDE          reduce using rule 150 (push_id -> .)
    PLUS            reduce using rule 150 (push_id -> .)
    MINUS           reduce using rule 150 (push_id -> .)

  ! COMA            [ reduce using rule 150 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 150 (push_id -> .) ]

    push_id2                       shift and go to state 263
    push_id                        shift and go to state 158

state 227

    (93) paramFuncion -> exp . paramFuncionAux
    (94) paramFuncion -> exp . paramFuncionAux COMA paramFuncion
    (96) paramFuncionAux -> .

    COMA            reduce using rule 96 (paramFuncionAux -> .)
    RPAREN          reduce using rule 96 (paramFuncionAux -> .)

    paramFuncionAux                shift and go to state 264

state 228

    (69) loopFromDo -> FROM LPAREN ID EQUAL expresion . RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    RPAREN          shift and go to state 265


state 229

    (65) while -> WHILE while1 LPAREN expresion RPAREN . while2 LBRACE bloqueAux RBRACE while3
    (67) while2 -> .

    LBRACE          reduce using rule 67 (while2 -> .)

    while2                         shift and go to state 266

state 230

    (13) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH .
    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH . COMA varAuxGlobal2

    SEMICOLON       reduce using rule 13 (varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH .)
    COMA            shift and go to state 267


state 231

    (52) functionReturn -> RETURN exp creaCuadReturn SEMICOLON .

    RBRACE          reduce using rule 52 (functionReturn -> RETURN exp creaCuadReturn SEMICOLON .)


state 232

    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE . endProc
    (43) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE . endProc function
    (55) endProc -> .

    FUNCTION        reduce using rule 55 (endProc -> .)
    MAIN            reduce using rule 55 (endProc -> .)

    endProc                        shift and go to state 268

state 233

    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc function .

    MAIN            reduce using rule 42 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc function .)


state 234

    (44) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc .
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc . function
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc
    (47) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function
    (51) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function

    MAIN            reduce using rule 44 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 269

state 235

    (49) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn . RBRACE endProc
    (51) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn . RBRACE endProc function

    RBRACE          shift and go to state 270


state 236

    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc .
    (50) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc . function
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc
    (47) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function
    (51) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function

    MAIN            reduce using rule 46 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 271

state 237

    (47) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE . endProc
    (48) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE . endProc function
    (55) endProc -> .

    FUNCTION        reduce using rule 55 (endProc -> .)
    MAIN            reduce using rule 55 (endProc -> .)

    endProc                        shift and go to state 272

state 238

    (102) asignacion -> arreglo EQUAL push_poper exp create_asign SEMICOLON .

    BREAK           reduce using rule 102 (asignacion -> arreglo EQUAL push_poper exp create_asign SEMICOLON .)
    ID              reduce using rule 102 (asignacion -> arreglo EQUAL push_poper exp create_asign SEMICOLON .)
    IF              reduce using rule 102 (asignacion -> arreglo EQUAL push_poper exp create_asign SEMICOLON .)
    PRINT           reduce using rule 102 (asignacion -> arreglo EQUAL push_poper exp create_asign SEMICOLON .)
    WHILE           reduce using rule 102 (asignacion -> arreglo EQUAL push_poper exp create_asign SEMICOLON .)
    FROM            reduce using rule 102 (asignacion -> arreglo EQUAL push_poper exp create_asign SEMICOLON .)
    INPUT           reduce using rule 102 (asignacion -> arreglo EQUAL push_poper exp create_asign SEMICOLON .)
    RBRACE          reduce using rule 102 (asignacion -> arreglo EQUAL push_poper exp create_asign SEMICOLON .)
    RETURN          reduce using rule 102 (asignacion -> arreglo EQUAL push_poper exp create_asign SEMICOLON .)


state 239

    (124) escrituraAux -> CTE_STRING push_cte COMA . escrituraAux
    (121) escrituraAux -> . expresion
    (122) escrituraAux -> . CTE_STRING push_cte
    (123) escrituraAux -> . expresion COMA escrituraAux
    (124) escrituraAux -> . CTE_STRING push_cte COMA escrituraAux
    (125) escrituraAux -> . llamadaAFuncion
    (126) expresion -> . exp
    (127) expresion -> . exp comp exp quad_comp
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    CTE_STRING      shift and go to state 144
    ID              shift and go to state 146
    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113

    var_cte                        shift and go to state 106
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    expresion                      shift and go to state 145
    escrituraAux                   shift and go to state 273
    llamadaAFuncion                shift and go to state 241
    exp                            shift and go to state 119
    factorAux                      shift and go to state 120

state 240

    (123) escrituraAux -> expresion COMA escrituraAux .

    RPAREN          reduce using rule 123 (escrituraAux -> expresion COMA escrituraAux .)


state 241

    (125) escrituraAux -> llamadaAFuncion .

    RPAREN          reduce using rule 125 (escrituraAux -> llamadaAFuncion .)


state 242

    (117) escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print . SEMICOLON

    SEMICOLON       shift and go to state 274


state 243

    (118) escritura -> PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print . SEMICOLON

    SEMICOLON       shift and go to state 275


state 244

    (103) asignacion -> matrix EQUAL push_poper exp create_asign SEMICOLON .

    BREAK           reduce using rule 103 (asignacion -> matrix EQUAL push_poper exp create_asign SEMICOLON .)
    ID              reduce using rule 103 (asignacion -> matrix EQUAL push_poper exp create_asign SEMICOLON .)
    IF              reduce using rule 103 (asignacion -> matrix EQUAL push_poper exp create_asign SEMICOLON .)
    PRINT           reduce using rule 103 (asignacion -> matrix EQUAL push_poper exp create_asign SEMICOLON .)
    WHILE           reduce using rule 103 (asignacion -> matrix EQUAL push_poper exp create_asign SEMICOLON .)
    FROM            reduce using rule 103 (asignacion -> matrix EQUAL push_poper exp create_asign SEMICOLON .)
    INPUT           reduce using rule 103 (asignacion -> matrix EQUAL push_poper exp create_asign SEMICOLON .)
    RBRACE          reduce using rule 103 (asignacion -> matrix EQUAL push_poper exp create_asign SEMICOLON .)
    RETURN          reduce using rule 103 (asignacion -> matrix EQUAL push_poper exp create_asign SEMICOLON .)


state 245

    (137) exp1 -> PLUS push_poper . exp
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    exp                            shift and go to state 276
    factor                         shift and go to state 112
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106

state 246

    (138) exp1 -> MINUS push_poper . exp
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    exp                            shift and go to state 277
    factor                         shift and go to state 112
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106

state 247

    (144) termino1 -> DIVIDE push_poper . termino
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    arreglo                        shift and go to state 107
    termino                        shift and go to state 278
    factor                         shift and go to state 112
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106

state 248

    (143) termino1 -> TIMES push_poper . termino
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    arreglo                        shift and go to state 107
    termino                        shift and go to state 279
    factor                         shift and go to state 112
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106

state 249

    (38) bloque -> LBRACE . RBRACE
    (39) bloque -> LBRACE . bloqueAux RBRACE
    (63) bloqueAux -> . estatuto
    (64) bloqueAux -> . estatuto bloqueAux
    (70) estatuto -> . asignacion
    (71) estatuto -> . condicion
    (72) estatuto -> . escritura
    (73) estatuto -> . while
    (74) estatuto -> . loopFromDo
    (75) estatuto -> . comparacion
    (76) estatuto -> . llamadaAFuncion SEMICOLON
    (77) estatuto -> . lectura
    (78) estatuto -> . BREAK generaCuadbreak SEMICOLON
    (79) estatuto -> . transpuesta
    (80) estatuto -> . inversa
    (101) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (102) asignacion -> . arreglo EQUAL push_poper exp create_asign SEMICOLON
    (103) asignacion -> . matrix EQUAL push_poper exp create_asign SEMICOLON
    (104) asignacion -> . ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> . ID push_id EQUAL push_poper determinante SEMICOLON
    (112) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (113) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (117) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (118) escritura -> . PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON
    (65) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (69) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (111) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (119) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) transpuesta -> . ID push_id TRANSPUESTA creaTrans SEMICOLON
    (82) inversa -> . ID push_id INVERSA creaInversa SEMICOLON
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    RBRACE          shift and go to state 280
    BREAK           shift and go to state 65
    ID              shift and go to state 75
    IF              shift and go to state 51
    PRINT           shift and go to state 48
    WHILE           shift and go to state 63
    FROM            shift and go to state 60
    INPUT           shift and go to state 56

    arreglo                        shift and go to state 47
    matrix                         shift and go to state 49
    estatuto                       shift and go to state 50
    while                          shift and go to state 66
    condicion                      shift and go to state 54
    lectura                        shift and go to state 52
    transpuesta                    shift and go to state 53
    loopFromDo                     shift and go to state 58
    llamadaAFuncion                shift and go to state 76
    asignacion                     shift and go to state 61
    inversa                        shift and go to state 62
    bloqueAux                      shift and go to state 281
    comparacion                    shift and go to state 67
    escritura                      shift and go to state 68

state 250

    (112) condicion -> IF LPAREN expresion RPAREN cond bloque . condFinal
    (113) condicion -> IF LPAREN expresion RPAREN cond bloque . ELSE condElse bloque condFinal
    (116) condFinal -> .

    ELSE            shift and go to state 283
    BREAK           reduce using rule 116 (condFinal -> .)
    ID              reduce using rule 116 (condFinal -> .)
    IF              reduce using rule 116 (condFinal -> .)
    PRINT           reduce using rule 116 (condFinal -> .)
    WHILE           reduce using rule 116 (condFinal -> .)
    FROM            reduce using rule 116 (condFinal -> .)
    INPUT           reduce using rule 116 (condFinal -> .)
    RBRACE          reduce using rule 116 (condFinal -> .)
    RETURN          reduce using rule 116 (condFinal -> .)

    condFinal                      shift and go to state 282

state 251

    (127) expresion -> exp comp exp quad_comp .

    RPAREN          reduce using rule 127 (expresion -> exp comp exp quad_comp .)
    SEMICOLON       reduce using rule 127 (expresion -> exp comp exp quad_comp .)
    RBRACE          reduce using rule 127 (expresion -> exp comp exp quad_comp .)
    COMA            reduce using rule 127 (expresion -> exp comp exp quad_comp .)


state 252

    (24) varAux2 -> ID LCORCH CTE_I RCORCH . push_arreglo
    (25) varAux2 -> ID LCORCH CTE_I RCORCH . push_arreglo COMA varAux2
    (26) varAux2 -> ID LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH push_matriz
    (27) varAux2 -> ID LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH push_matriz COMA varAux2
    (29) push_arreglo -> .

    LCORCH          shift and go to state 284
    COMA            reduce using rule 29 (push_arreglo -> .)
    SEMICOLON       reduce using rule 29 (push_arreglo -> .)

    push_arreglo                   shift and go to state 285

state 253

    (23) varAux2 -> ID push_var COMA varAux2 .

    SEMICOLON       reduce using rule 23 (varAux2 -> ID push_var COMA varAux2 .)


state 254

    (119) lectura -> INPUT push_poper LPAREN ID push_id RPAREN . quad_print SEMICOLON
    (120) quad_print -> .

    SEMICOLON       reduce using rule 120 (quad_print -> .)

    quad_print                     shift and go to state 286

state 255

    (111) comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .

    BREAK           reduce using rule 111 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    ID              reduce using rule 111 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    IF              reduce using rule 111 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    PRINT           reduce using rule 111 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    WHILE           reduce using rule 111 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    FROM            reduce using rule 111 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    INPUT           reduce using rule 111 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    RETURN          reduce using rule 111 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    RBRACE          reduce using rule 111 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)


state 256

    (99) matrix -> ID push_id LCORCH exp RCORCH LCORCH . exp RCORCH ver_dim2
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    exp                            shift and go to state 287
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106

state 257

    (98) arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .

    TIMES           reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    DIVIDE          reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    PLUS            reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    MINUS           reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    LOWERTHAN       reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    MORETHAN        reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    DIFFERENT       reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    DOUBLEEQUAL     reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    LOWEREQUAL      reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    MOREEQUAL       reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    SEMICOLON       reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    COMA            reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    RPAREN          reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    RCORCH          reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    RBRACE          reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)
    EQUAL           reduce using rule 98 (arreglo -> ID push_id LCORCH exp RCORCH ver_dim1 .)


state 258

    (106) determinante -> ID push_id . DETERMINANT
    (153) var_cte -> ID push_id .
    (98) arreglo -> ID push_id . LCORCH exp RCORCH ver_dim1
    (99) matrix -> ID push_id . LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    DETERMINANT     shift and go to state 288
    TIMES           reduce using rule 153 (var_cte -> ID push_id .)
    DIVIDE          reduce using rule 153 (var_cte -> ID push_id .)
    PLUS            reduce using rule 153 (var_cte -> ID push_id .)
    MINUS           reduce using rule 153 (var_cte -> ID push_id .)
    LOWERTHAN       reduce using rule 153 (var_cte -> ID push_id .)
    MORETHAN        reduce using rule 153 (var_cte -> ID push_id .)
    DIFFERENT       reduce using rule 153 (var_cte -> ID push_id .)
    DOUBLEEQUAL     reduce using rule 153 (var_cte -> ID push_id .)
    LOWEREQUAL      reduce using rule 153 (var_cte -> ID push_id .)
    MOREEQUAL       reduce using rule 153 (var_cte -> ID push_id .)
    SEMICOLON       reduce using rule 153 (var_cte -> ID push_id .)
    LCORCH          shift and go to state 126


state 259

    (101) asignacion -> ID push_id EQUAL push_poper expresion create_asign . SEMICOLON

    SEMICOLON       shift and go to state 289


state 260

    (104) asignacion -> ID push_id EQUAL push_poper llamadaAFuncion create_asign . SEMICOLON

    SEMICOLON       shift and go to state 290


state 261

    (105) asignacion -> ID push_id EQUAL push_poper determinante SEMICOLON .

    BREAK           reduce using rule 105 (asignacion -> ID push_id EQUAL push_poper determinante SEMICOLON .)
    ID              reduce using rule 105 (asignacion -> ID push_id EQUAL push_poper determinante SEMICOLON .)
    IF              reduce using rule 105 (asignacion -> ID push_id EQUAL push_poper determinante SEMICOLON .)
    PRINT           reduce using rule 105 (asignacion -> ID push_id EQUAL push_poper determinante SEMICOLON .)
    WHILE           reduce using rule 105 (asignacion -> ID push_id EQUAL push_poper determinante SEMICOLON .)
    FROM            reduce using rule 105 (asignacion -> ID push_id EQUAL push_poper determinante SEMICOLON .)
    INPUT           reduce using rule 105 (asignacion -> ID push_id EQUAL push_poper determinante SEMICOLON .)
    RBRACE          reduce using rule 105 (asignacion -> ID push_id EQUAL push_poper determinante SEMICOLON .)
    RETURN          reduce using rule 105 (asignacion -> ID push_id EQUAL push_poper determinante SEMICOLON .)


state 262

    (86) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub . RPAREN expresion
    (87) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub . RPAREN

    RPAREN          shift and go to state 291


state 263

    (91) paramFuncion -> ID push_id2 . paramFuncionAux
    (92) paramFuncion -> ID push_id2 . paramFuncionAux COMA paramFuncion
    (96) paramFuncionAux -> .

    COMA            reduce using rule 96 (paramFuncionAux -> .)
    RPAREN          reduce using rule 96 (paramFuncionAux -> .)

    paramFuncionAux                shift and go to state 292

state 264

    (93) paramFuncion -> exp paramFuncionAux .
    (94) paramFuncion -> exp paramFuncionAux . COMA paramFuncion

    RPAREN          reduce using rule 93 (paramFuncion -> exp paramFuncionAux .)
    COMA            shift and go to state 293


state 265

    (69) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN . TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    TO              shift and go to state 294


state 266

    (65) while -> WHILE while1 LPAREN expresion RPAREN while2 . LBRACE bloqueAux RBRACE while3

    LBRACE          shift and go to state 295


state 267

    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA . varAuxGlobal2
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2
    (11) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 296

state 268

    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc .
    (43) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc . function
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc
    (47) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function
    (51) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function

    MAIN            reduce using rule 41 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 297

state 269

    (45) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function .

    MAIN            reduce using rule 45 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function .)


state 270

    (49) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE . endProc
    (51) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE . endProc function
    (55) endProc -> .

    FUNCTION        reduce using rule 55 (endProc -> .)
    MAIN            reduce using rule 55 (endProc -> .)

    endProc                        shift and go to state 298

state 271

    (50) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function .

    MAIN            reduce using rule 50 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function .)


state 272

    (47) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc .
    (48) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc . function
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc
    (47) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function
    (51) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function

    MAIN            reduce using rule 47 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 299

state 273

    (124) escrituraAux -> CTE_STRING push_cte COMA escrituraAux .

    RPAREN          reduce using rule 124 (escrituraAux -> CTE_STRING push_cte COMA escrituraAux .)


state 274

    (117) escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .

    BREAK           reduce using rule 117 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    ID              reduce using rule 117 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    IF              reduce using rule 117 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    PRINT           reduce using rule 117 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    WHILE           reduce using rule 117 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    FROM            reduce using rule 117 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    INPUT           reduce using rule 117 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    RBRACE          reduce using rule 117 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    RETURN          reduce using rule 117 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)


state 275

    (118) escritura -> PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON .

    BREAK           reduce using rule 118 (escritura -> PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON .)
    ID              reduce using rule 118 (escritura -> PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON .)
    IF              reduce using rule 118 (escritura -> PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON .)
    PRINT           reduce using rule 118 (escritura -> PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON .)
    WHILE           reduce using rule 118 (escritura -> PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON .)
    FROM            reduce using rule 118 (escritura -> PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON .)
    INPUT           reduce using rule 118 (escritura -> PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON .)
    RBRACE          reduce using rule 118 (escritura -> PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON .)
    RETURN          reduce using rule 118 (escritura -> PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON .)


state 276

    (137) exp1 -> PLUS push_poper exp .

    LOWERTHAN       reduce using rule 137 (exp1 -> PLUS push_poper exp .)
    MORETHAN        reduce using rule 137 (exp1 -> PLUS push_poper exp .)
    DIFFERENT       reduce using rule 137 (exp1 -> PLUS push_poper exp .)
    DOUBLEEQUAL     reduce using rule 137 (exp1 -> PLUS push_poper exp .)
    LOWEREQUAL      reduce using rule 137 (exp1 -> PLUS push_poper exp .)
    MOREEQUAL       reduce using rule 137 (exp1 -> PLUS push_poper exp .)
    RPAREN          reduce using rule 137 (exp1 -> PLUS push_poper exp .)
    SEMICOLON       reduce using rule 137 (exp1 -> PLUS push_poper exp .)
    COMA            reduce using rule 137 (exp1 -> PLUS push_poper exp .)
    RCORCH          reduce using rule 137 (exp1 -> PLUS push_poper exp .)
    RBRACE          reduce using rule 137 (exp1 -> PLUS push_poper exp .)


state 277

    (138) exp1 -> MINUS push_poper exp .

    LOWERTHAN       reduce using rule 138 (exp1 -> MINUS push_poper exp .)
    MORETHAN        reduce using rule 138 (exp1 -> MINUS push_poper exp .)
    DIFFERENT       reduce using rule 138 (exp1 -> MINUS push_poper exp .)
    DOUBLEEQUAL     reduce using rule 138 (exp1 -> MINUS push_poper exp .)
    LOWEREQUAL      reduce using rule 138 (exp1 -> MINUS push_poper exp .)
    MOREEQUAL       reduce using rule 138 (exp1 -> MINUS push_poper exp .)
    RPAREN          reduce using rule 138 (exp1 -> MINUS push_poper exp .)
    SEMICOLON       reduce using rule 138 (exp1 -> MINUS push_poper exp .)
    COMA            reduce using rule 138 (exp1 -> MINUS push_poper exp .)
    RCORCH          reduce using rule 138 (exp1 -> MINUS push_poper exp .)
    RBRACE          reduce using rule 138 (exp1 -> MINUS push_poper exp .)


state 278

    (144) termino1 -> DIVIDE push_poper termino .

    PLUS            reduce using rule 144 (termino1 -> DIVIDE push_poper termino .)
    MINUS           reduce using rule 144 (termino1 -> DIVIDE push_poper termino .)
    LOWERTHAN       reduce using rule 144 (termino1 -> DIVIDE push_poper termino .)
    MORETHAN        reduce using rule 144 (termino1 -> DIVIDE push_poper termino .)
    DIFFERENT       reduce using rule 144 (termino1 -> DIVIDE push_poper termino .)
    DOUBLEEQUAL     reduce using rule 144 (termino1 -> DIVIDE push_poper termino .)
    LOWEREQUAL      reduce using rule 144 (termino1 -> DIVIDE push_poper termino .)
    MOREEQUAL       reduce using rule 144 (termino1 -> DIVIDE push_poper termino .)
    RPAREN          reduce using rule 144 (termino1 -> DIVIDE push_poper termino .)
    SEMICOLON       reduce using rule 144 (termino1 -> DIVIDE push_poper termino .)
    COMA            reduce using rule 144 (termino1 -> DIVIDE push_poper termino .)
    RCORCH          reduce using rule 144 (termino1 -> DIVIDE push_poper termino .)
    RBRACE          reduce using rule 144 (termino1 -> DIVIDE push_poper termino .)


state 279

    (143) termino1 -> TIMES push_poper termino .

    PLUS            reduce using rule 143 (termino1 -> TIMES push_poper termino .)
    MINUS           reduce using rule 143 (termino1 -> TIMES push_poper termino .)
    LOWERTHAN       reduce using rule 143 (termino1 -> TIMES push_poper termino .)
    MORETHAN        reduce using rule 143 (termino1 -> TIMES push_poper termino .)
    DIFFERENT       reduce using rule 143 (termino1 -> TIMES push_poper termino .)
    DOUBLEEQUAL     reduce using rule 143 (termino1 -> TIMES push_poper termino .)
    LOWEREQUAL      reduce using rule 143 (termino1 -> TIMES push_poper termino .)
    MOREEQUAL       reduce using rule 143 (termino1 -> TIMES push_poper termino .)
    RPAREN          reduce using rule 143 (termino1 -> TIMES push_poper termino .)
    SEMICOLON       reduce using rule 143 (termino1 -> TIMES push_poper termino .)
    COMA            reduce using rule 143 (termino1 -> TIMES push_poper termino .)
    RCORCH          reduce using rule 143 (termino1 -> TIMES push_poper termino .)
    RBRACE          reduce using rule 143 (termino1 -> TIMES push_poper termino .)


state 280

    (38) bloque -> LBRACE RBRACE .

    ELSE            reduce using rule 38 (bloque -> LBRACE RBRACE .)
    BREAK           reduce using rule 38 (bloque -> LBRACE RBRACE .)
    ID              reduce using rule 38 (bloque -> LBRACE RBRACE .)
    IF              reduce using rule 38 (bloque -> LBRACE RBRACE .)
    PRINT           reduce using rule 38 (bloque -> LBRACE RBRACE .)
    WHILE           reduce using rule 38 (bloque -> LBRACE RBRACE .)
    FROM            reduce using rule 38 (bloque -> LBRACE RBRACE .)
    INPUT           reduce using rule 38 (bloque -> LBRACE RBRACE .)
    RBRACE          reduce using rule 38 (bloque -> LBRACE RBRACE .)
    RETURN          reduce using rule 38 (bloque -> LBRACE RBRACE .)


state 281

    (39) bloque -> LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 300


state 282

    (112) condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .

    BREAK           reduce using rule 112 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    ID              reduce using rule 112 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    IF              reduce using rule 112 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    PRINT           reduce using rule 112 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    WHILE           reduce using rule 112 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    FROM            reduce using rule 112 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    INPUT           reduce using rule 112 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    RBRACE          reduce using rule 112 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    RETURN          reduce using rule 112 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)


state 283

    (113) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE . condElse bloque condFinal
    (115) condElse -> .

    LBRACE          reduce using rule 115 (condElse -> .)

    condElse                       shift and go to state 301

state 284

    (26) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH push_matriz
    (27) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH push_matriz COMA varAux2

    CTE_I           shift and go to state 302


state 285

    (24) varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo .
    (25) varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo . COMA varAux2

    SEMICOLON       reduce using rule 24 (varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo .)
    COMA            shift and go to state 303


state 286

    (119) lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print . SEMICOLON

    SEMICOLON       shift and go to state 304


state 287

    (99) matrix -> ID push_id LCORCH exp RCORCH LCORCH exp . RCORCH ver_dim2

    RCORCH          shift and go to state 305


state 288

    (106) determinante -> ID push_id DETERMINANT .

    SEMICOLON       reduce using rule 106 (determinante -> ID push_id DETERMINANT .)


state 289

    (101) asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .

    BREAK           reduce using rule 101 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    ID              reduce using rule 101 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    IF              reduce using rule 101 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    PRINT           reduce using rule 101 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    WHILE           reduce using rule 101 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    FROM            reduce using rule 101 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    INPUT           reduce using rule 101 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    RBRACE          reduce using rule 101 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    RETURN          reduce using rule 101 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)


state 290

    (104) asignacion -> ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON .

    BREAK           reduce using rule 104 (asignacion -> ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON .)
    ID              reduce using rule 104 (asignacion -> ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON .)
    IF              reduce using rule 104 (asignacion -> ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON .)
    PRINT           reduce using rule 104 (asignacion -> ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON .)
    WHILE           reduce using rule 104 (asignacion -> ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON .)
    FROM            reduce using rule 104 (asignacion -> ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON .)
    INPUT           reduce using rule 104 (asignacion -> ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON .)
    RBRACE          reduce using rule 104 (asignacion -> ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON .)
    RETURN          reduce using rule 104 (asignacion -> ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON .)


state 291

    (86) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN . expresion
    (87) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN .
    (126) expresion -> . exp
    (127) expresion -> . exp comp exp quad_comp
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    SEMICOLON       reduce using rule 87 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN .)
    RPAREN          reduce using rule 87 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN .)
    RBRACE          reduce using rule 87 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN .)
    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    expresion                      shift and go to state 306
    exp                            shift and go to state 119
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106

state 292

    (91) paramFuncion -> ID push_id2 paramFuncionAux .
    (92) paramFuncion -> ID push_id2 paramFuncionAux . COMA paramFuncion

    RPAREN          reduce using rule 91 (paramFuncion -> ID push_id2 paramFuncionAux .)
    COMA            shift and go to state 307


state 293

    (94) paramFuncion -> exp paramFuncionAux COMA . paramFuncion
    (91) paramFuncion -> . ID push_id2 paramFuncionAux
    (92) paramFuncion -> . ID push_id2 paramFuncionAux COMA paramFuncion
    (93) paramFuncion -> . exp paramFuncionAux
    (94) paramFuncion -> . exp paramFuncionAux COMA paramFuncion
    (95) paramFuncion -> . empty
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (60) empty -> .
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    ID              shift and go to state 226
    RPAREN          reduce using rule 60 (empty -> .)
    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    paramFuncion                   shift and go to state 308
    factor                         shift and go to state 112
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    exp                            shift and go to state 227
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106
    empty                          shift and go to state 225

state 294

    (69) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO . LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    LPAREN          shift and go to state 309


state 295

    (65) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE . bloqueAux RBRACE while3
    (63) bloqueAux -> . estatuto
    (64) bloqueAux -> . estatuto bloqueAux
    (70) estatuto -> . asignacion
    (71) estatuto -> . condicion
    (72) estatuto -> . escritura
    (73) estatuto -> . while
    (74) estatuto -> . loopFromDo
    (75) estatuto -> . comparacion
    (76) estatuto -> . llamadaAFuncion SEMICOLON
    (77) estatuto -> . lectura
    (78) estatuto -> . BREAK generaCuadbreak SEMICOLON
    (79) estatuto -> . transpuesta
    (80) estatuto -> . inversa
    (101) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (102) asignacion -> . arreglo EQUAL push_poper exp create_asign SEMICOLON
    (103) asignacion -> . matrix EQUAL push_poper exp create_asign SEMICOLON
    (104) asignacion -> . ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> . ID push_id EQUAL push_poper determinante SEMICOLON
    (112) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (113) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (117) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (118) escritura -> . PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON
    (65) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (69) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (111) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (119) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) transpuesta -> . ID push_id TRANSPUESTA creaTrans SEMICOLON
    (82) inversa -> . ID push_id INVERSA creaInversa SEMICOLON
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    BREAK           shift and go to state 65
    ID              shift and go to state 75
    IF              shift and go to state 51
    PRINT           shift and go to state 48
    WHILE           shift and go to state 63
    FROM            shift and go to state 60
    INPUT           shift and go to state 56

    matrix                         shift and go to state 49
    estatuto                       shift and go to state 50
    condicion                      shift and go to state 54
    lectura                        shift and go to state 52
    transpuesta                    shift and go to state 53
    loopFromDo                     shift and go to state 58
    llamadaAFuncion                shift and go to state 76
    asignacion                     shift and go to state 61
    arreglo                        shift and go to state 47
    inversa                        shift and go to state 62
    bloqueAux                      shift and go to state 310
    while                          shift and go to state 66
    comparacion                    shift and go to state 67
    escritura                      shift and go to state 68

state 296

    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2 .

    SEMICOLON       reduce using rule 14 (varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2 .)


state 297

    (43) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function .

    MAIN            reduce using rule 43 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function .)


state 298

    (49) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc .
    (51) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc . function
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc
    (47) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc
    (48) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function
    (49) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc
    (50) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc function
    (51) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function

    MAIN            reduce using rule 49 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 311

state 299

    (48) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function .

    MAIN            reduce using rule 48 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE bloqueAux functionReturn RBRACE endProc function .)


state 300

    (39) bloque -> LBRACE bloqueAux RBRACE .

    ELSE            reduce using rule 39 (bloque -> LBRACE bloqueAux RBRACE .)
    BREAK           reduce using rule 39 (bloque -> LBRACE bloqueAux RBRACE .)
    ID              reduce using rule 39 (bloque -> LBRACE bloqueAux RBRACE .)
    IF              reduce using rule 39 (bloque -> LBRACE bloqueAux RBRACE .)
    PRINT           reduce using rule 39 (bloque -> LBRACE bloqueAux RBRACE .)
    WHILE           reduce using rule 39 (bloque -> LBRACE bloqueAux RBRACE .)
    FROM            reduce using rule 39 (bloque -> LBRACE bloqueAux RBRACE .)
    INPUT           reduce using rule 39 (bloque -> LBRACE bloqueAux RBRACE .)
    RBRACE          reduce using rule 39 (bloque -> LBRACE bloqueAux RBRACE .)
    RETURN          reduce using rule 39 (bloque -> LBRACE bloqueAux RBRACE .)


state 301

    (113) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse . bloque condFinal
    (38) bloque -> . LBRACE RBRACE
    (39) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 249

    bloque                         shift and go to state 312

state 302

    (26) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH push_matriz
    (27) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH push_matriz COMA varAux2

    RCORCH          shift and go to state 313


state 303

    (25) varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo COMA . varAux2
    (22) varAux2 -> . ID push_var
    (23) varAux2 -> . ID push_var COMA varAux2
    (24) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo
    (25) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (26) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (27) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    ID              shift and go to state 122

    varAux2                        shift and go to state 314

state 304

    (119) lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .

    BREAK           reduce using rule 119 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    ID              reduce using rule 119 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    IF              reduce using rule 119 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    PRINT           reduce using rule 119 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    WHILE           reduce using rule 119 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    FROM            reduce using rule 119 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    INPUT           reduce using rule 119 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    RETURN          reduce using rule 119 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    RBRACE          reduce using rule 119 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)


state 305

    (99) matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH . ver_dim2
    (100) ver_dim2 -> .

    EQUAL           reduce using rule 100 (ver_dim2 -> .)
    TIMES           reduce using rule 100 (ver_dim2 -> .)
    DIVIDE          reduce using rule 100 (ver_dim2 -> .)
    PLUS            reduce using rule 100 (ver_dim2 -> .)
    MINUS           reduce using rule 100 (ver_dim2 -> .)
    LOWERTHAN       reduce using rule 100 (ver_dim2 -> .)
    MORETHAN        reduce using rule 100 (ver_dim2 -> .)
    DIFFERENT       reduce using rule 100 (ver_dim2 -> .)
    DOUBLEEQUAL     reduce using rule 100 (ver_dim2 -> .)
    LOWEREQUAL      reduce using rule 100 (ver_dim2 -> .)
    MOREEQUAL       reduce using rule 100 (ver_dim2 -> .)
    RPAREN          reduce using rule 100 (ver_dim2 -> .)
    SEMICOLON       reduce using rule 100 (ver_dim2 -> .)
    COMA            reduce using rule 100 (ver_dim2 -> .)
    RCORCH          reduce using rule 100 (ver_dim2 -> .)
    RBRACE          reduce using rule 100 (ver_dim2 -> .)

    ver_dim2                       shift and go to state 315

state 306

    (86) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .

    SEMICOLON       reduce using rule 86 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    RPAREN          reduce using rule 86 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    RBRACE          reduce using rule 86 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)


state 307

    (92) paramFuncion -> ID push_id2 paramFuncionAux COMA . paramFuncion
    (91) paramFuncion -> . ID push_id2 paramFuncionAux
    (92) paramFuncion -> . ID push_id2 paramFuncionAux COMA paramFuncion
    (93) paramFuncion -> . exp paramFuncionAux
    (94) paramFuncion -> . exp paramFuncionAux COMA paramFuncion
    (95) paramFuncion -> . empty
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (60) empty -> .
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    ID              shift and go to state 226
    RPAREN          reduce using rule 60 (empty -> .)
    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    matrix                         shift and go to state 110
    paramFuncion                   shift and go to state 316
    factor                         shift and go to state 112
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    exp                            shift and go to state 227
    factorAux                      shift and go to state 120
    var_cte                        shift and go to state 106
    empty                          shift and go to state 225

state 308

    (94) paramFuncion -> exp paramFuncionAux COMA paramFuncion .

    RPAREN          reduce using rule 94 (paramFuncion -> exp paramFuncionAux COMA paramFuncion .)


state 309

    (69) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN . expresion RPAREN DO LBRACE bloqueAux RBRACE
    (126) expresion -> . exp
    (127) expresion -> . exp comp exp quad_comp
    (135) exp -> . termino quad_term
    (136) exp -> . termino quad_term exp1
    (141) termino -> . factor quad_fact
    (142) termino -> . factor quad_fact termino1
    (145) factor -> . LPAREN expresion RPAREN
    (146) factor -> . factorAux
    (147) factorAux -> . PLUS push_poper var_cte
    (148) factorAux -> . MINUS push_poper var_cte
    (149) factorAux -> . var_cte
    (153) var_cte -> . ID push_id
    (154) var_cte -> . CTE_I push_cte
    (155) var_cte -> . CTE_F push_cte
    (156) var_cte -> . CTE_STRING push_cte
    (157) var_cte -> . arreglo
    (158) var_cte -> . matrix
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    LPAREN          shift and go to state 116
    PLUS            shift and go to state 111
    MINUS           shift and go to state 109
    ID              shift and go to state 117
    CTE_I           shift and go to state 115
    CTE_F           shift and go to state 113
    CTE_STRING      shift and go to state 114

    expresion                      shift and go to state 317
    matrix                         shift and go to state 110
    factor                         shift and go to state 112
    var_cte                        shift and go to state 106
    arreglo                        shift and go to state 107
    termino                        shift and go to state 108
    exp                            shift and go to state 119
    factorAux                      shift and go to state 120

state 310

    (65) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux . RBRACE while3

    RBRACE          shift and go to state 318


state 311

    (51) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function .

    MAIN            reduce using rule 51 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux functionReturn RBRACE endProc function .)


state 312

    (113) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque . condFinal
    (116) condFinal -> .

    BREAK           reduce using rule 116 (condFinal -> .)
    ID              reduce using rule 116 (condFinal -> .)
    IF              reduce using rule 116 (condFinal -> .)
    PRINT           reduce using rule 116 (condFinal -> .)
    WHILE           reduce using rule 116 (condFinal -> .)
    FROM            reduce using rule 116 (condFinal -> .)
    INPUT           reduce using rule 116 (condFinal -> .)
    RBRACE          reduce using rule 116 (condFinal -> .)
    RETURN          reduce using rule 116 (condFinal -> .)

    condFinal                      shift and go to state 319

state 313

    (26) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH . push_matriz
    (27) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH . push_matriz COMA varAux2
    (30) push_matriz -> .

    COMA            reduce using rule 30 (push_matriz -> .)
    SEMICOLON       reduce using rule 30 (push_matriz -> .)

    push_matriz                    shift and go to state 320

state 314

    (25) varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2 .

    SEMICOLON       reduce using rule 25 (varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2 .)


state 315

    (99) matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .

    TIMES           reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    DIVIDE          reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    PLUS            reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    MINUS           reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    COMA            reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    RPAREN          reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    LOWERTHAN       reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    MORETHAN        reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    DIFFERENT       reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    DOUBLEEQUAL     reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    LOWEREQUAL      reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    MOREEQUAL       reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    EQUAL           reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    SEMICOLON       reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    RCORCH          reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)
    RBRACE          reduce using rule 99 (matrix -> ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2 .)


state 316

    (92) paramFuncion -> ID push_id2 paramFuncionAux COMA paramFuncion .

    RPAREN          reduce using rule 92 (paramFuncion -> ID push_id2 paramFuncionAux COMA paramFuncion .)


state 317

    (69) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion . RPAREN DO LBRACE bloqueAux RBRACE

    RPAREN          shift and go to state 321


state 318

    (65) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE . while3
    (68) while3 -> .

    BREAK           reduce using rule 68 (while3 -> .)
    ID              reduce using rule 68 (while3 -> .)
    IF              reduce using rule 68 (while3 -> .)
    PRINT           reduce using rule 68 (while3 -> .)
    WHILE           reduce using rule 68 (while3 -> .)
    FROM            reduce using rule 68 (while3 -> .)
    INPUT           reduce using rule 68 (while3 -> .)
    RBRACE          reduce using rule 68 (while3 -> .)
    RETURN          reduce using rule 68 (while3 -> .)

    while3                         shift and go to state 322

state 319

    (113) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .

    BREAK           reduce using rule 113 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    ID              reduce using rule 113 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    IF              reduce using rule 113 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    PRINT           reduce using rule 113 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    WHILE           reduce using rule 113 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    FROM            reduce using rule 113 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    INPUT           reduce using rule 113 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    RBRACE          reduce using rule 113 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    RETURN          reduce using rule 113 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)


state 320

    (26) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz .
    (27) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz . COMA varAux2

    SEMICOLON       reduce using rule 26 (varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz .)
    COMA            shift and go to state 323


state 321

    (69) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN . DO LBRACE bloqueAux RBRACE

    DO              shift and go to state 324


state 322

    (65) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .

    BREAK           reduce using rule 65 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    ID              reduce using rule 65 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    IF              reduce using rule 65 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    PRINT           reduce using rule 65 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    WHILE           reduce using rule 65 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    FROM            reduce using rule 65 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    INPUT           reduce using rule 65 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    RETURN          reduce using rule 65 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    RBRACE          reduce using rule 65 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)


state 323

    (27) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA . varAux2
    (22) varAux2 -> . ID push_var
    (23) varAux2 -> . ID push_var COMA varAux2
    (24) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo
    (25) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (26) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (27) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    ID              shift and go to state 122

    varAux2                        shift and go to state 325

state 324

    (69) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 326


state 325

    (27) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2 .

    SEMICOLON       reduce using rule 27 (varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2 .)


state 326

    (69) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE . bloqueAux RBRACE
    (63) bloqueAux -> . estatuto
    (64) bloqueAux -> . estatuto bloqueAux
    (70) estatuto -> . asignacion
    (71) estatuto -> . condicion
    (72) estatuto -> . escritura
    (73) estatuto -> . while
    (74) estatuto -> . loopFromDo
    (75) estatuto -> . comparacion
    (76) estatuto -> . llamadaAFuncion SEMICOLON
    (77) estatuto -> . lectura
    (78) estatuto -> . BREAK generaCuadbreak SEMICOLON
    (79) estatuto -> . transpuesta
    (80) estatuto -> . inversa
    (101) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (102) asignacion -> . arreglo EQUAL push_poper exp create_asign SEMICOLON
    (103) asignacion -> . matrix EQUAL push_poper exp create_asign SEMICOLON
    (104) asignacion -> . ID push_id EQUAL push_poper llamadaAFuncion create_asign SEMICOLON
    (105) asignacion -> . ID push_id EQUAL push_poper determinante SEMICOLON
    (112) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (113) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (117) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (118) escritura -> . PRINT push_poper LPAREN llamadaAFuncion RPAREN quad_print SEMICOLON
    (65) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (69) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (111) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (86) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (87) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN
    (119) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (81) transpuesta -> . ID push_id TRANSPUESTA creaTrans SEMICOLON
    (82) inversa -> . ID push_id INVERSA creaInversa SEMICOLON
    (98) arreglo -> . ID push_id LCORCH exp RCORCH ver_dim1
    (99) matrix -> . ID push_id LCORCH exp RCORCH LCORCH exp RCORCH ver_dim2

    BREAK           shift and go to state 65
    ID              shift and go to state 75
    IF              shift and go to state 51
    PRINT           shift and go to state 48
    WHILE           shift and go to state 63
    FROM            shift and go to state 60
    INPUT           shift and go to state 56

    arreglo                        shift and go to state 47
    matrix                         shift and go to state 49
    estatuto                       shift and go to state 50
    while                          shift and go to state 66
    condicion                      shift and go to state 54
    lectura                        shift and go to state 52
    transpuesta                    shift and go to state 53
    loopFromDo                     shift and go to state 58
    llamadaAFuncion                shift and go to state 76
    asignacion                     shift and go to state 61
    inversa                        shift and go to state 62
    bloqueAux                      shift and go to state 327
    comparacion                    shift and go to state 67
    escritura                      shift and go to state 68

state 327

    (69) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 328


state 328

    (69) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .

    BREAK           reduce using rule 69 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    ID              reduce using rule 69 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    IF              reduce using rule 69 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    PRINT           reduce using rule 69 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    WHILE           reduce using rule 69 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    FROM            reduce using rule 69 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    INPUT           reduce using rule 69 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    RBRACE          reduce using rule 69 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    RETURN          reduce using rule 69 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 35 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 148 resolved as shift
WARNING: shift/reduce conflict for COMA in state 190 resolved as shift
WARNING: reduce/reduce conflict in state 190 resolved using rule (escrituraAux -> CTE_STRING push_cte)
WARNING: rejected rule (var_cte -> CTE_STRING push_cte) in state 190
WARNING: reduce/reduce conflict in state 226 resolved using rule (push_id2 -> <empty>)
WARNING: rejected rule (push_id -> <empty>) in state 226
