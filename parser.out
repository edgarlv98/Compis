Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FOR
    AND
    OR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID COLON vars main function
Rule 2     program -> PROGRAM ID COLON main function
Rule 3     program -> PROGRAM ID COLON vars main
Rule 4     program -> PROGRAM ID COLON main
Rule 5     main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
Rule 6     main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
Rule 7     nomMain -> MAIN
Rule 8     vars -> VAR varAux1
Rule 9     varAux1 -> tipo varAux2 SEMICOLON
Rule 10    varAux1 -> tipo varAux2 SEMICOLON varAux1
Rule 11    varAux2 -> ID
Rule 12    varAux2 -> ID COMA varAux2
Rule 13    tipo -> INT
Rule 14    tipo -> FLOAT
Rule 15    tipo -> CHAR
Rule 16    tipoFunc -> INT
Rule 17    tipoFunc -> FLOAT
Rule 18    tipoFunc -> CHAR
Rule 19    tipoFunc -> VOID
Rule 20    bloque -> LBRACE RBRACE
Rule 21    bloque -> LBRACE bloqueAux RBRACE
Rule 22    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE
Rule 23    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE
Rule 24    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE function
Rule 25    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE function
Rule 26    nomFunc -> ID
Rule 27    bloqueAux -> estatuto
Rule 28    bloqueAux -> estatuto bloqueAux
Rule 29    while -> WHILE LPAREN expresion RPAREN bloque
Rule 30    estatuto -> asignacion
Rule 31    estatuto -> condicion
Rule 32    estatuto -> escritura
Rule 33    estatuto -> while
Rule 34    estatuto -> comparacion
Rule 35    asignacion -> ID EQUAL expresion SEMICOLON
Rule 36    comparacion -> ID DOUBLEEQUAL expresion SEMICOLON
Rule 37    condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON
Rule 38    condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
Rule 39    escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON
Rule 40    escrituraAux -> expresion
Rule 41    escrituraAux -> CTE_STRING
Rule 42    escrituraAux -> expresion COMA escrituraAux
Rule 43    escrituraAux -> CTE_STRING COMA escrituraAux
Rule 44    expresion -> exp
Rule 45    expresion -> exp LOWERTHAN exp
Rule 46    expresion -> exp MORETHAN exp
Rule 47    expresion -> exp DIFFERENT exp
Rule 48    exp -> termino
Rule 49    exp -> termino PLUS exp
Rule 50    exp -> termino MINUS exp
Rule 51    termino -> factor
Rule 52    termino -> factor TIMES termino
Rule 53    termino -> factor DIVIDE termino
Rule 54    factor -> LPAREN expresion RPAREN
Rule 55    factor -> factorAux
Rule 56    factorAux -> PLUS var_cte
Rule 57    factorAux -> MINUS var_cte
Rule 58    factorAux -> var_cte
Rule 59    var_cte -> ID
Rule 60    var_cte -> CTE_I
Rule 61    var_cte -> CTE_F

Terminals, with rules where they appear

AND                  : 
CHAR                 : 15 18
COLON                : 1 2 3 4
COMA                 : 12 42 43
CTE_F                : 61
CTE_I                : 60
CTE_STRING           : 41 43
DIFFERENT            : 47
DIVIDE               : 53
DOUBLEEQUAL          : 36
ELSE                 : 38
EQUAL                : 35
FLOAT                : 14 17
FOR                  : 
FUNCTION             : 22 23 24 25
ID                   : 1 2 3 4 11 12 26 35 36 59
IF                   : 37 38
INT                  : 13 16
LBRACE               : 5 6 20 21 22 23 24 25
LOWERTHAN            : 45
LPAREN               : 5 6 22 23 24 25 29 37 38 39 54
MAIN                 : 7
MINUS                : 50 57
MORETHAN             : 46
OR                   : 
PLUS                 : 49 56
PRINT                : 39
PROGRAM              : 1 2 3 4
RBRACE               : 5 6 20 21 22 23 24 25
RPAREN               : 5 6 22 23 24 25 29 37 38 39 54
SEMICOLON            : 9 10 35 36 37 38 39
TIMES                : 52
VAR                  : 8
VOID                 : 19
WHILE                : 29
error                : 

Nonterminals, with rules where they appear

asignacion           : 30
bloque               : 29 37 38 38
bloqueAux            : 5 6 21 23 25 28
comparacion          : 34
condicion            : 31
escritura            : 32
escrituraAux         : 39 42 43
estatuto             : 27 28
exp                  : 44 45 45 46 46 47 47 49 50
expresion            : 29 35 36 37 38 40 42 54
factor               : 51 52 53
factorAux            : 55
function             : 1 2 24 25
main                 : 1 2 3 4
nomFunc              : 22 23 24 25
nomMain              : 5 6
program              : 0
termino              : 48 49 50 52 53
tipo                 : 9 10
tipoFunc             : 22 23 24 25
varAux1              : 8 10
varAux2              : 9 10 12
var_cte              : 56 57 58
vars                 : 1 3 6 23 25
while                : 33

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID COLON vars main function
    (2) program -> . PROGRAM ID COLON main function
    (3) program -> . PROGRAM ID COLON vars main
    (4) program -> . PROGRAM ID COLON main

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID COLON vars main function
    (2) program -> PROGRAM . ID COLON main function
    (3) program -> PROGRAM . ID COLON vars main
    (4) program -> PROGRAM . ID COLON main

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . COLON vars main function
    (2) program -> PROGRAM ID . COLON main function
    (3) program -> PROGRAM ID . COLON vars main
    (4) program -> PROGRAM ID . COLON main

    COLON           shift and go to state 4


state 4

    (1) program -> PROGRAM ID COLON . vars main function
    (2) program -> PROGRAM ID COLON . main function
    (3) program -> PROGRAM ID COLON . vars main
    (4) program -> PROGRAM ID COLON . main
    (8) vars -> . VAR varAux1
    (5) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (6) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (7) nomMain -> . MAIN

    VAR             shift and go to state 8
    MAIN            shift and go to state 6

    vars                           shift and go to state 5
    nomMain                        shift and go to state 7
    main                           shift and go to state 9

state 5

    (1) program -> PROGRAM ID COLON vars . main function
    (3) program -> PROGRAM ID COLON vars . main
    (5) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (6) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (7) nomMain -> . MAIN

    MAIN            shift and go to state 6

    nomMain                        shift and go to state 7
    main                           shift and go to state 10

state 6

    (7) nomMain -> MAIN .

    LPAREN          reduce using rule 7 (nomMain -> MAIN .)


state 7

    (5) main -> nomMain . LPAREN RPAREN LBRACE bloqueAux RBRACE
    (6) main -> nomMain . LPAREN RPAREN LBRACE vars bloqueAux RBRACE

    LPAREN          shift and go to state 11


state 8

    (8) vars -> VAR . varAux1
    (9) varAux1 -> . tipo varAux2 SEMICOLON
    (10) varAux1 -> . tipo varAux2 SEMICOLON varAux1
    (13) tipo -> . INT
    (14) tipo -> . FLOAT
    (15) tipo -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 12

    varAux1                        shift and go to state 16
    tipo                           shift and go to state 13

state 9

    (2) program -> PROGRAM ID COLON main . function
    (4) program -> PROGRAM ID COLON main .
    (22) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE
    (23) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (24) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE function
    (25) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE function

    $end            reduce using rule 4 (program -> PROGRAM ID COLON main .)
    FUNCTION        shift and go to state 18

    function                       shift and go to state 17

state 10

    (1) program -> PROGRAM ID COLON vars main . function
    (3) program -> PROGRAM ID COLON vars main .
    (22) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE
    (23) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (24) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE function
    (25) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE function

    $end            reduce using rule 3 (program -> PROGRAM ID COLON vars main .)
    FUNCTION        shift and go to state 18

    function                       shift and go to state 19

state 11

    (5) main -> nomMain LPAREN . RPAREN LBRACE bloqueAux RBRACE
    (6) main -> nomMain LPAREN . RPAREN LBRACE vars bloqueAux RBRACE

    RPAREN          shift and go to state 20


state 12

    (15) tipo -> CHAR .

    ID              reduce using rule 15 (tipo -> CHAR .)


state 13

    (9) varAux1 -> tipo . varAux2 SEMICOLON
    (10) varAux1 -> tipo . varAux2 SEMICOLON varAux1
    (11) varAux2 -> . ID
    (12) varAux2 -> . ID COMA varAux2

    ID              shift and go to state 22

    varAux2                        shift and go to state 21

state 14

    (13) tipo -> INT .

    ID              reduce using rule 13 (tipo -> INT .)


state 15

    (14) tipo -> FLOAT .

    ID              reduce using rule 14 (tipo -> FLOAT .)


state 16

    (8) vars -> VAR varAux1 .

    ID              reduce using rule 8 (vars -> VAR varAux1 .)
    IF              reduce using rule 8 (vars -> VAR varAux1 .)
    PRINT           reduce using rule 8 (vars -> VAR varAux1 .)
    WHILE           reduce using rule 8 (vars -> VAR varAux1 .)
    MAIN            reduce using rule 8 (vars -> VAR varAux1 .)


state 17

    (2) program -> PROGRAM ID COLON main function .

    $end            reduce using rule 2 (program -> PROGRAM ID COLON main function .)


state 18

    (22) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE
    (23) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (24) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE function
    (25) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE function
    (16) tipoFunc -> . INT
    (17) tipoFunc -> . FLOAT
    (18) tipoFunc -> . CHAR
    (19) tipoFunc -> . VOID

    INT             shift and go to state 23
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26
    VOID            shift and go to state 24

    tipoFunc                       shift and go to state 27

state 19

    (1) program -> PROGRAM ID COLON vars main function .

    $end            reduce using rule 1 (program -> PROGRAM ID COLON vars main function .)


state 20

    (5) main -> nomMain LPAREN RPAREN . LBRACE bloqueAux RBRACE
    (6) main -> nomMain LPAREN RPAREN . LBRACE vars bloqueAux RBRACE

    LBRACE          shift and go to state 28


state 21

    (9) varAux1 -> tipo varAux2 . SEMICOLON
    (10) varAux1 -> tipo varAux2 . SEMICOLON varAux1

    SEMICOLON       shift and go to state 29


state 22

    (11) varAux2 -> ID .
    (12) varAux2 -> ID . COMA varAux2

    SEMICOLON       reduce using rule 11 (varAux2 -> ID .)
    COMA            shift and go to state 30


state 23

    (16) tipoFunc -> INT .

    ID              reduce using rule 16 (tipoFunc -> INT .)


state 24

    (19) tipoFunc -> VOID .

    ID              reduce using rule 19 (tipoFunc -> VOID .)


state 25

    (17) tipoFunc -> FLOAT .

    ID              reduce using rule 17 (tipoFunc -> FLOAT .)


state 26

    (18) tipoFunc -> CHAR .

    ID              reduce using rule 18 (tipoFunc -> CHAR .)


state 27

    (22) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE RBRACE
    (23) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (24) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE RBRACE function
    (25) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE function
    (26) nomFunc -> . ID

    ID              shift and go to state 32

    nomFunc                        shift and go to state 31

state 28

    (5) main -> nomMain LPAREN RPAREN LBRACE . bloqueAux RBRACE
    (6) main -> nomMain LPAREN RPAREN LBRACE . vars bloqueAux RBRACE
    (27) bloqueAux -> . estatuto
    (28) bloqueAux -> . estatuto bloqueAux
    (8) vars -> . VAR varAux1
    (30) estatuto -> . asignacion
    (31) estatuto -> . condicion
    (32) estatuto -> . escritura
    (33) estatuto -> . while
    (34) estatuto -> . comparacion
    (35) asignacion -> . ID EQUAL expresion SEMICOLON
    (37) condicion -> . IF LPAREN expresion RPAREN bloque SEMICOLON
    (38) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
    (39) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (29) while -> . WHILE LPAREN expresion RPAREN bloque
    (36) comparacion -> . ID DOUBLEEQUAL expresion SEMICOLON

    VAR             shift and go to state 8
    ID              shift and go to state 37
    IF              shift and go to state 38
    PRINT           shift and go to state 34
    WHILE           shift and go to state 40

    vars                           shift and go to state 33
    asignacion                     shift and go to state 39
    estatuto                       shift and go to state 35
    while                          shift and go to state 42
    bloqueAux                      shift and go to state 41
    condicion                      shift and go to state 36
    comparacion                    shift and go to state 43
    escritura                      shift and go to state 44

state 29

    (9) varAux1 -> tipo varAux2 SEMICOLON .
    (10) varAux1 -> tipo varAux2 SEMICOLON . varAux1
    (9) varAux1 -> . tipo varAux2 SEMICOLON
    (10) varAux1 -> . tipo varAux2 SEMICOLON varAux1
    (13) tipo -> . INT
    (14) tipo -> . FLOAT
    (15) tipo -> . CHAR

    MAIN            reduce using rule 9 (varAux1 -> tipo varAux2 SEMICOLON .)
    ID              reduce using rule 9 (varAux1 -> tipo varAux2 SEMICOLON .)
    IF              reduce using rule 9 (varAux1 -> tipo varAux2 SEMICOLON .)
    PRINT           reduce using rule 9 (varAux1 -> tipo varAux2 SEMICOLON .)
    WHILE           reduce using rule 9 (varAux1 -> tipo varAux2 SEMICOLON .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 12

    varAux1                        shift and go to state 45
    tipo                           shift and go to state 13

state 30

    (12) varAux2 -> ID COMA . varAux2
    (11) varAux2 -> . ID
    (12) varAux2 -> . ID COMA varAux2

    ID              shift and go to state 22

    varAux2                        shift and go to state 46

state 31

    (22) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE RBRACE
    (23) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (24) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE RBRACE function
    (25) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE vars bloqueAux RBRACE function

    LPAREN          shift and go to state 47


state 32

    (26) nomFunc -> ID .

    LPAREN          reduce using rule 26 (nomFunc -> ID .)


state 33

    (6) main -> nomMain LPAREN RPAREN LBRACE vars . bloqueAux RBRACE
    (27) bloqueAux -> . estatuto
    (28) bloqueAux -> . estatuto bloqueAux
    (30) estatuto -> . asignacion
    (31) estatuto -> . condicion
    (32) estatuto -> . escritura
    (33) estatuto -> . while
    (34) estatuto -> . comparacion
    (35) asignacion -> . ID EQUAL expresion SEMICOLON
    (37) condicion -> . IF LPAREN expresion RPAREN bloque SEMICOLON
    (38) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
    (39) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (29) while -> . WHILE LPAREN expresion RPAREN bloque
    (36) comparacion -> . ID DOUBLEEQUAL expresion SEMICOLON

    ID              shift and go to state 37
    IF              shift and go to state 38
    PRINT           shift and go to state 34
    WHILE           shift and go to state 40

    asignacion                     shift and go to state 39
    estatuto                       shift and go to state 35
    while                          shift and go to state 42
    bloqueAux                      shift and go to state 48
    condicion                      shift and go to state 36
    comparacion                    shift and go to state 43
    escritura                      shift and go to state 44

state 34

    (39) escritura -> PRINT . LPAREN escrituraAux RPAREN SEMICOLON

    LPAREN          shift and go to state 49


state 35

    (27) bloqueAux -> estatuto .
    (28) bloqueAux -> estatuto . bloqueAux
    (27) bloqueAux -> . estatuto
    (28) bloqueAux -> . estatuto bloqueAux
    (30) estatuto -> . asignacion
    (31) estatuto -> . condicion
    (32) estatuto -> . escritura
    (33) estatuto -> . while
    (34) estatuto -> . comparacion
    (35) asignacion -> . ID EQUAL expresion SEMICOLON
    (37) condicion -> . IF LPAREN expresion RPAREN bloque SEMICOLON
    (38) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
    (39) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (29) while -> . WHILE LPAREN expresion RPAREN bloque
    (36) comparacion -> . ID DOUBLEEQUAL expresion SEMICOLON

    RBRACE          reduce using rule 27 (bloqueAux -> estatuto .)
    ID              shift and go to state 37
    IF              shift and go to state 38
    PRINT           shift and go to state 34
    WHILE           shift and go to state 40

    asignacion                     shift and go to state 39
    estatuto                       shift and go to state 35
    bloqueAux                      shift and go to state 50
    while                          shift and go to state 42
    condicion                      shift and go to state 36
    comparacion                    shift and go to state 43
    escritura                      shift and go to state 44

state 36

    (31) estatuto -> condicion .

    ID              reduce using rule 31 (estatuto -> condicion .)
    IF              reduce using rule 31 (estatuto -> condicion .)
    PRINT           reduce using rule 31 (estatuto -> condicion .)
    WHILE           reduce using rule 31 (estatuto -> condicion .)
    RBRACE          reduce using rule 31 (estatuto -> condicion .)


state 37

    (35) asignacion -> ID . EQUAL expresion SEMICOLON
    (36) comparacion -> ID . DOUBLEEQUAL expresion SEMICOLON

    EQUAL           shift and go to state 52
    DOUBLEEQUAL     shift and go to state 51


state 38

    (37) condicion -> IF . LPAREN expresion RPAREN bloque SEMICOLON
    (38) condicion -> IF . LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON

    LPAREN          shift and go to state 53


state 39

    (30) estatuto -> asignacion .

    ID              reduce using rule 30 (estatuto -> asignacion .)
    IF              reduce using rule 30 (estatuto -> asignacion .)
    PRINT           reduce using rule 30 (estatuto -> asignacion .)
    WHILE           reduce using rule 30 (estatuto -> asignacion .)
    RBRACE          reduce using rule 30 (estatuto -> asignacion .)


state 40

    (29) while -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 54


state 41

    (5) main -> nomMain LPAREN RPAREN LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 55


state 42

    (33) estatuto -> while .

    ID              reduce using rule 33 (estatuto -> while .)
    IF              reduce using rule 33 (estatuto -> while .)
    PRINT           reduce using rule 33 (estatuto -> while .)
    WHILE           reduce using rule 33 (estatuto -> while .)
    RBRACE          reduce using rule 33 (estatuto -> while .)


state 43

    (34) estatuto -> comparacion .

    ID              reduce using rule 34 (estatuto -> comparacion .)
    IF              reduce using rule 34 (estatuto -> comparacion .)
    PRINT           reduce using rule 34 (estatuto -> comparacion .)
    WHILE           reduce using rule 34 (estatuto -> comparacion .)
    RBRACE          reduce using rule 34 (estatuto -> comparacion .)


state 44

    (32) estatuto -> escritura .

    ID              reduce using rule 32 (estatuto -> escritura .)
    IF              reduce using rule 32 (estatuto -> escritura .)
    PRINT           reduce using rule 32 (estatuto -> escritura .)
    WHILE           reduce using rule 32 (estatuto -> escritura .)
    RBRACE          reduce using rule 32 (estatuto -> escritura .)


state 45

    (10) varAux1 -> tipo varAux2 SEMICOLON varAux1 .

    MAIN            reduce using rule 10 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    ID              reduce using rule 10 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    IF              reduce using rule 10 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    PRINT           reduce using rule 10 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    WHILE           reduce using rule 10 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)


state 46

    (12) varAux2 -> ID COMA varAux2 .

    SEMICOLON       reduce using rule 12 (varAux2 -> ID COMA varAux2 .)


state 47

    (22) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE RBRACE
    (23) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE vars bloqueAux RBRACE
    (24) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE RBRACE function
    (25) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE vars bloqueAux RBRACE function

    RPAREN          shift and go to state 56


state 48

    (6) main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux . RBRACE

    RBRACE          shift and go to state 57


state 49

    (39) escritura -> PRINT LPAREN . escrituraAux RPAREN SEMICOLON
    (40) escrituraAux -> . expresion
    (41) escrituraAux -> . CTE_STRING
    (42) escrituraAux -> . expresion COMA escrituraAux
    (43) escrituraAux -> . CTE_STRING COMA escrituraAux
    (44) expresion -> . exp
    (45) expresion -> . exp LOWERTHAN exp
    (46) expresion -> . exp MORETHAN exp
    (47) expresion -> . exp DIFFERENT exp
    (48) exp -> . termino
    (49) exp -> . termino PLUS exp
    (50) exp -> . termino MINUS exp
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    CTE_STRING      shift and go to state 64
    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    escrituraAux                   shift and go to state 69
    expresion                      shift and go to state 65
    var_cte                        shift and go to state 58
    termino                        shift and go to state 59
    exp                            shift and go to state 70
    factor                         shift and go to state 66
    factorAux                      shift and go to state 71

state 50

    (28) bloqueAux -> estatuto bloqueAux .

    RBRACE          reduce using rule 28 (bloqueAux -> estatuto bloqueAux .)


state 51

    (36) comparacion -> ID DOUBLEEQUAL . expresion SEMICOLON
    (44) expresion -> . exp
    (45) expresion -> . exp LOWERTHAN exp
    (46) expresion -> . exp MORETHAN exp
    (47) expresion -> . exp DIFFERENT exp
    (48) exp -> . termino
    (49) exp -> . termino PLUS exp
    (50) exp -> . termino MINUS exp
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    expresion                      shift and go to state 72
    var_cte                        shift and go to state 58
    termino                        shift and go to state 59
    exp                            shift and go to state 70
    factor                         shift and go to state 66
    factorAux                      shift and go to state 71

state 52

    (35) asignacion -> ID EQUAL . expresion SEMICOLON
    (44) expresion -> . exp
    (45) expresion -> . exp LOWERTHAN exp
    (46) expresion -> . exp MORETHAN exp
    (47) expresion -> . exp DIFFERENT exp
    (48) exp -> . termino
    (49) exp -> . termino PLUS exp
    (50) exp -> . termino MINUS exp
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    expresion                      shift and go to state 73
    var_cte                        shift and go to state 58
    termino                        shift and go to state 59
    exp                            shift and go to state 70
    factor                         shift and go to state 66
    factorAux                      shift and go to state 71

state 53

    (37) condicion -> IF LPAREN . expresion RPAREN bloque SEMICOLON
    (38) condicion -> IF LPAREN . expresion RPAREN bloque ELSE bloque SEMICOLON
    (44) expresion -> . exp
    (45) expresion -> . exp LOWERTHAN exp
    (46) expresion -> . exp MORETHAN exp
    (47) expresion -> . exp DIFFERENT exp
    (48) exp -> . termino
    (49) exp -> . termino PLUS exp
    (50) exp -> . termino MINUS exp
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    expresion                      shift and go to state 74
    var_cte                        shift and go to state 58
    termino                        shift and go to state 59
    exp                            shift and go to state 70
    factor                         shift and go to state 66
    factorAux                      shift and go to state 71

state 54

    (29) while -> WHILE LPAREN . expresion RPAREN bloque
    (44) expresion -> . exp
    (45) expresion -> . exp LOWERTHAN exp
    (46) expresion -> . exp MORETHAN exp
    (47) expresion -> . exp DIFFERENT exp
    (48) exp -> . termino
    (49) exp -> . termino PLUS exp
    (50) exp -> . termino MINUS exp
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    expresion                      shift and go to state 75
    var_cte                        shift and go to state 58
    termino                        shift and go to state 59
    exp                            shift and go to state 70
    factor                         shift and go to state 66
    factorAux                      shift and go to state 71

state 55

    (5) main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE .

    FUNCTION        reduce using rule 5 (main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE .)
    $end            reduce using rule 5 (main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE .)


state 56

    (22) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE RBRACE
    (23) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE vars bloqueAux RBRACE
    (24) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE RBRACE function
    (25) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE vars bloqueAux RBRACE function

    LBRACE          shift and go to state 76


state 57

    (6) main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE .

    FUNCTION        reduce using rule 6 (main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE .)
    $end            reduce using rule 6 (main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE .)


state 58

    (58) factorAux -> var_cte .

    TIMES           reduce using rule 58 (factorAux -> var_cte .)
    DIVIDE          reduce using rule 58 (factorAux -> var_cte .)
    PLUS            reduce using rule 58 (factorAux -> var_cte .)
    MINUS           reduce using rule 58 (factorAux -> var_cte .)
    COMA            reduce using rule 58 (factorAux -> var_cte .)
    RPAREN          reduce using rule 58 (factorAux -> var_cte .)
    SEMICOLON       reduce using rule 58 (factorAux -> var_cte .)
    LOWERTHAN       reduce using rule 58 (factorAux -> var_cte .)
    MORETHAN        reduce using rule 58 (factorAux -> var_cte .)
    DIFFERENT       reduce using rule 58 (factorAux -> var_cte .)


state 59

    (48) exp -> termino .
    (49) exp -> termino . PLUS exp
    (50) exp -> termino . MINUS exp

    LOWERTHAN       reduce using rule 48 (exp -> termino .)
    MORETHAN        reduce using rule 48 (exp -> termino .)
    DIFFERENT       reduce using rule 48 (exp -> termino .)
    SEMICOLON       reduce using rule 48 (exp -> termino .)
    COMA            reduce using rule 48 (exp -> termino .)
    RPAREN          reduce using rule 48 (exp -> termino .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78


state 60

    (57) factorAux -> MINUS . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    var_cte                        shift and go to state 79

state 61

    (56) factorAux -> PLUS . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    var_cte                        shift and go to state 80

state 62

    (60) var_cte -> CTE_I .

    TIMES           reduce using rule 60 (var_cte -> CTE_I .)
    DIVIDE          reduce using rule 60 (var_cte -> CTE_I .)
    PLUS            reduce using rule 60 (var_cte -> CTE_I .)
    MINUS           reduce using rule 60 (var_cte -> CTE_I .)
    LOWERTHAN       reduce using rule 60 (var_cte -> CTE_I .)
    MORETHAN        reduce using rule 60 (var_cte -> CTE_I .)
    DIFFERENT       reduce using rule 60 (var_cte -> CTE_I .)
    SEMICOLON       reduce using rule 60 (var_cte -> CTE_I .)
    COMA            reduce using rule 60 (var_cte -> CTE_I .)
    RPAREN          reduce using rule 60 (var_cte -> CTE_I .)


state 63

    (61) var_cte -> CTE_F .

    TIMES           reduce using rule 61 (var_cte -> CTE_F .)
    DIVIDE          reduce using rule 61 (var_cte -> CTE_F .)
    PLUS            reduce using rule 61 (var_cte -> CTE_F .)
    MINUS           reduce using rule 61 (var_cte -> CTE_F .)
    LOWERTHAN       reduce using rule 61 (var_cte -> CTE_F .)
    MORETHAN        reduce using rule 61 (var_cte -> CTE_F .)
    DIFFERENT       reduce using rule 61 (var_cte -> CTE_F .)
    SEMICOLON       reduce using rule 61 (var_cte -> CTE_F .)
    COMA            reduce using rule 61 (var_cte -> CTE_F .)
    RPAREN          reduce using rule 61 (var_cte -> CTE_F .)


state 64

    (41) escrituraAux -> CTE_STRING .
    (43) escrituraAux -> CTE_STRING . COMA escrituraAux

    RPAREN          reduce using rule 41 (escrituraAux -> CTE_STRING .)
    COMA            shift and go to state 81


state 65

    (40) escrituraAux -> expresion .
    (42) escrituraAux -> expresion . COMA escrituraAux

    RPAREN          reduce using rule 40 (escrituraAux -> expresion .)
    COMA            shift and go to state 82


state 66

    (51) termino -> factor .
    (52) termino -> factor . TIMES termino
    (53) termino -> factor . DIVIDE termino

    PLUS            reduce using rule 51 (termino -> factor .)
    MINUS           reduce using rule 51 (termino -> factor .)
    LOWERTHAN       reduce using rule 51 (termino -> factor .)
    MORETHAN        reduce using rule 51 (termino -> factor .)
    DIFFERENT       reduce using rule 51 (termino -> factor .)
    RPAREN          reduce using rule 51 (termino -> factor .)
    COMA            reduce using rule 51 (termino -> factor .)
    SEMICOLON       reduce using rule 51 (termino -> factor .)
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 83


state 67

    (54) factor -> LPAREN . expresion RPAREN
    (44) expresion -> . exp
    (45) expresion -> . exp LOWERTHAN exp
    (46) expresion -> . exp MORETHAN exp
    (47) expresion -> . exp DIFFERENT exp
    (48) exp -> . termino
    (49) exp -> . termino PLUS exp
    (50) exp -> . termino MINUS exp
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    expresion                      shift and go to state 85
    var_cte                        shift and go to state 58
    termino                        shift and go to state 59
    exp                            shift and go to state 70
    factor                         shift and go to state 66
    factorAux                      shift and go to state 71

state 68

    (59) var_cte -> ID .

    TIMES           reduce using rule 59 (var_cte -> ID .)
    DIVIDE          reduce using rule 59 (var_cte -> ID .)
    PLUS            reduce using rule 59 (var_cte -> ID .)
    MINUS           reduce using rule 59 (var_cte -> ID .)
    LOWERTHAN       reduce using rule 59 (var_cte -> ID .)
    MORETHAN        reduce using rule 59 (var_cte -> ID .)
    DIFFERENT       reduce using rule 59 (var_cte -> ID .)
    SEMICOLON       reduce using rule 59 (var_cte -> ID .)
    COMA            reduce using rule 59 (var_cte -> ID .)
    RPAREN          reduce using rule 59 (var_cte -> ID .)


state 69

    (39) escritura -> PRINT LPAREN escrituraAux . RPAREN SEMICOLON

    RPAREN          shift and go to state 86


state 70

    (44) expresion -> exp .
    (45) expresion -> exp . LOWERTHAN exp
    (46) expresion -> exp . MORETHAN exp
    (47) expresion -> exp . DIFFERENT exp

    SEMICOLON       reduce using rule 44 (expresion -> exp .)
    RPAREN          reduce using rule 44 (expresion -> exp .)
    COMA            reduce using rule 44 (expresion -> exp .)
    LOWERTHAN       shift and go to state 89
    MORETHAN        shift and go to state 87
    DIFFERENT       shift and go to state 88


state 71

    (55) factor -> factorAux .

    TIMES           reduce using rule 55 (factor -> factorAux .)
    DIVIDE          reduce using rule 55 (factor -> factorAux .)
    PLUS            reduce using rule 55 (factor -> factorAux .)
    MINUS           reduce using rule 55 (factor -> factorAux .)
    LOWERTHAN       reduce using rule 55 (factor -> factorAux .)
    MORETHAN        reduce using rule 55 (factor -> factorAux .)
    DIFFERENT       reduce using rule 55 (factor -> factorAux .)
    RPAREN          reduce using rule 55 (factor -> factorAux .)
    COMA            reduce using rule 55 (factor -> factorAux .)
    SEMICOLON       reduce using rule 55 (factor -> factorAux .)


state 72

    (36) comparacion -> ID DOUBLEEQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 90


state 73

    (35) asignacion -> ID EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 91


state 74

    (37) condicion -> IF LPAREN expresion . RPAREN bloque SEMICOLON
    (38) condicion -> IF LPAREN expresion . RPAREN bloque ELSE bloque SEMICOLON

    RPAREN          shift and go to state 92


state 75

    (29) while -> WHILE LPAREN expresion . RPAREN bloque

    RPAREN          shift and go to state 93


state 76

    (22) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . RBRACE
    (23) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . vars bloqueAux RBRACE
    (24) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . RBRACE function
    (25) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . vars bloqueAux RBRACE function
    (8) vars -> . VAR varAux1

    RBRACE          shift and go to state 94
    VAR             shift and go to state 8

    vars                           shift and go to state 95

state 77

    (49) exp -> termino PLUS . exp
    (48) exp -> . termino
    (49) exp -> . termino PLUS exp
    (50) exp -> . termino MINUS exp
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    var_cte                        shift and go to state 58
    termino                        shift and go to state 59
    exp                            shift and go to state 96
    factor                         shift and go to state 66
    factorAux                      shift and go to state 71

state 78

    (50) exp -> termino MINUS . exp
    (48) exp -> . termino
    (49) exp -> . termino PLUS exp
    (50) exp -> . termino MINUS exp
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    var_cte                        shift and go to state 58
    termino                        shift and go to state 59
    exp                            shift and go to state 97
    factor                         shift and go to state 66
    factorAux                      shift and go to state 71

state 79

    (57) factorAux -> MINUS var_cte .

    TIMES           reduce using rule 57 (factorAux -> MINUS var_cte .)
    DIVIDE          reduce using rule 57 (factorAux -> MINUS var_cte .)
    PLUS            reduce using rule 57 (factorAux -> MINUS var_cte .)
    MINUS           reduce using rule 57 (factorAux -> MINUS var_cte .)
    COMA            reduce using rule 57 (factorAux -> MINUS var_cte .)
    RPAREN          reduce using rule 57 (factorAux -> MINUS var_cte .)
    SEMICOLON       reduce using rule 57 (factorAux -> MINUS var_cte .)
    LOWERTHAN       reduce using rule 57 (factorAux -> MINUS var_cte .)
    MORETHAN        reduce using rule 57 (factorAux -> MINUS var_cte .)
    DIFFERENT       reduce using rule 57 (factorAux -> MINUS var_cte .)


state 80

    (56) factorAux -> PLUS var_cte .

    TIMES           reduce using rule 56 (factorAux -> PLUS var_cte .)
    DIVIDE          reduce using rule 56 (factorAux -> PLUS var_cte .)
    PLUS            reduce using rule 56 (factorAux -> PLUS var_cte .)
    MINUS           reduce using rule 56 (factorAux -> PLUS var_cte .)
    COMA            reduce using rule 56 (factorAux -> PLUS var_cte .)
    RPAREN          reduce using rule 56 (factorAux -> PLUS var_cte .)
    SEMICOLON       reduce using rule 56 (factorAux -> PLUS var_cte .)
    LOWERTHAN       reduce using rule 56 (factorAux -> PLUS var_cte .)
    MORETHAN        reduce using rule 56 (factorAux -> PLUS var_cte .)
    DIFFERENT       reduce using rule 56 (factorAux -> PLUS var_cte .)


state 81

    (43) escrituraAux -> CTE_STRING COMA . escrituraAux
    (40) escrituraAux -> . expresion
    (41) escrituraAux -> . CTE_STRING
    (42) escrituraAux -> . expresion COMA escrituraAux
    (43) escrituraAux -> . CTE_STRING COMA escrituraAux
    (44) expresion -> . exp
    (45) expresion -> . exp LOWERTHAN exp
    (46) expresion -> . exp MORETHAN exp
    (47) expresion -> . exp DIFFERENT exp
    (48) exp -> . termino
    (49) exp -> . termino PLUS exp
    (50) exp -> . termino MINUS exp
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    CTE_STRING      shift and go to state 64
    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    escrituraAux                   shift and go to state 98
    expresion                      shift and go to state 65
    var_cte                        shift and go to state 58
    termino                        shift and go to state 59
    exp                            shift and go to state 70
    factor                         shift and go to state 66
    factorAux                      shift and go to state 71

state 82

    (42) escrituraAux -> expresion COMA . escrituraAux
    (40) escrituraAux -> . expresion
    (41) escrituraAux -> . CTE_STRING
    (42) escrituraAux -> . expresion COMA escrituraAux
    (43) escrituraAux -> . CTE_STRING COMA escrituraAux
    (44) expresion -> . exp
    (45) expresion -> . exp LOWERTHAN exp
    (46) expresion -> . exp MORETHAN exp
    (47) expresion -> . exp DIFFERENT exp
    (48) exp -> . termino
    (49) exp -> . termino PLUS exp
    (50) exp -> . termino MINUS exp
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    CTE_STRING      shift and go to state 64
    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    expresion                      shift and go to state 65
    escrituraAux                   shift and go to state 99
    var_cte                        shift and go to state 58
    termino                        shift and go to state 59
    exp                            shift and go to state 70
    factor                         shift and go to state 66
    factorAux                      shift and go to state 71

state 83

    (53) termino -> factor DIVIDE . termino
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    factorAux                      shift and go to state 71
    var_cte                        shift and go to state 58
    termino                        shift and go to state 100
    factor                         shift and go to state 66

state 84

    (52) termino -> factor TIMES . termino
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    factorAux                      shift and go to state 71
    var_cte                        shift and go to state 58
    termino                        shift and go to state 101
    factor                         shift and go to state 66

state 85

    (54) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 102


state 86

    (39) escritura -> PRINT LPAREN escrituraAux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 103


state 87

    (46) expresion -> exp MORETHAN . exp
    (48) exp -> . termino
    (49) exp -> . termino PLUS exp
    (50) exp -> . termino MINUS exp
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    var_cte                        shift and go to state 58
    termino                        shift and go to state 59
    exp                            shift and go to state 104
    factor                         shift and go to state 66
    factorAux                      shift and go to state 71

state 88

    (47) expresion -> exp DIFFERENT . exp
    (48) exp -> . termino
    (49) exp -> . termino PLUS exp
    (50) exp -> . termino MINUS exp
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    var_cte                        shift and go to state 58
    termino                        shift and go to state 59
    exp                            shift and go to state 105
    factor                         shift and go to state 66
    factorAux                      shift and go to state 71

state 89

    (45) expresion -> exp LOWERTHAN . exp
    (48) exp -> . termino
    (49) exp -> . termino PLUS exp
    (50) exp -> . termino MINUS exp
    (51) termino -> . factor
    (52) termino -> . factor TIMES termino
    (53) termino -> . factor DIVIDE termino
    (54) factor -> . LPAREN expresion RPAREN
    (55) factor -> . factorAux
    (56) factorAux -> . PLUS var_cte
    (57) factorAux -> . MINUS var_cte
    (58) factorAux -> . var_cte
    (59) var_cte -> . ID
    (60) var_cte -> . CTE_I
    (61) var_cte -> . CTE_F

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 61
    MINUS           shift and go to state 60
    ID              shift and go to state 68
    CTE_I           shift and go to state 62
    CTE_F           shift and go to state 63

    var_cte                        shift and go to state 58
    termino                        shift and go to state 59
    exp                            shift and go to state 106
    factor                         shift and go to state 66
    factorAux                      shift and go to state 71

state 90

    (36) comparacion -> ID DOUBLEEQUAL expresion SEMICOLON .

    ID              reduce using rule 36 (comparacion -> ID DOUBLEEQUAL expresion SEMICOLON .)
    IF              reduce using rule 36 (comparacion -> ID DOUBLEEQUAL expresion SEMICOLON .)
    PRINT           reduce using rule 36 (comparacion -> ID DOUBLEEQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 36 (comparacion -> ID DOUBLEEQUAL expresion SEMICOLON .)
    RBRACE          reduce using rule 36 (comparacion -> ID DOUBLEEQUAL expresion SEMICOLON .)


state 91

    (35) asignacion -> ID EQUAL expresion SEMICOLON .

    ID              reduce using rule 35 (asignacion -> ID EQUAL expresion SEMICOLON .)
    IF              reduce using rule 35 (asignacion -> ID EQUAL expresion SEMICOLON .)
    PRINT           reduce using rule 35 (asignacion -> ID EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 35 (asignacion -> ID EQUAL expresion SEMICOLON .)
    RBRACE          reduce using rule 35 (asignacion -> ID EQUAL expresion SEMICOLON .)


state 92

    (37) condicion -> IF LPAREN expresion RPAREN . bloque SEMICOLON
    (38) condicion -> IF LPAREN expresion RPAREN . bloque ELSE bloque SEMICOLON
    (20) bloque -> . LBRACE RBRACE
    (21) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 107

    bloque                         shift and go to state 108

state 93

    (29) while -> WHILE LPAREN expresion RPAREN . bloque
    (20) bloque -> . LBRACE RBRACE
    (21) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 107

    bloque                         shift and go to state 109

state 94

    (22) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE .
    (24) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE . function
    (22) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE
    (23) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (24) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE function
    (25) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE function

    $end            reduce using rule 22 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE .)
    FUNCTION        shift and go to state 18

    function                       shift and go to state 110

state 95

    (23) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars . bloqueAux RBRACE
    (25) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars . bloqueAux RBRACE function
    (27) bloqueAux -> . estatuto
    (28) bloqueAux -> . estatuto bloqueAux
    (30) estatuto -> . asignacion
    (31) estatuto -> . condicion
    (32) estatuto -> . escritura
    (33) estatuto -> . while
    (34) estatuto -> . comparacion
    (35) asignacion -> . ID EQUAL expresion SEMICOLON
    (37) condicion -> . IF LPAREN expresion RPAREN bloque SEMICOLON
    (38) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
    (39) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (29) while -> . WHILE LPAREN expresion RPAREN bloque
    (36) comparacion -> . ID DOUBLEEQUAL expresion SEMICOLON

    ID              shift and go to state 37
    IF              shift and go to state 38
    PRINT           shift and go to state 34
    WHILE           shift and go to state 40

    asignacion                     shift and go to state 39
    estatuto                       shift and go to state 35
    bloqueAux                      shift and go to state 111
    while                          shift and go to state 42
    condicion                      shift and go to state 36
    comparacion                    shift and go to state 43
    escritura                      shift and go to state 44

state 96

    (49) exp -> termino PLUS exp .

    LOWERTHAN       reduce using rule 49 (exp -> termino PLUS exp .)
    MORETHAN        reduce using rule 49 (exp -> termino PLUS exp .)
    DIFFERENT       reduce using rule 49 (exp -> termino PLUS exp .)
    SEMICOLON       reduce using rule 49 (exp -> termino PLUS exp .)
    COMA            reduce using rule 49 (exp -> termino PLUS exp .)
    RPAREN          reduce using rule 49 (exp -> termino PLUS exp .)


state 97

    (50) exp -> termino MINUS exp .

    LOWERTHAN       reduce using rule 50 (exp -> termino MINUS exp .)
    MORETHAN        reduce using rule 50 (exp -> termino MINUS exp .)
    DIFFERENT       reduce using rule 50 (exp -> termino MINUS exp .)
    SEMICOLON       reduce using rule 50 (exp -> termino MINUS exp .)
    COMA            reduce using rule 50 (exp -> termino MINUS exp .)
    RPAREN          reduce using rule 50 (exp -> termino MINUS exp .)


state 98

    (43) escrituraAux -> CTE_STRING COMA escrituraAux .

    RPAREN          reduce using rule 43 (escrituraAux -> CTE_STRING COMA escrituraAux .)


state 99

    (42) escrituraAux -> expresion COMA escrituraAux .

    RPAREN          reduce using rule 42 (escrituraAux -> expresion COMA escrituraAux .)


state 100

    (53) termino -> factor DIVIDE termino .

    PLUS            reduce using rule 53 (termino -> factor DIVIDE termino .)
    MINUS           reduce using rule 53 (termino -> factor DIVIDE termino .)
    LOWERTHAN       reduce using rule 53 (termino -> factor DIVIDE termino .)
    MORETHAN        reduce using rule 53 (termino -> factor DIVIDE termino .)
    DIFFERENT       reduce using rule 53 (termino -> factor DIVIDE termino .)
    RPAREN          reduce using rule 53 (termino -> factor DIVIDE termino .)
    COMA            reduce using rule 53 (termino -> factor DIVIDE termino .)
    SEMICOLON       reduce using rule 53 (termino -> factor DIVIDE termino .)


state 101

    (52) termino -> factor TIMES termino .

    PLUS            reduce using rule 52 (termino -> factor TIMES termino .)
    MINUS           reduce using rule 52 (termino -> factor TIMES termino .)
    LOWERTHAN       reduce using rule 52 (termino -> factor TIMES termino .)
    MORETHAN        reduce using rule 52 (termino -> factor TIMES termino .)
    DIFFERENT       reduce using rule 52 (termino -> factor TIMES termino .)
    RPAREN          reduce using rule 52 (termino -> factor TIMES termino .)
    COMA            reduce using rule 52 (termino -> factor TIMES termino .)
    SEMICOLON       reduce using rule 52 (termino -> factor TIMES termino .)


state 102

    (54) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 54 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 54 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 54 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 54 (factor -> LPAREN expresion RPAREN .)
    LOWERTHAN       reduce using rule 54 (factor -> LPAREN expresion RPAREN .)
    MORETHAN        reduce using rule 54 (factor -> LPAREN expresion RPAREN .)
    DIFFERENT       reduce using rule 54 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 54 (factor -> LPAREN expresion RPAREN .)
    COMA            reduce using rule 54 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 54 (factor -> LPAREN expresion RPAREN .)


state 103

    (39) escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .

    ID              reduce using rule 39 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    IF              reduce using rule 39 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    PRINT           reduce using rule 39 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    WHILE           reduce using rule 39 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    RBRACE          reduce using rule 39 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)


state 104

    (46) expresion -> exp MORETHAN exp .

    SEMICOLON       reduce using rule 46 (expresion -> exp MORETHAN exp .)
    RPAREN          reduce using rule 46 (expresion -> exp MORETHAN exp .)
    COMA            reduce using rule 46 (expresion -> exp MORETHAN exp .)


state 105

    (47) expresion -> exp DIFFERENT exp .

    SEMICOLON       reduce using rule 47 (expresion -> exp DIFFERENT exp .)
    RPAREN          reduce using rule 47 (expresion -> exp DIFFERENT exp .)
    COMA            reduce using rule 47 (expresion -> exp DIFFERENT exp .)


state 106

    (45) expresion -> exp LOWERTHAN exp .

    SEMICOLON       reduce using rule 45 (expresion -> exp LOWERTHAN exp .)
    RPAREN          reduce using rule 45 (expresion -> exp LOWERTHAN exp .)
    COMA            reduce using rule 45 (expresion -> exp LOWERTHAN exp .)


state 107

    (20) bloque -> LBRACE . RBRACE
    (21) bloque -> LBRACE . bloqueAux RBRACE
    (27) bloqueAux -> . estatuto
    (28) bloqueAux -> . estatuto bloqueAux
    (30) estatuto -> . asignacion
    (31) estatuto -> . condicion
    (32) estatuto -> . escritura
    (33) estatuto -> . while
    (34) estatuto -> . comparacion
    (35) asignacion -> . ID EQUAL expresion SEMICOLON
    (37) condicion -> . IF LPAREN expresion RPAREN bloque SEMICOLON
    (38) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
    (39) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (29) while -> . WHILE LPAREN expresion RPAREN bloque
    (36) comparacion -> . ID DOUBLEEQUAL expresion SEMICOLON

    RBRACE          shift and go to state 112
    ID              shift and go to state 37
    IF              shift and go to state 38
    PRINT           shift and go to state 34
    WHILE           shift and go to state 40

    asignacion                     shift and go to state 39
    estatuto                       shift and go to state 35
    bloqueAux                      shift and go to state 113
    while                          shift and go to state 42
    condicion                      shift and go to state 36
    comparacion                    shift and go to state 43
    escritura                      shift and go to state 44

state 108

    (37) condicion -> IF LPAREN expresion RPAREN bloque . SEMICOLON
    (38) condicion -> IF LPAREN expresion RPAREN bloque . ELSE bloque SEMICOLON

    SEMICOLON       shift and go to state 114
    ELSE            shift and go to state 115


state 109

    (29) while -> WHILE LPAREN expresion RPAREN bloque .

    ID              reduce using rule 29 (while -> WHILE LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 29 (while -> WHILE LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 29 (while -> WHILE LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 29 (while -> WHILE LPAREN expresion RPAREN bloque .)
    RBRACE          reduce using rule 29 (while -> WHILE LPAREN expresion RPAREN bloque .)


state 110

    (24) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE function .

    $end            reduce using rule 24 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE function .)


state 111

    (23) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux . RBRACE
    (25) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux . RBRACE function

    RBRACE          shift and go to state 116


state 112

    (20) bloque -> LBRACE RBRACE .

    SEMICOLON       reduce using rule 20 (bloque -> LBRACE RBRACE .)
    ELSE            reduce using rule 20 (bloque -> LBRACE RBRACE .)
    ID              reduce using rule 20 (bloque -> LBRACE RBRACE .)
    IF              reduce using rule 20 (bloque -> LBRACE RBRACE .)
    PRINT           reduce using rule 20 (bloque -> LBRACE RBRACE .)
    WHILE           reduce using rule 20 (bloque -> LBRACE RBRACE .)
    RBRACE          reduce using rule 20 (bloque -> LBRACE RBRACE .)


state 113

    (21) bloque -> LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 117


state 114

    (37) condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON .

    ID              reduce using rule 37 (condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON .)
    IF              reduce using rule 37 (condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON .)
    PRINT           reduce using rule 37 (condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON .)
    WHILE           reduce using rule 37 (condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON .)
    RBRACE          reduce using rule 37 (condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON .)


state 115

    (38) condicion -> IF LPAREN expresion RPAREN bloque ELSE . bloque SEMICOLON
    (20) bloque -> . LBRACE RBRACE
    (21) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 107

    bloque                         shift and go to state 118

state 116

    (23) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE .
    (25) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE . function
    (22) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE
    (23) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (24) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE function
    (25) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE function

    $end            reduce using rule 23 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE .)
    FUNCTION        shift and go to state 18

    function                       shift and go to state 119

state 117

    (21) bloque -> LBRACE bloqueAux RBRACE .

    SEMICOLON       reduce using rule 21 (bloque -> LBRACE bloqueAux RBRACE .)
    ELSE            reduce using rule 21 (bloque -> LBRACE bloqueAux RBRACE .)
    ID              reduce using rule 21 (bloque -> LBRACE bloqueAux RBRACE .)
    IF              reduce using rule 21 (bloque -> LBRACE bloqueAux RBRACE .)
    PRINT           reduce using rule 21 (bloque -> LBRACE bloqueAux RBRACE .)
    WHILE           reduce using rule 21 (bloque -> LBRACE bloqueAux RBRACE .)
    RBRACE          reduce using rule 21 (bloque -> LBRACE bloqueAux RBRACE .)


state 118

    (38) condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque . SEMICOLON

    SEMICOLON       shift and go to state 120


state 119

    (25) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE function .

    $end            reduce using rule 25 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE function .)


state 120

    (38) condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON .

    ID              reduce using rule 38 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON .)
    IF              reduce using rule 38 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON .)
    PRINT           reduce using rule 38 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON .)
    WHILE           reduce using rule 38 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON .)
    RBRACE          reduce using rule 38 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON .)

