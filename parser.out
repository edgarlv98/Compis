Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    OR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID COLON varsGlobal function main endPrograma
Rule 2     program -> PROGRAM ID COLON function main endPrograma
Rule 3     program -> PROGRAM ID COLON varsGlobal main endPrograma
Rule 4     program -> PROGRAM ID COLON main endPrograma
Rule 5     endPrograma -> <empty>
Rule 6     varsGlobal -> VAR varAuxGlobal1
Rule 7     varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON
Rule 8     varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1
Rule 9     varAuxGlobal2 -> ID
Rule 10    varAuxGlobal2 -> ID COMA varAuxGlobal2
Rule 11    main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
Rule 12    main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
Rule 13    nomMain -> MAIN
Rule 14    vars -> VAR varAux1
Rule 15    varAux1 -> tipo varAux2 SEMICOLON
Rule 16    varAux1 -> tipo varAux2 SEMICOLON varAux1
Rule 17    varAux2 -> ID
Rule 18    varAux2 -> ID COMA varAux2
Rule 19    varAux2 -> ID LCORCH CTE_I RCORCH
Rule 20    varAux2 -> ID LCORCH CTE_I RCORCH COMA varAux2
Rule 21    varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
Rule 22    varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAux2
Rule 23    tipo -> INT
Rule 24    tipo -> FLOAT
Rule 25    tipo -> CHAR
Rule 26    tipoFunc -> INT
Rule 27    tipoFunc -> FLOAT
Rule 28    tipoFunc -> CHAR
Rule 29    tipoFunc -> VOID
Rule 30    bloque -> LBRACE RBRACE
Rule 31    bloque -> LBRACE bloqueAux RBRACE
Rule 32    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
Rule 33    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
Rule 34    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
Rule 35    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
Rule 36    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
Rule 37    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
Rule 38    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
Rule 39    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
Rule 40    endProc -> <empty>
Rule 41    param -> tipo ID paramAvarTable
Rule 42    param -> tipo ID paramAvarTable COMA param
Rule 43    param -> empty
Rule 44    paramAvarTable -> <empty>
Rule 45    empty -> <empty>
Rule 46    push_function -> <empty>
Rule 47    nomFunc -> ID push_function
Rule 48    bloqueAux -> estatuto
Rule 49    bloqueAux -> estatuto bloqueAux
Rule 50    while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
Rule 51    while1 -> <empty>
Rule 52    while2 -> <empty>
Rule 53    while3 -> <empty>
Rule 54    loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
Rule 55    estatuto -> asignacion
Rule 56    estatuto -> condicion
Rule 57    estatuto -> escritura
Rule 58    estatuto -> while
Rule 59    estatuto -> loopFromDo
Rule 60    estatuto -> comparacion
Rule 61    estatuto -> llamadaAFuncion
Rule 62    estatuto -> lectura
Rule 63    llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
Rule 64    llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
Rule 65    actualizaFuncion -> <empty>
Rule 66    gosub -> <empty>
Rule 67    generarEra -> <empty>
Rule 68    paramFuncion -> ID push_id2
Rule 69    paramFuncion -> ID push_id2 COMA paramFuncion
Rule 70    paramFuncion -> expresion
Rule 71    paramFuncion -> expresion COMA paramFuncion
Rule 72    paramFuncion -> empty
Rule 73    push_id2 -> <empty>
Rule 74    asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON
Rule 75    create_asign -> <empty>
Rule 76    comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
Rule 77    condicion -> IF LPAREN expresion RPAREN cond bloque condFinal
Rule 78    condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
Rule 79    cond -> <empty>
Rule 80    condElse -> <empty>
Rule 81    condFinal -> <empty>
Rule 82    escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
Rule 83    lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
Rule 84    quad_print -> <empty>
Rule 85    escrituraAux -> expresion
Rule 86    escrituraAux -> CTE_STRING push_cte
Rule 87    escrituraAux -> expresion COMA escrituraAux
Rule 88    escrituraAux -> CTE_STRING push_cte COMA escrituraAux
Rule 89    escrituraAux -> llamadaAFuncion
Rule 90    expresion -> exp
Rule 91    expresion -> exp comp exp quad_comp
Rule 92    comp -> LOWERTHAN push_poper
Rule 93    comp -> MORETHAN push_poper
Rule 94    comp -> DIFFERENT push_poper
Rule 95    comp -> DOUBLEEQUAL push_poper
Rule 96    comp -> LOWEREQUAL push_poper
Rule 97    comp -> MOREEQUAL push_poper
Rule 98    quad_comp -> <empty>
Rule 99    exp -> termino quad_term
Rule 100   exp -> termino quad_term exp1
Rule 101   exp1 -> PLUS push_poper exp
Rule 102   exp1 -> MINUS push_poper exp
Rule 103   quad_term -> <empty>
Rule 104   quad_fact -> <empty>
Rule 105   termino -> factor quad_fact
Rule 106   termino -> factor quad_fact termino1
Rule 107   termino1 -> TIMES push_poper termino
Rule 108   termino1 -> DIVIDE push_poper termino
Rule 109   factor -> LPAREN expresion RPAREN
Rule 110   factor -> factorAux
Rule 111   factorAux -> PLUS push_poper var_cte
Rule 112   factorAux -> MINUS push_poper var_cte
Rule 113   factorAux -> var_cte
Rule 114   push_id -> <empty>
Rule 115   push_cte -> <empty>
Rule 116   push_poper -> <empty>
Rule 117   var_cte -> ID push_id
Rule 118   var_cte -> CTE_I push_cte
Rule 119   var_cte -> CTE_F push_cte
Rule 120   var_cte -> CTE_STRING push_cte

Terminals, with rules where they appear

AND                  : 
CHAR                 : 25 28
COLON                : 1 2 3 4
COMA                 : 10 18 20 22 42 69 71 87 88
CTE_F                : 119
CTE_I                : 19 20 21 21 22 22 118
CTE_STRING           : 86 88 120
DIFFERENT            : 94
DIVIDE               : 108
DO                   : 54
DOUBLEEQUAL          : 76 95
ELSE                 : 78
EQUAL                : 54 74
FLOAT                : 24 27
FROM                 : 54
FUNCTION             : 32 33 34 35 36 37 38 39
ID                   : 1 2 3 4 9 10 17 18 19 20 21 22 41 42 47 54 63 64 68 69 74 76 83 117
IF                   : 77 78
INPUT                : 83
INT                  : 23 26
LBRACE               : 11 12 30 31 32 33 34 35 36 37 38 39 50 54
LCORCH               : 19 20 21 21 22 22
LOWEREQUAL           : 96
LOWERTHAN            : 92
LPAREN               : 11 12 32 33 34 35 36 37 38 39 50 54 54 63 64 77 78 82 83 109
MAIN                 : 13
MINUS                : 102 112
MOREEQUAL            : 97
MORETHAN             : 93
OR                   : 
PLUS                 : 101 111
PRINT                : 82
PROGRAM              : 1 2 3 4
RBRACE               : 11 12 30 31 32 33 34 35 36 37 38 39 50 54
RCORCH               : 19 20 21 21 22 22
RPAREN               : 11 12 32 33 34 35 36 37 38 39 50 54 54 63 64 77 78 82 83 109
SEMICOLON            : 7 8 15 16 64 74 76 82 83
TIMES                : 107
TO                   : 54
VAR                  : 6 14
VOID                 : 29
WHILE                : 50
error                : 

Nonterminals, with rules where they appear

actualizaFuncion     : 63 64
asignacion           : 55
bloque               : 77 78 78
bloqueAux            : 11 12 31 33 35 37 39 49 50 54
comp                 : 91
comparacion          : 60
cond                 : 77 78
condElse             : 78
condFinal            : 77 78
condicion            : 56
create_asign         : 74
empty                : 43 72
endProc              : 32 33 34 35 36 37 38 39
endPrograma          : 1 2 3 4
escritura            : 57
escrituraAux         : 82 87 88
estatuto             : 48 49
exp                  : 90 91 91 101 102
exp1                 : 100
expresion            : 50 54 54 63 70 71 74 76 77 78 85 87 109
factor               : 105 106
factorAux            : 110
function             : 1 2 34 35 38 39
generarEra           : 63 64
gosub                : 63 64
lectura              : 62
llamadaAFuncion      : 61 89
loopFromDo           : 59
main                 : 1 2 3 4
nomFunc              : 32 33 34 35 36 37 38 39
nomMain              : 11 12
param                : 36 37 38 39 42
paramAvarTable       : 41 42
paramFuncion         : 63 64 69 71
program              : 0
push_cte             : 86 88 118 119 120
push_function        : 47
push_id              : 74 76 83 117
push_id2             : 68 69
push_poper           : 74 76 82 83 92 93 94 95 96 97 101 102 107 108 111 112
quad_comp            : 91
quad_fact            : 105 106
quad_print           : 82 83
quad_term            : 99 100
termino              : 99 100 107 108
termino1             : 106
tipo                 : 7 8 15 16 41 42
tipoFunc             : 32 33 34 35 36 37 38 39
varAux1              : 14 16
varAux2              : 15 16 18 20 22
varAuxGlobal1        : 6 8
varAuxGlobal2        : 7 8 10
var_cte              : 111 112 113
vars                 : 12 33 35 37 39
varsGlobal           : 1 3
while                : 58
while1               : 50
while2               : 50
while3               : 50

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID COLON varsGlobal function main endPrograma
    (2) program -> . PROGRAM ID COLON function main endPrograma
    (3) program -> . PROGRAM ID COLON varsGlobal main endPrograma
    (4) program -> . PROGRAM ID COLON main endPrograma

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID COLON varsGlobal function main endPrograma
    (2) program -> PROGRAM . ID COLON function main endPrograma
    (3) program -> PROGRAM . ID COLON varsGlobal main endPrograma
    (4) program -> PROGRAM . ID COLON main endPrograma

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . COLON varsGlobal function main endPrograma
    (2) program -> PROGRAM ID . COLON function main endPrograma
    (3) program -> PROGRAM ID . COLON varsGlobal main endPrograma
    (4) program -> PROGRAM ID . COLON main endPrograma

    COLON           shift and go to state 4


state 4

    (1) program -> PROGRAM ID COLON . varsGlobal function main endPrograma
    (2) program -> PROGRAM ID COLON . function main endPrograma
    (3) program -> PROGRAM ID COLON . varsGlobal main endPrograma
    (4) program -> PROGRAM ID COLON . main endPrograma
    (6) varsGlobal -> . VAR varAuxGlobal1
    (32) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (33) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (34) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (35) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (36) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (37) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (38) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (11) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (12) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (13) nomMain -> . MAIN

    VAR             shift and go to state 10
    FUNCTION        shift and go to state 5
    MAIN            shift and go to state 11

    function                       shift and go to state 9
    varsGlobal                     shift and go to state 7
    nomMain                        shift and go to state 6
    main                           shift and go to state 8

state 5

    (32) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (33) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (34) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (35) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (36) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (37) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (38) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (39) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (26) tipoFunc -> . INT
    (27) tipoFunc -> . FLOAT
    (28) tipoFunc -> . CHAR
    (29) tipoFunc -> . VOID

    INT             shift and go to state 12
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 13

    tipoFunc                       shift and go to state 16

state 6

    (11) main -> nomMain . LPAREN RPAREN LBRACE bloqueAux RBRACE
    (12) main -> nomMain . LPAREN RPAREN LBRACE vars bloqueAux RBRACE

    LPAREN          shift and go to state 17


state 7

    (1) program -> PROGRAM ID COLON varsGlobal . function main endPrograma
    (3) program -> PROGRAM ID COLON varsGlobal . main endPrograma
    (32) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (33) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (34) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (35) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (36) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (37) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (38) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (11) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (12) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (13) nomMain -> . MAIN

    FUNCTION        shift and go to state 5
    MAIN            shift and go to state 11

    function                       shift and go to state 18
    nomMain                        shift and go to state 6
    main                           shift and go to state 19

state 8

    (4) program -> PROGRAM ID COLON main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 20

state 9

    (2) program -> PROGRAM ID COLON function . main endPrograma
    (11) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (12) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (13) nomMain -> . MAIN

    MAIN            shift and go to state 11

    nomMain                        shift and go to state 6
    main                           shift and go to state 21

state 10

    (6) varsGlobal -> VAR . varAuxGlobal1
    (7) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON
    (8) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON varAuxGlobal1
    (23) tipo -> . INT
    (24) tipo -> . FLOAT
    (25) tipo -> . CHAR

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAuxGlobal1                  shift and go to state 26
    tipo                           shift and go to state 22

state 11

    (13) nomMain -> MAIN .

    LPAREN          reduce using rule 13 (nomMain -> MAIN .)


state 12

    (26) tipoFunc -> INT .

    ID              reduce using rule 26 (tipoFunc -> INT .)


state 13

    (29) tipoFunc -> VOID .

    ID              reduce using rule 29 (tipoFunc -> VOID .)


state 14

    (27) tipoFunc -> FLOAT .

    ID              reduce using rule 27 (tipoFunc -> FLOAT .)


state 15

    (28) tipoFunc -> CHAR .

    ID              reduce using rule 28 (tipoFunc -> CHAR .)


state 16

    (32) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (33) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (34) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (35) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (36) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (37) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (38) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (39) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (47) nomFunc -> . ID push_function

    ID              shift and go to state 28

    nomFunc                        shift and go to state 27

state 17

    (11) main -> nomMain LPAREN . RPAREN LBRACE bloqueAux RBRACE
    (12) main -> nomMain LPAREN . RPAREN LBRACE vars bloqueAux RBRACE

    RPAREN          shift and go to state 29


state 18

    (1) program -> PROGRAM ID COLON varsGlobal function . main endPrograma
    (11) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (12) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (13) nomMain -> . MAIN

    MAIN            shift and go to state 11

    nomMain                        shift and go to state 6
    main                           shift and go to state 30

state 19

    (3) program -> PROGRAM ID COLON varsGlobal main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 31

state 20

    (4) program -> PROGRAM ID COLON main endPrograma .

    $end            reduce using rule 4 (program -> PROGRAM ID COLON main endPrograma .)


state 21

    (2) program -> PROGRAM ID COLON function main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 32

state 22

    (7) varAuxGlobal1 -> tipo . varAuxGlobal2 SEMICOLON
    (8) varAuxGlobal1 -> tipo . varAuxGlobal2 SEMICOLON varAuxGlobal1
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 33

state 23

    (23) tipo -> INT .

    ID              reduce using rule 23 (tipo -> INT .)


state 24

    (24) tipo -> FLOAT .

    ID              reduce using rule 24 (tipo -> FLOAT .)


state 25

    (25) tipo -> CHAR .

    ID              reduce using rule 25 (tipo -> CHAR .)


state 26

    (6) varsGlobal -> VAR varAuxGlobal1 .

    FUNCTION        reduce using rule 6 (varsGlobal -> VAR varAuxGlobal1 .)
    MAIN            reduce using rule 6 (varsGlobal -> VAR varAuxGlobal1 .)


state 27

    (32) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE RBRACE endProc
    (33) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (34) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE RBRACE endProc function
    (35) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (36) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE RBRACE endProc
    (37) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (38) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE RBRACE endProc function
    (39) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    LPAREN          shift and go to state 35


state 28

    (47) nomFunc -> ID . push_function
    (46) push_function -> .

    LPAREN          reduce using rule 46 (push_function -> .)

    push_function                  shift and go to state 36

state 29

    (11) main -> nomMain LPAREN RPAREN . LBRACE bloqueAux RBRACE
    (12) main -> nomMain LPAREN RPAREN . LBRACE vars bloqueAux RBRACE

    LBRACE          shift and go to state 37


state 30

    (1) program -> PROGRAM ID COLON varsGlobal function main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 38

state 31

    (3) program -> PROGRAM ID COLON varsGlobal main endPrograma .

    $end            reduce using rule 3 (program -> PROGRAM ID COLON varsGlobal main endPrograma .)


state 32

    (2) program -> PROGRAM ID COLON function main endPrograma .

    $end            reduce using rule 2 (program -> PROGRAM ID COLON function main endPrograma .)


state 33

    (7) varAuxGlobal1 -> tipo varAuxGlobal2 . SEMICOLON
    (8) varAuxGlobal1 -> tipo varAuxGlobal2 . SEMICOLON varAuxGlobal1

    SEMICOLON       shift and go to state 39


state 34

    (9) varAuxGlobal2 -> ID .
    (10) varAuxGlobal2 -> ID . COMA varAuxGlobal2

    SEMICOLON       reduce using rule 9 (varAuxGlobal2 -> ID .)
    COMA            shift and go to state 40


state 35

    (32) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE RBRACE endProc
    (33) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE vars bloqueAux RBRACE endProc
    (34) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE RBRACE endProc function
    (35) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (36) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE RBRACE endProc
    (37) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (38) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE RBRACE endProc function
    (39) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (41) param -> . tipo ID paramAvarTable
    (42) param -> . tipo ID paramAvarTable COMA param
    (43) param -> . empty
    (23) tipo -> . INT
    (24) tipo -> . FLOAT
    (25) tipo -> . CHAR
    (45) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 41
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

  ! RPAREN          [ reduce using rule 45 (empty -> .) ]

    tipo                           shift and go to state 44
    param                          shift and go to state 42
    empty                          shift and go to state 43

state 36

    (47) nomFunc -> ID push_function .

    LPAREN          reduce using rule 47 (nomFunc -> ID push_function .)


state 37

    (11) main -> nomMain LPAREN RPAREN LBRACE . bloqueAux RBRACE
    (12) main -> nomMain LPAREN RPAREN LBRACE . vars bloqueAux RBRACE
    (48) bloqueAux -> . estatuto
    (49) bloqueAux -> . estatuto bloqueAux
    (14) vars -> . VAR varAux1
    (55) estatuto -> . asignacion
    (56) estatuto -> . condicion
    (57) estatuto -> . escritura
    (58) estatuto -> . while
    (59) estatuto -> . loopFromDo
    (60) estatuto -> . comparacion
    (61) estatuto -> . llamadaAFuncion
    (62) estatuto -> . lectura
    (74) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (78) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (82) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (50) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (54) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (76) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (63) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (83) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    VAR             shift and go to state 51
    ID              shift and go to state 53
    IF              shift and go to state 48
    PRINT           shift and go to state 46
    WHILE           shift and go to state 58
    FROM            shift and go to state 56
    INPUT           shift and go to state 52

    vars                           shift and go to state 45
    estatuto                       shift and go to state 47
    lectura                        shift and go to state 49
    condicion                      shift and go to state 50
    loopFromDo                     shift and go to state 54
    llamadaAFuncion                shift and go to state 55
    asignacion                     shift and go to state 57
    bloqueAux                      shift and go to state 59
    while                          shift and go to state 60
    comparacion                    shift and go to state 61
    escritura                      shift and go to state 62

state 38

    (1) program -> PROGRAM ID COLON varsGlobal function main endPrograma .

    $end            reduce using rule 1 (program -> PROGRAM ID COLON varsGlobal function main endPrograma .)


state 39

    (7) varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON .
    (8) varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON . varAuxGlobal1
    (7) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON
    (8) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON varAuxGlobal1
    (23) tipo -> . INT
    (24) tipo -> . FLOAT
    (25) tipo -> . CHAR

    FUNCTION        reduce using rule 7 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON .)
    MAIN            reduce using rule 7 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAuxGlobal1                  shift and go to state 63
    tipo                           shift and go to state 22

state 40

    (10) varAuxGlobal2 -> ID COMA . varAuxGlobal2
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 64

state 41

    (32) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE RBRACE endProc
    (33) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE vars bloqueAux RBRACE endProc
    (34) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE RBRACE endProc function
    (35) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE vars bloqueAux RBRACE endProc function

    LBRACE          shift and go to state 65


state 42

    (36) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE RBRACE endProc
    (37) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE vars bloqueAux RBRACE endProc
    (38) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE RBRACE endProc function
    (39) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE vars bloqueAux RBRACE endProc function

    RPAREN          shift and go to state 66


state 43

    (43) param -> empty .

    RPAREN          reduce using rule 43 (param -> empty .)


state 44

    (41) param -> tipo . ID paramAvarTable
    (42) param -> tipo . ID paramAvarTable COMA param

    ID              shift and go to state 67


state 45

    (12) main -> nomMain LPAREN RPAREN LBRACE vars . bloqueAux RBRACE
    (48) bloqueAux -> . estatuto
    (49) bloqueAux -> . estatuto bloqueAux
    (55) estatuto -> . asignacion
    (56) estatuto -> . condicion
    (57) estatuto -> . escritura
    (58) estatuto -> . while
    (59) estatuto -> . loopFromDo
    (60) estatuto -> . comparacion
    (61) estatuto -> . llamadaAFuncion
    (62) estatuto -> . lectura
    (74) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (78) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (82) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (50) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (54) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (76) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (63) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (83) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 53
    IF              shift and go to state 48
    PRINT           shift and go to state 46
    WHILE           shift and go to state 58
    FROM            shift and go to state 56
    INPUT           shift and go to state 52

    estatuto                       shift and go to state 47
    condicion                      shift and go to state 50
    lectura                        shift and go to state 49
    loopFromDo                     shift and go to state 54
    llamadaAFuncion                shift and go to state 55
    asignacion                     shift and go to state 57
    bloqueAux                      shift and go to state 68
    while                          shift and go to state 60
    comparacion                    shift and go to state 61
    escritura                      shift and go to state 62

state 46

    (82) escritura -> PRINT . push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 69

state 47

    (48) bloqueAux -> estatuto .
    (49) bloqueAux -> estatuto . bloqueAux
    (48) bloqueAux -> . estatuto
    (49) bloqueAux -> . estatuto bloqueAux
    (55) estatuto -> . asignacion
    (56) estatuto -> . condicion
    (57) estatuto -> . escritura
    (58) estatuto -> . while
    (59) estatuto -> . loopFromDo
    (60) estatuto -> . comparacion
    (61) estatuto -> . llamadaAFuncion
    (62) estatuto -> . lectura
    (74) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (78) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (82) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (50) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (54) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (76) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (63) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (83) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    RBRACE          reduce using rule 48 (bloqueAux -> estatuto .)
    ID              shift and go to state 53
    IF              shift and go to state 48
    PRINT           shift and go to state 46
    WHILE           shift and go to state 58
    FROM            shift and go to state 56
    INPUT           shift and go to state 52

    estatuto                       shift and go to state 47
    condicion                      shift and go to state 50
    lectura                        shift and go to state 49
    loopFromDo                     shift and go to state 54
    llamadaAFuncion                shift and go to state 55
    asignacion                     shift and go to state 57
    bloqueAux                      shift and go to state 70
    while                          shift and go to state 60
    comparacion                    shift and go to state 61
    escritura                      shift and go to state 62

state 48

    (77) condicion -> IF . LPAREN expresion RPAREN cond bloque condFinal
    (78) condicion -> IF . LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal

    LPAREN          shift and go to state 71


state 49

    (62) estatuto -> lectura .

    ID              reduce using rule 62 (estatuto -> lectura .)
    IF              reduce using rule 62 (estatuto -> lectura .)
    PRINT           reduce using rule 62 (estatuto -> lectura .)
    WHILE           reduce using rule 62 (estatuto -> lectura .)
    FROM            reduce using rule 62 (estatuto -> lectura .)
    INPUT           reduce using rule 62 (estatuto -> lectura .)
    RBRACE          reduce using rule 62 (estatuto -> lectura .)


state 50

    (56) estatuto -> condicion .

    ID              reduce using rule 56 (estatuto -> condicion .)
    IF              reduce using rule 56 (estatuto -> condicion .)
    PRINT           reduce using rule 56 (estatuto -> condicion .)
    WHILE           reduce using rule 56 (estatuto -> condicion .)
    FROM            reduce using rule 56 (estatuto -> condicion .)
    INPUT           reduce using rule 56 (estatuto -> condicion .)
    RBRACE          reduce using rule 56 (estatuto -> condicion .)


state 51

    (14) vars -> VAR . varAux1
    (15) varAux1 -> . tipo varAux2 SEMICOLON
    (16) varAux1 -> . tipo varAux2 SEMICOLON varAux1
    (23) tipo -> . INT
    (24) tipo -> . FLOAT
    (25) tipo -> . CHAR

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAux1                        shift and go to state 73
    tipo                           shift and go to state 72

state 52

    (83) lectura -> INPUT . push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 74

state 53

    (74) asignacion -> ID . push_id EQUAL push_poper expresion create_asign SEMICOLON
    (76) comparacion -> ID . push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (63) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (114) push_id -> .
    (65) actualizaFuncion -> .

    EQUAL           reduce using rule 114 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 114 (push_id -> .)
    LPAREN          reduce using rule 65 (actualizaFuncion -> .)

    actualizaFuncion               shift and go to state 75
    push_id                        shift and go to state 76

state 54

    (59) estatuto -> loopFromDo .

    ID              reduce using rule 59 (estatuto -> loopFromDo .)
    IF              reduce using rule 59 (estatuto -> loopFromDo .)
    PRINT           reduce using rule 59 (estatuto -> loopFromDo .)
    WHILE           reduce using rule 59 (estatuto -> loopFromDo .)
    FROM            reduce using rule 59 (estatuto -> loopFromDo .)
    INPUT           reduce using rule 59 (estatuto -> loopFromDo .)
    RBRACE          reduce using rule 59 (estatuto -> loopFromDo .)


state 55

    (61) estatuto -> llamadaAFuncion .

    ID              reduce using rule 61 (estatuto -> llamadaAFuncion .)
    IF              reduce using rule 61 (estatuto -> llamadaAFuncion .)
    PRINT           reduce using rule 61 (estatuto -> llamadaAFuncion .)
    WHILE           reduce using rule 61 (estatuto -> llamadaAFuncion .)
    FROM            reduce using rule 61 (estatuto -> llamadaAFuncion .)
    INPUT           reduce using rule 61 (estatuto -> llamadaAFuncion .)
    RBRACE          reduce using rule 61 (estatuto -> llamadaAFuncion .)


state 56

    (54) loopFromDo -> FROM . LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    LPAREN          shift and go to state 77


state 57

    (55) estatuto -> asignacion .

    ID              reduce using rule 55 (estatuto -> asignacion .)
    IF              reduce using rule 55 (estatuto -> asignacion .)
    PRINT           reduce using rule 55 (estatuto -> asignacion .)
    WHILE           reduce using rule 55 (estatuto -> asignacion .)
    FROM            reduce using rule 55 (estatuto -> asignacion .)
    INPUT           reduce using rule 55 (estatuto -> asignacion .)
    RBRACE          reduce using rule 55 (estatuto -> asignacion .)


state 58

    (50) while -> WHILE . while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (51) while1 -> .

    LPAREN          reduce using rule 51 (while1 -> .)

    while1                         shift and go to state 78

state 59

    (11) main -> nomMain LPAREN RPAREN LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 79


state 60

    (58) estatuto -> while .

    ID              reduce using rule 58 (estatuto -> while .)
    IF              reduce using rule 58 (estatuto -> while .)
    PRINT           reduce using rule 58 (estatuto -> while .)
    WHILE           reduce using rule 58 (estatuto -> while .)
    FROM            reduce using rule 58 (estatuto -> while .)
    INPUT           reduce using rule 58 (estatuto -> while .)
    RBRACE          reduce using rule 58 (estatuto -> while .)


state 61

    (60) estatuto -> comparacion .

    ID              reduce using rule 60 (estatuto -> comparacion .)
    IF              reduce using rule 60 (estatuto -> comparacion .)
    PRINT           reduce using rule 60 (estatuto -> comparacion .)
    WHILE           reduce using rule 60 (estatuto -> comparacion .)
    FROM            reduce using rule 60 (estatuto -> comparacion .)
    INPUT           reduce using rule 60 (estatuto -> comparacion .)
    RBRACE          reduce using rule 60 (estatuto -> comparacion .)


state 62

    (57) estatuto -> escritura .

    ID              reduce using rule 57 (estatuto -> escritura .)
    IF              reduce using rule 57 (estatuto -> escritura .)
    PRINT           reduce using rule 57 (estatuto -> escritura .)
    WHILE           reduce using rule 57 (estatuto -> escritura .)
    FROM            reduce using rule 57 (estatuto -> escritura .)
    INPUT           reduce using rule 57 (estatuto -> escritura .)
    RBRACE          reduce using rule 57 (estatuto -> escritura .)


state 63

    (8) varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1 .

    FUNCTION        reduce using rule 8 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1 .)
    MAIN            reduce using rule 8 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1 .)


state 64

    (10) varAuxGlobal2 -> ID COMA varAuxGlobal2 .

    SEMICOLON       reduce using rule 10 (varAuxGlobal2 -> ID COMA varAuxGlobal2 .)


state 65

    (32) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . RBRACE endProc
    (33) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . vars bloqueAux RBRACE endProc
    (34) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . RBRACE endProc function
    (35) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . vars bloqueAux RBRACE endProc function
    (14) vars -> . VAR varAux1
    (44) empty -> .

    RETURN          shift and go to state 83
    VAR             shift and go to state 51
    RBRACE          reduce using rule 44 (empty -> .)

    vars                           shift and go to state 80
    functionReturn                 shift and go to state 81
    empty                          shift and go to state 82

state 66

    (36) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE RBRACE endProc
    (37) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE vars bloqueAux RBRACE endProc
    (38) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE RBRACE endProc function
    (39) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE vars bloqueAux RBRACE endProc function

    LBRACE          shift and go to state 84


state 67

    (41) param -> tipo ID . paramAvarTable
    (42) param -> tipo ID . paramAvarTable COMA param
    (44) paramAvarTable -> .

    COMA            reduce using rule 44 (paramAvarTable -> .)
    RPAREN          reduce using rule 44 (paramAvarTable -> .)

    paramAvarTable                 shift and go to state 85

state 68

    (12) main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux . RBRACE

    RBRACE          shift and go to state 86


state 69

    (82) escritura -> PRINT push_poper . LPAREN escrituraAux RPAREN quad_print SEMICOLON

    LPAREN          shift and go to state 87


state 70

    (49) bloqueAux -> estatuto bloqueAux .

    RBRACE          reduce using rule 49 (bloqueAux -> estatuto bloqueAux .)


state 71

    (77) condicion -> IF LPAREN . expresion RPAREN cond bloque condFinal
    (78) condicion -> IF LPAREN . expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 96
    PLUS            shift and go to state 91
    MINUS           shift and go to state 90
    ID              shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 93
    CTE_STRING      shift and go to state 94

    expresion                      shift and go to state 98
    factor                         shift and go to state 92
    termino                        shift and go to state 89
    exp                            shift and go to state 99
    factorAux                      shift and go to state 100
    var_cte                        shift and go to state 88

state 72

    (15) varAux1 -> tipo . varAux2 SEMICOLON
    (16) varAux1 -> tipo . varAux2 SEMICOLON varAux1
    (17) varAux2 -> . ID
    (18) varAux2 -> . ID COMA varAux2
    (19) varAux2 -> . ID LCORCH CTE_I RCORCH
    (20) varAux2 -> . ID LCORCH CTE_I RCORCH COMA varAux2
    (21) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (22) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAux2

    ID              shift and go to state 102

    varAux2                        shift and go to state 101

state 73

    (14) vars -> VAR varAux1 .

    ID              reduce using rule 14 (vars -> VAR varAux1 .)
    IF              reduce using rule 14 (vars -> VAR varAux1 .)
    PRINT           reduce using rule 14 (vars -> VAR varAux1 .)
    WHILE           reduce using rule 14 (vars -> VAR varAux1 .)
    FROM            reduce using rule 14 (vars -> VAR varAux1 .)
    INPUT           reduce using rule 14 (vars -> VAR varAux1 .)


state 74

    (83) lectura -> INPUT push_poper . LPAREN ID push_id RPAREN quad_print SEMICOLON

    LPAREN          shift and go to state 103


state 75

    (63) llamadaAFuncion -> ID actualizaFuncion . generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> ID actualizaFuncion . generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (67) generarEra -> .

    LPAREN          reduce using rule 67 (generarEra -> .)

    generarEra                     shift and go to state 104

state 76

    (74) asignacion -> ID push_id . EQUAL push_poper expresion create_asign SEMICOLON
    (76) comparacion -> ID push_id . DOUBLEEQUAL push_poper expresion SEMICOLON

    EQUAL           shift and go to state 106
    DOUBLEEQUAL     shift and go to state 105


state 77

    (54) loopFromDo -> FROM LPAREN . ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    ID              shift and go to state 107


state 78

    (50) while -> WHILE while1 . LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3

    LPAREN          shift and go to state 108


state 79

    (11) main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE .

    $end            reduce using rule 11 (main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE .)


state 80

    (32) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE . endProc
    (34) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE . endProc function
    (40) endProc -> .

    FUNCTION        reduce using rule 40 (endProc -> .)
    MAIN            reduce using rule 40 (endProc -> .)

    endProc                        shift and go to state 107

state 81

    (33) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars . bloqueAux RBRACE endProc
    (35) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars . bloqueAux RBRACE endProc function
    (48) bloqueAux -> . estatuto
    (49) bloqueAux -> . estatuto bloqueAux
    (55) estatuto -> . asignacion
    (56) estatuto -> . condicion
    (57) estatuto -> . escritura
    (58) estatuto -> . while
    (59) estatuto -> . loopFromDo
    (60) estatuto -> . comparacion
    (61) estatuto -> . llamadaAFuncion
    (62) estatuto -> . lectura
    (74) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (78) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (82) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (50) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (54) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (76) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (63) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (83) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 53
    IF              shift and go to state 48
    PRINT           shift and go to state 46
    WHILE           shift and go to state 58
    FROM            shift and go to state 56
    INPUT           shift and go to state 52

    estatuto                       shift and go to state 47
    condicion                      shift and go to state 50
    lectura                        shift and go to state 49
    loopFromDo                     shift and go to state 54
    llamadaAFuncion                shift and go to state 55
    asignacion                     shift and go to state 57
    bloqueAux                      shift and go to state 109
    while                          shift and go to state 60
    comparacion                    shift and go to state 61
    escritura                      shift and go to state 62

state 81

    (28) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn . RBRACE endProc
    (30) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE functionReturn . RBRACE endProc function

    RBRACE          shift and go to state 110


state 82

    (36) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . RBRACE endProc
    (37) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . vars bloqueAux RBRACE endProc
    (38) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . RBRACE endProc function
    (39) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . vars bloqueAux RBRACE endProc function
    (14) vars -> . VAR varAux1

    RBRACE          reduce using rule 37 (functionReturn -> empty .)


state 83

    (41) param -> tipo ID paramAvarTable .
    (42) param -> tipo ID paramAvarTable . COMA param

    RPAREN          reduce using rule 41 (param -> tipo ID paramAvarTable .)
    COMA            shift and go to state 111

    termino                        shift and go to state 89
    exp                            shift and go to state 111
    factor                         shift and go to state 92
    factorAux                      shift and go to state 100
    var_cte                        shift and go to state 88

state 84

    (32) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . functionReturn RBRACE endProc
    (33) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . vars bloqueAux functionReturn RBRACE endProc
    (34) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . functionReturn RBRACE endProc function
    (35) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . vars bloqueAux functionReturn RBRACE endProc function
    (36) functionReturn -> . RETURN exp creaCuadReturn SEMICOLON
    (37) functionReturn -> . empty
    (14) vars -> . VAR varAux1
    (44) empty -> .

    RETURN          shift and go to state 83
    VAR             shift and go to state 51
    RBRACE          reduce using rule 44 (empty -> .)

    vars                           shift and go to state 112
    functionReturn                 shift and go to state 113
    empty                          shift and go to state 82

state 85

    (82) escritura -> PRINT push_poper LPAREN . escrituraAux RPAREN quad_print SEMICOLON
    (85) escrituraAux -> . expresion
    (86) escrituraAux -> . CTE_STRING push_cte
    (87) escrituraAux -> . expresion COMA escrituraAux
    (88) escrituraAux -> . CTE_STRING push_cte COMA escrituraAux
    (89) escrituraAux -> . llamadaAFuncion
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (63) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    RPAREN          reduce using rule 40 (param -> tipo ID paramAvarTable .)
    COMA            shift and go to state 114


state 86

    (113) factorAux -> var_cte .

    TIMES           reduce using rule 113 (factorAux -> var_cte .)
    DIVIDE          reduce using rule 113 (factorAux -> var_cte .)
    PLUS            reduce using rule 113 (factorAux -> var_cte .)
    MINUS           reduce using rule 113 (factorAux -> var_cte .)
    LOWERTHAN       reduce using rule 113 (factorAux -> var_cte .)
    MORETHAN        reduce using rule 113 (factorAux -> var_cte .)
    DIFFERENT       reduce using rule 113 (factorAux -> var_cte .)
    DOUBLEEQUAL     reduce using rule 113 (factorAux -> var_cte .)
    LOWEREQUAL      reduce using rule 113 (factorAux -> var_cte .)
    MOREEQUAL       reduce using rule 113 (factorAux -> var_cte .)
    COMA            reduce using rule 113 (factorAux -> var_cte .)
    RPAREN          reduce using rule 113 (factorAux -> var_cte .)
    SEMICOLON       reduce using rule 113 (factorAux -> var_cte .)
    ID              reduce using rule 113 (factorAux -> var_cte .)
    IF              reduce using rule 113 (factorAux -> var_cte .)
    PRINT           reduce using rule 113 (factorAux -> var_cte .)
    WHILE           reduce using rule 113 (factorAux -> var_cte .)
    FROM            reduce using rule 113 (factorAux -> var_cte .)
    INPUT           reduce using rule 113 (factorAux -> var_cte .)
    RBRACE          reduce using rule 113 (factorAux -> var_cte .)


state 87

    (99) exp -> termino . quad_term
    (100) exp -> termino . quad_term exp1
    (103) quad_term -> .

    PLUS            reduce using rule 103 (quad_term -> .)
    MINUS           reduce using rule 103 (quad_term -> .)
    LOWERTHAN       reduce using rule 103 (quad_term -> .)
    MORETHAN        reduce using rule 103 (quad_term -> .)
    DIFFERENT       reduce using rule 103 (quad_term -> .)
    DOUBLEEQUAL     reduce using rule 103 (quad_term -> .)
    LOWEREQUAL      reduce using rule 103 (quad_term -> .)
    MOREEQUAL       reduce using rule 103 (quad_term -> .)
    RPAREN          reduce using rule 103 (quad_term -> .)
    COMA            reduce using rule 103 (quad_term -> .)
    SEMICOLON       reduce using rule 103 (quad_term -> .)
    ID              reduce using rule 103 (quad_term -> .)
    IF              reduce using rule 103 (quad_term -> .)
    PRINT           reduce using rule 103 (quad_term -> .)
    WHILE           reduce using rule 103 (quad_term -> .)
    FROM            reduce using rule 103 (quad_term -> .)
    INPUT           reduce using rule 103 (quad_term -> .)
    RBRACE          reduce using rule 103 (quad_term -> .)

    termino                        shift and go to state 89
    factor                         shift and go to state 92
    expresion                      shift and go to state 116
    var_cte                        shift and go to state 88
    escrituraAux                   shift and go to state 118
    llamadaAFuncion                shift and go to state 119
    exp                            shift and go to state 99
    factorAux                      shift and go to state 100

state 88

    (112) factorAux -> MINUS . push_poper var_cte
    (116) push_poper -> .

    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)


state 89

    (111) factorAux -> PLUS . push_poper var_cte
    (116) push_poper -> .

    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)

    quad_term                      shift and go to state 120

state 90

    (105) termino -> factor . quad_fact
    (106) termino -> factor . quad_fact termino1
    (104) quad_fact -> .

    TIMES           reduce using rule 104 (quad_fact -> .)
    DIVIDE          reduce using rule 104 (quad_fact -> .)
    PLUS            reduce using rule 104 (quad_fact -> .)
    MINUS           reduce using rule 104 (quad_fact -> .)
    LOWERTHAN       reduce using rule 104 (quad_fact -> .)
    MORETHAN        reduce using rule 104 (quad_fact -> .)
    DIFFERENT       reduce using rule 104 (quad_fact -> .)
    DOUBLEEQUAL     reduce using rule 104 (quad_fact -> .)
    LOWEREQUAL      reduce using rule 104 (quad_fact -> .)
    MOREEQUAL       reduce using rule 104 (quad_fact -> .)
    RPAREN          reduce using rule 104 (quad_fact -> .)
    COMA            reduce using rule 104 (quad_fact -> .)
    SEMICOLON       reduce using rule 104 (quad_fact -> .)
    ID              reduce using rule 104 (quad_fact -> .)
    IF              reduce using rule 104 (quad_fact -> .)
    PRINT           reduce using rule 104 (quad_fact -> .)
    WHILE           reduce using rule 104 (quad_fact -> .)
    FROM            reduce using rule 104 (quad_fact -> .)
    INPUT           reduce using rule 104 (quad_fact -> .)
    RBRACE          reduce using rule 104 (quad_fact -> .)

    push_poper                     shift and go to state 121

state 91

    (119) var_cte -> CTE_F . push_cte
    (115) push_cte -> .

    TIMES           reduce using rule 115 (push_cte -> .)
    DIVIDE          reduce using rule 115 (push_cte -> .)
    PLUS            reduce using rule 115 (push_cte -> .)
    MINUS           reduce using rule 115 (push_cte -> .)
    LOWERTHAN       reduce using rule 115 (push_cte -> .)
    MORETHAN        reduce using rule 115 (push_cte -> .)
    DIFFERENT       reduce using rule 115 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 115 (push_cte -> .)
    LOWEREQUAL      reduce using rule 115 (push_cte -> .)
    MOREEQUAL       reduce using rule 115 (push_cte -> .)
    RPAREN          reduce using rule 115 (push_cte -> .)
    COMA            reduce using rule 115 (push_cte -> .)
    SEMICOLON       reduce using rule 115 (push_cte -> .)
    ID              reduce using rule 115 (push_cte -> .)
    IF              reduce using rule 115 (push_cte -> .)
    PRINT           reduce using rule 115 (push_cte -> .)
    WHILE           reduce using rule 115 (push_cte -> .)
    FROM            reduce using rule 115 (push_cte -> .)
    INPUT           reduce using rule 115 (push_cte -> .)
    RBRACE          reduce using rule 115 (push_cte -> .)

    push_poper                     shift and go to state 122

state 92

    (120) var_cte -> CTE_STRING . push_cte
    (115) push_cte -> .

    TIMES           reduce using rule 115 (push_cte -> .)
    DIVIDE          reduce using rule 115 (push_cte -> .)
    PLUS            reduce using rule 115 (push_cte -> .)
    MINUS           reduce using rule 115 (push_cte -> .)
    LOWERTHAN       reduce using rule 115 (push_cte -> .)
    MORETHAN        reduce using rule 115 (push_cte -> .)
    DIFFERENT       reduce using rule 115 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 115 (push_cte -> .)
    LOWEREQUAL      reduce using rule 115 (push_cte -> .)
    MOREEQUAL       reduce using rule 115 (push_cte -> .)
    RPAREN          reduce using rule 115 (push_cte -> .)
    COMA            reduce using rule 115 (push_cte -> .)
    SEMICOLON       reduce using rule 115 (push_cte -> .)
    ID              reduce using rule 115 (push_cte -> .)
    IF              reduce using rule 115 (push_cte -> .)
    PRINT           reduce using rule 115 (push_cte -> .)
    WHILE           reduce using rule 115 (push_cte -> .)
    FROM            reduce using rule 115 (push_cte -> .)
    INPUT           reduce using rule 115 (push_cte -> .)
    RBRACE          reduce using rule 115 (push_cte -> .)

    quad_fact                      shift and go to state 123

state 93

    (118) var_cte -> CTE_I . push_cte
    (115) push_cte -> .

    TIMES           reduce using rule 115 (push_cte -> .)
    DIVIDE          reduce using rule 115 (push_cte -> .)
    PLUS            reduce using rule 115 (push_cte -> .)
    MINUS           reduce using rule 115 (push_cte -> .)
    LOWERTHAN       reduce using rule 115 (push_cte -> .)
    MORETHAN        reduce using rule 115 (push_cte -> .)
    DIFFERENT       reduce using rule 115 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 115 (push_cte -> .)
    LOWEREQUAL      reduce using rule 115 (push_cte -> .)
    MOREEQUAL       reduce using rule 115 (push_cte -> .)
    RPAREN          reduce using rule 115 (push_cte -> .)
    COMA            reduce using rule 115 (push_cte -> .)
    SEMICOLON       reduce using rule 115 (push_cte -> .)
    ID              reduce using rule 115 (push_cte -> .)
    IF              reduce using rule 115 (push_cte -> .)
    PRINT           reduce using rule 115 (push_cte -> .)
    WHILE           reduce using rule 115 (push_cte -> .)
    FROM            reduce using rule 115 (push_cte -> .)
    INPUT           reduce using rule 115 (push_cte -> .)
    RBRACE          reduce using rule 115 (push_cte -> .)

    push_cte                       shift and go to state 124

state 94

    (109) factor -> LPAREN . expresion RPAREN
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    TIMES           reduce using rule 114 (push_cte -> .)
    DIVIDE          reduce using rule 114 (push_cte -> .)
    PLUS            reduce using rule 114 (push_cte -> .)
    MINUS           reduce using rule 114 (push_cte -> .)
    LOWERTHAN       reduce using rule 114 (push_cte -> .)
    MORETHAN        reduce using rule 114 (push_cte -> .)
    DIFFERENT       reduce using rule 114 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 114 (push_cte -> .)
    LOWEREQUAL      reduce using rule 114 (push_cte -> .)
    MOREEQUAL       reduce using rule 114 (push_cte -> .)
    RPAREN          reduce using rule 114 (push_cte -> .)
    SEMICOLON       reduce using rule 114 (push_cte -> .)
    COMA            reduce using rule 114 (push_cte -> .)
    ID              reduce using rule 114 (push_cte -> .)
    IF              reduce using rule 114 (push_cte -> .)
    PRINT           reduce using rule 114 (push_cte -> .)
    WHILE           reduce using rule 114 (push_cte -> .)
    FROM            reduce using rule 114 (push_cte -> .)
    INPUT           reduce using rule 114 (push_cte -> .)
    RBRACE          reduce using rule 114 (push_cte -> .)
    RETURN          reduce using rule 114 (push_cte -> .)

    push_cte                       shift and go to state 125

state 95

    (117) var_cte -> ID . push_id
    (114) push_id -> .

    TIMES           reduce using rule 114 (push_id -> .)
    DIVIDE          reduce using rule 114 (push_id -> .)
    PLUS            reduce using rule 114 (push_id -> .)
    MINUS           reduce using rule 114 (push_id -> .)
    LOWERTHAN       reduce using rule 114 (push_id -> .)
    MORETHAN        reduce using rule 114 (push_id -> .)
    DIFFERENT       reduce using rule 114 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 114 (push_id -> .)
    LOWEREQUAL      reduce using rule 114 (push_id -> .)
    MOREEQUAL       reduce using rule 114 (push_id -> .)
    RPAREN          reduce using rule 114 (push_id -> .)
    COMA            reduce using rule 114 (push_id -> .)
    SEMICOLON       reduce using rule 114 (push_id -> .)
    ID              reduce using rule 114 (push_id -> .)
    IF              reduce using rule 114 (push_id -> .)
    PRINT           reduce using rule 114 (push_id -> .)
    WHILE           reduce using rule 114 (push_id -> .)
    FROM            reduce using rule 114 (push_id -> .)
    INPUT           reduce using rule 114 (push_id -> .)
    RBRACE          reduce using rule 114 (push_id -> .)

    push_cte                       shift and go to state 126

state 96

    (77) condicion -> IF LPAREN expresion . RPAREN cond bloque condFinal
    (78) condicion -> IF LPAREN expresion . RPAREN cond bloque ELSE condElse bloque condFinal

    LPAREN          shift and go to state 96
    PLUS            shift and go to state 91
    MINUS           shift and go to state 90
    ID              shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 93
    CTE_STRING      shift and go to state 94

    expresion                      shift and go to state 127
    factor                         shift and go to state 92
    termino                        shift and go to state 89
    exp                            shift and go to state 99
    factorAux                      shift and go to state 100
    var_cte                        shift and go to state 88

state 97

    (90) expresion -> exp .
    (91) expresion -> exp . comp exp quad_comp
    (92) comp -> . LOWERTHAN push_poper
    (93) comp -> . MORETHAN push_poper
    (94) comp -> . DIFFERENT push_poper
    (95) comp -> . DOUBLEEQUAL push_poper
    (96) comp -> . LOWEREQUAL push_poper
    (97) comp -> . MOREEQUAL push_poper

    COMA            reduce using rule 90 (expresion -> exp .)
    RPAREN          reduce using rule 90 (expresion -> exp .)
    SEMICOLON       reduce using rule 90 (expresion -> exp .)
    ID              reduce using rule 90 (expresion -> exp .)
    IF              reduce using rule 90 (expresion -> exp .)
    PRINT           reduce using rule 90 (expresion -> exp .)
    WHILE           reduce using rule 90 (expresion -> exp .)
    FROM            reduce using rule 90 (expresion -> exp .)
    INPUT           reduce using rule 90 (expresion -> exp .)
    RBRACE          reduce using rule 90 (expresion -> exp .)
    LOWERTHAN       shift and go to state 130
    MORETHAN        shift and go to state 133
    DIFFERENT       shift and go to state 128
    DOUBLEEQUAL     shift and go to state 129
    LOWEREQUAL      shift and go to state 132
    MOREEQUAL       shift and go to state 127

    push_id                        shift and go to state 128

state 98

    (110) factor -> factorAux .

    TIMES           reduce using rule 110 (factor -> factorAux .)
    DIVIDE          reduce using rule 110 (factor -> factorAux .)
    PLUS            reduce using rule 110 (factor -> factorAux .)
    MINUS           reduce using rule 110 (factor -> factorAux .)
    LOWERTHAN       reduce using rule 110 (factor -> factorAux .)
    MORETHAN        reduce using rule 110 (factor -> factorAux .)
    DIFFERENT       reduce using rule 110 (factor -> factorAux .)
    DOUBLEEQUAL     reduce using rule 110 (factor -> factorAux .)
    LOWEREQUAL      reduce using rule 110 (factor -> factorAux .)
    MOREEQUAL       reduce using rule 110 (factor -> factorAux .)
    RPAREN          reduce using rule 110 (factor -> factorAux .)
    SEMICOLON       reduce using rule 110 (factor -> factorAux .)
    COMA            reduce using rule 110 (factor -> factorAux .)
    ID              reduce using rule 110 (factor -> factorAux .)
    IF              reduce using rule 110 (factor -> factorAux .)
    PRINT           reduce using rule 110 (factor -> factorAux .)
    WHILE           reduce using rule 110 (factor -> factorAux .)
    FROM            reduce using rule 110 (factor -> factorAux .)
    INPUT           reduce using rule 110 (factor -> factorAux .)
    RBRACE          reduce using rule 110 (factor -> factorAux .)


state 99

    (89) expresion -> exp .
    (90) expresion -> exp . comp exp quad_comp
    (91) comp -> . LOWERTHAN push_poper
    (92) comp -> . MORETHAN push_poper
    (93) comp -> . DIFFERENT push_poper
    (94) comp -> . DOUBLEEQUAL push_poper
    (95) comp -> . LOWEREQUAL push_poper
    (96) comp -> . MOREEQUAL push_poper

    COMA            reduce using rule 89 (expresion -> exp .)
    RPAREN          reduce using rule 89 (expresion -> exp .)
    SEMICOLON       reduce using rule 89 (expresion -> exp .)
    ID              reduce using rule 89 (expresion -> exp .)
    IF              reduce using rule 89 (expresion -> exp .)
    PRINT           reduce using rule 89 (expresion -> exp .)
    WHILE           reduce using rule 89 (expresion -> exp .)
    FROM            reduce using rule 89 (expresion -> exp .)
    INPUT           reduce using rule 89 (expresion -> exp .)
    RBRACE          reduce using rule 89 (expresion -> exp .)
    RETURN          reduce using rule 89 (expresion -> exp .)
    LOWERTHAN       shift and go to state 133
    MORETHAN        shift and go to state 136
    DIFFERENT       shift and go to state 131
    DOUBLEEQUAL     shift and go to state 132
    LOWEREQUAL      shift and go to state 135
    MOREEQUAL       shift and go to state 130

    comp                           shift and go to state 134

state 100

    (17) varAux2 -> ID .
    (18) varAux2 -> ID . COMA varAux2
    (19) varAux2 -> ID . LCORCH CTE_I RCORCH
    (20) varAux2 -> ID . LCORCH CTE_I RCORCH COMA varAux2
    (21) varAux2 -> ID . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (22) varAux2 -> ID . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAux2

    SEMICOLON       reduce using rule 17 (varAux2 -> ID .)
    COMA            shift and go to state 136
    LCORCH          shift and go to state 135


state 101

    (83) lectura -> INPUT push_poper LPAREN . ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 137


state 102

    (63) llamadaAFuncion -> ID actualizaFuncion generarEra . LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> ID actualizaFuncion generarEra . LPAREN paramFuncion gosub RPAREN SEMICOLON

    LPAREN          shift and go to state 138


state 103

    (76) comparacion -> ID push_id DOUBLEEQUAL . push_poper expresion SEMICOLON
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)
    PLUS            reduce using rule 116 (push_poper -> .)
    MINUS           reduce using rule 116 (push_poper -> .)
    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 139

state 104

    (74) asignacion -> ID push_id EQUAL . push_poper expresion create_asign SEMICOLON
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)
    PLUS            reduce using rule 116 (push_poper -> .)
    MINUS           reduce using rule 116 (push_poper -> .)
    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 140

state 105

    (54) loopFromDo -> FROM LPAREN ID . EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    EQUAL           shift and go to state 141

    push_poper                     shift and go to state 141

state 106

    (50) while -> WHILE while1 LPAREN . expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    LPAREN          reduce using rule 115 (push_poper -> .)
    PLUS            reduce using rule 115 (push_poper -> .)
    MINUS           reduce using rule 115 (push_poper -> .)
    ID              reduce using rule 115 (push_poper -> .)
    CTE_I           reduce using rule 115 (push_poper -> .)
    CTE_F           reduce using rule 115 (push_poper -> .)
    CTE_STRING      reduce using rule 115 (push_poper -> .)

    expresion                      shift and go to state 142
    factor                         shift and go to state 90
    var_cte                        shift and go to state 86
    termino                        shift and go to state 87
    exp                            shift and go to state 97
    factorAux                      shift and go to state 98

state 107

    (32) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc .
    (34) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc . function
    (32) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (33) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (34) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (35) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (36) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (37) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (38) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    MAIN            reduce using rule 32 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 143

state 108

    (33) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux . RBRACE endProc
    (35) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux . RBRACE endProc function

    RBRACE          shift and go to state 144

    expresion                      shift and go to state 144
    factor                         shift and go to state 92
    var_cte                        shift and go to state 88
    termino                        shift and go to state 89
    exp                            shift and go to state 99
    factorAux                      shift and go to state 100

state 109

    (36) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE . endProc
    (38) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE . endProc function
    (40) endProc -> .

    FUNCTION        reduce using rule 40 (endProc -> .)
    MAIN            reduce using rule 40 (endProc -> .)

    endProc                        shift and go to state 145

state 110

    (37) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars . bloqueAux RBRACE endProc
    (39) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars . bloqueAux RBRACE endProc function
    (48) bloqueAux -> . estatuto
    (49) bloqueAux -> . estatuto bloqueAux
    (55) estatuto -> . asignacion
    (56) estatuto -> . condicion
    (57) estatuto -> . escritura
    (58) estatuto -> . while
    (59) estatuto -> . loopFromDo
    (60) estatuto -> . comparacion
    (61) estatuto -> . llamadaAFuncion
    (62) estatuto -> . lectura
    (74) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (78) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (82) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (50) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (54) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (76) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (63) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (83) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    FUNCTION        reduce using rule 39 (endProc -> .)
    MAIN            reduce using rule 39 (endProc -> .)

    endProc                        shift and go to state 146

state 111

    (36) functionReturn -> RETURN exp . creaCuadReturn SEMICOLON
    (38) creaCuadReturn -> .

    SEMICOLON       reduce using rule 38 (creaCuadReturn -> .)

    creaCuadReturn                 shift and go to state 147

state 112

    (33) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars . bloqueAux functionReturn RBRACE endProc
    (35) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars . bloqueAux functionReturn RBRACE endProc function
    (47) bloqueAux -> . estatuto
    (48) bloqueAux -> . estatuto bloqueAux
    (54) estatuto -> . asignacion
    (55) estatuto -> . condicion
    (56) estatuto -> . escritura
    (57) estatuto -> . while
    (58) estatuto -> . loopFromDo
    (59) estatuto -> . comparacion
    (60) estatuto -> . llamadaAFuncion
    (61) estatuto -> . lectura
    (73) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (76) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (77) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (81) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (49) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (53) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (75) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (62) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (63) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (82) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 53
    IF              shift and go to state 48
    PRINT           shift and go to state 46
    WHILE           shift and go to state 58
    FROM            shift and go to state 56
    INPUT           shift and go to state 52

    estatuto                       shift and go to state 47
    condicion                      shift and go to state 50
    lectura                        shift and go to state 49
    loopFromDo                     shift and go to state 54
    llamadaAFuncion                shift and go to state 55
    asignacion                     shift and go to state 57
    bloqueAux                      shift and go to state 146
    while                          shift and go to state 60
    comparacion                    shift and go to state 61
    escritura                      shift and go to state 62

state 113

    (42) param -> tipo ID paramAvarTable COMA . param
    (41) param -> . tipo ID paramAvarTable
    (42) param -> . tipo ID paramAvarTable COMA param
    (43) param -> . empty
    (23) tipo -> . INT
    (24) tipo -> . FLOAT
    (25) tipo -> . CHAR
    (45) empty -> .

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    RPAREN          reduce using rule 45 (empty -> .)

    empty                          shift and go to state 43
    param                          shift and go to state 147
    tipo                           shift and go to state 44

state 112

    (86) escrituraAux -> CTE_STRING . push_cte
    (88) escrituraAux -> CTE_STRING . push_cte COMA escrituraAux
    (120) var_cte -> CTE_STRING . push_cte
    (115) push_cte -> .

    COMA            reduce using rule 115 (push_cte -> .)
    RPAREN          reduce using rule 115 (push_cte -> .)
    TIMES           reduce using rule 115 (push_cte -> .)
    DIVIDE          reduce using rule 115 (push_cte -> .)
    PLUS            reduce using rule 115 (push_cte -> .)
    MINUS           reduce using rule 115 (push_cte -> .)
    LOWERTHAN       reduce using rule 115 (push_cte -> .)
    MORETHAN        reduce using rule 115 (push_cte -> .)
    DIFFERENT       reduce using rule 115 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 115 (push_cte -> .)
    LOWEREQUAL      reduce using rule 115 (push_cte -> .)
    MOREEQUAL       reduce using rule 115 (push_cte -> .)

    push_cte                       shift and go to state 148

state 113

    (85) escrituraAux -> expresion .
    (87) escrituraAux -> expresion . COMA escrituraAux

    RPAREN          reduce using rule 85 (escrituraAux -> expresion .)
    COMA            shift and go to state 149


state 114

    (63) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (117) var_cte -> ID . push_id
    (65) actualizaFuncion -> .
    (114) push_id -> .

    LPAREN          reduce using rule 65 (actualizaFuncion -> .)
    TIMES           reduce using rule 114 (push_id -> .)
    DIVIDE          reduce using rule 114 (push_id -> .)
    PLUS            reduce using rule 114 (push_id -> .)
    MINUS           reduce using rule 114 (push_id -> .)
    LOWERTHAN       reduce using rule 114 (push_id -> .)
    MORETHAN        reduce using rule 114 (push_id -> .)
    DIFFERENT       reduce using rule 114 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 114 (push_id -> .)
    LOWEREQUAL      reduce using rule 114 (push_id -> .)
    MOREEQUAL       reduce using rule 114 (push_id -> .)
    COMA            reduce using rule 114 (push_id -> .)
    RPAREN          reduce using rule 114 (push_id -> .)

    actualizaFuncion               shift and go to state 75
    push_id                        shift and go to state 125

state 115

    (82) escritura -> PRINT push_poper LPAREN escrituraAux . RPAREN quad_print SEMICOLON

    RPAREN          shift and go to state 150

    push_cte                       shift and go to state 151

state 116

    (89) escrituraAux -> llamadaAFuncion .

    RPAREN          reduce using rule 89 (escrituraAux -> llamadaAFuncion .)


state 117

    (99) exp -> termino quad_term .
    (100) exp -> termino quad_term . exp1
    (101) exp1 -> . PLUS push_poper exp
    (102) exp1 -> . MINUS push_poper exp

    LOWERTHAN       reduce using rule 99 (exp -> termino quad_term .)
    MORETHAN        reduce using rule 99 (exp -> termino quad_term .)
    DIFFERENT       reduce using rule 99 (exp -> termino quad_term .)
    DOUBLEEQUAL     reduce using rule 99 (exp -> termino quad_term .)
    LOWEREQUAL      reduce using rule 99 (exp -> termino quad_term .)
    MOREEQUAL       reduce using rule 99 (exp -> termino quad_term .)
    ID              reduce using rule 99 (exp -> termino quad_term .)
    IF              reduce using rule 99 (exp -> termino quad_term .)
    PRINT           reduce using rule 99 (exp -> termino quad_term .)
    WHILE           reduce using rule 99 (exp -> termino quad_term .)
    FROM            reduce using rule 99 (exp -> termino quad_term .)
    INPUT           reduce using rule 99 (exp -> termino quad_term .)
    RBRACE          reduce using rule 99 (exp -> termino quad_term .)
    RPAREN          reduce using rule 99 (exp -> termino quad_term .)
    COMA            reduce using rule 99 (exp -> termino quad_term .)
    SEMICOLON       reduce using rule 99 (exp -> termino quad_term .)
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153

    exp1                           shift and go to state 151

state 118

    (112) factorAux -> MINUS push_poper . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    RPAREN          shift and go to state 153

    var_cte                        shift and go to state 154

state 119

    (111) factorAux -> PLUS push_poper . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    RPAREN          reduce using rule 88 (escrituraAux -> llamadaAFuncion .)

    var_cte                        shift and go to state 155

state 120

    (105) termino -> factor quad_fact .
    (106) termino -> factor quad_fact . termino1
    (107) termino1 -> . TIMES push_poper termino
    (108) termino1 -> . DIVIDE push_poper termino

    PLUS            reduce using rule 105 (termino -> factor quad_fact .)
    MINUS           reduce using rule 105 (termino -> factor quad_fact .)
    LOWERTHAN       reduce using rule 105 (termino -> factor quad_fact .)
    MORETHAN        reduce using rule 105 (termino -> factor quad_fact .)
    DIFFERENT       reduce using rule 105 (termino -> factor quad_fact .)
    DOUBLEEQUAL     reduce using rule 105 (termino -> factor quad_fact .)
    LOWEREQUAL      reduce using rule 105 (termino -> factor quad_fact .)
    MOREEQUAL       reduce using rule 105 (termino -> factor quad_fact .)
    COMA            reduce using rule 105 (termino -> factor quad_fact .)
    RPAREN          reduce using rule 105 (termino -> factor quad_fact .)
    SEMICOLON       reduce using rule 105 (termino -> factor quad_fact .)
    ID              reduce using rule 105 (termino -> factor quad_fact .)
    IF              reduce using rule 105 (termino -> factor quad_fact .)
    PRINT           reduce using rule 105 (termino -> factor quad_fact .)
    WHILE           reduce using rule 105 (termino -> factor quad_fact .)
    FROM            reduce using rule 105 (termino -> factor quad_fact .)
    INPUT           reduce using rule 105 (termino -> factor quad_fact .)
    RBRACE          reduce using rule 105 (termino -> factor quad_fact .)
    TIMES           shift and go to state 158
    DIVIDE          shift and go to state 156

    termino1                       shift and go to state 157

state 121

    (119) var_cte -> CTE_F push_cte .

    TIMES           reduce using rule 119 (var_cte -> CTE_F push_cte .)
    DIVIDE          reduce using rule 119 (var_cte -> CTE_F push_cte .)
    PLUS            reduce using rule 119 (var_cte -> CTE_F push_cte .)
    MINUS           reduce using rule 119 (var_cte -> CTE_F push_cte .)
    RPAREN          reduce using rule 119 (var_cte -> CTE_F push_cte .)
    COMA            reduce using rule 119 (var_cte -> CTE_F push_cte .)
    SEMICOLON       reduce using rule 119 (var_cte -> CTE_F push_cte .)
    ID              reduce using rule 119 (var_cte -> CTE_F push_cte .)
    IF              reduce using rule 119 (var_cte -> CTE_F push_cte .)
    PRINT           reduce using rule 119 (var_cte -> CTE_F push_cte .)
    WHILE           reduce using rule 119 (var_cte -> CTE_F push_cte .)
    FROM            reduce using rule 119 (var_cte -> CTE_F push_cte .)
    INPUT           reduce using rule 119 (var_cte -> CTE_F push_cte .)
    RBRACE          reduce using rule 119 (var_cte -> CTE_F push_cte .)
    LOWERTHAN       reduce using rule 119 (var_cte -> CTE_F push_cte .)
    MORETHAN        reduce using rule 119 (var_cte -> CTE_F push_cte .)
    DIFFERENT       reduce using rule 119 (var_cte -> CTE_F push_cte .)
    DOUBLEEQUAL     reduce using rule 119 (var_cte -> CTE_F push_cte .)
    LOWEREQUAL      reduce using rule 119 (var_cte -> CTE_F push_cte .)
    MOREEQUAL       reduce using rule 119 (var_cte -> CTE_F push_cte .)

    var_cte                        shift and go to state 157

state 122

    (120) var_cte -> CTE_STRING push_cte .

    TIMES           reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    DIVIDE          reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    PLUS            reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    MINUS           reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    RPAREN          reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    COMA            reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    SEMICOLON       reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    ID              reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    IF              reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    PRINT           reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    WHILE           reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    FROM            reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    INPUT           reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    RBRACE          reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    LOWERTHAN       reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    MORETHAN        reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    DIFFERENT       reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    DOUBLEEQUAL     reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    LOWEREQUAL      reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    MOREEQUAL       reduce using rule 120 (var_cte -> CTE_STRING push_cte .)

    var_cte                        shift and go to state 158

state 123

    (118) var_cte -> CTE_I push_cte .

    TIMES           reduce using rule 118 (var_cte -> CTE_I push_cte .)
    DIVIDE          reduce using rule 118 (var_cte -> CTE_I push_cte .)
    PLUS            reduce using rule 118 (var_cte -> CTE_I push_cte .)
    MINUS           reduce using rule 118 (var_cte -> CTE_I push_cte .)
    RPAREN          reduce using rule 118 (var_cte -> CTE_I push_cte .)
    COMA            reduce using rule 118 (var_cte -> CTE_I push_cte .)
    SEMICOLON       reduce using rule 118 (var_cte -> CTE_I push_cte .)
    ID              reduce using rule 118 (var_cte -> CTE_I push_cte .)
    IF              reduce using rule 118 (var_cte -> CTE_I push_cte .)
    PRINT           reduce using rule 118 (var_cte -> CTE_I push_cte .)
    WHILE           reduce using rule 118 (var_cte -> CTE_I push_cte .)
    FROM            reduce using rule 118 (var_cte -> CTE_I push_cte .)
    INPUT           reduce using rule 118 (var_cte -> CTE_I push_cte .)
    RBRACE          reduce using rule 118 (var_cte -> CTE_I push_cte .)
    LOWERTHAN       reduce using rule 118 (var_cte -> CTE_I push_cte .)
    MORETHAN        reduce using rule 118 (var_cte -> CTE_I push_cte .)
    DIFFERENT       reduce using rule 118 (var_cte -> CTE_I push_cte .)
    DOUBLEEQUAL     reduce using rule 118 (var_cte -> CTE_I push_cte .)
    LOWEREQUAL      reduce using rule 118 (var_cte -> CTE_I push_cte .)
    MOREEQUAL       reduce using rule 118 (var_cte -> CTE_I push_cte .)

    termino1                       shift and go to state 160

state 124

    (109) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 159


state 125

    (117) var_cte -> ID push_id .

    TIMES           reduce using rule 117 (var_cte -> ID push_id .)
    DIVIDE          reduce using rule 117 (var_cte -> ID push_id .)
    PLUS            reduce using rule 117 (var_cte -> ID push_id .)
    MINUS           reduce using rule 117 (var_cte -> ID push_id .)
    RPAREN          reduce using rule 117 (var_cte -> ID push_id .)
    COMA            reduce using rule 117 (var_cte -> ID push_id .)
    SEMICOLON       reduce using rule 117 (var_cte -> ID push_id .)
    ID              reduce using rule 117 (var_cte -> ID push_id .)
    IF              reduce using rule 117 (var_cte -> ID push_id .)
    PRINT           reduce using rule 117 (var_cte -> ID push_id .)
    WHILE           reduce using rule 117 (var_cte -> ID push_id .)
    FROM            reduce using rule 117 (var_cte -> ID push_id .)
    INPUT           reduce using rule 117 (var_cte -> ID push_id .)
    RBRACE          reduce using rule 117 (var_cte -> ID push_id .)
    LOWERTHAN       reduce using rule 117 (var_cte -> ID push_id .)
    MORETHAN        reduce using rule 117 (var_cte -> ID push_id .)
    DIFFERENT       reduce using rule 117 (var_cte -> ID push_id .)
    DOUBLEEQUAL     reduce using rule 117 (var_cte -> ID push_id .)
    LOWEREQUAL      reduce using rule 117 (var_cte -> ID push_id .)
    MOREEQUAL       reduce using rule 117 (var_cte -> ID push_id .)


state 126

    (77) condicion -> IF LPAREN expresion RPAREN . cond bloque condFinal
    (78) condicion -> IF LPAREN expresion RPAREN . cond bloque ELSE condElse bloque condFinal
    (79) cond -> .

    LBRACE          reduce using rule 79 (cond -> .)

    cond                           shift and go to state 160

state 127

    (97) comp -> MOREEQUAL . push_poper
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)
    PLUS            reduce using rule 116 (push_poper -> .)
    MINUS           reduce using rule 116 (push_poper -> .)
    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 161

state 128

    (94) comp -> DIFFERENT . push_poper
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)
    PLUS            reduce using rule 116 (push_poper -> .)
    MINUS           reduce using rule 116 (push_poper -> .)
    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 162

state 129

    (95) comp -> DOUBLEEQUAL . push_poper
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)
    PLUS            reduce using rule 116 (push_poper -> .)
    MINUS           reduce using rule 116 (push_poper -> .)
    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 163

state 130

    (92) comp -> LOWERTHAN . push_poper
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)
    PLUS            reduce using rule 116 (push_poper -> .)
    MINUS           reduce using rule 116 (push_poper -> .)
    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 164

state 131

    (91) expresion -> exp comp . exp quad_comp
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    LPAREN          reduce using rule 115 (push_poper -> .)
    PLUS            reduce using rule 115 (push_poper -> .)
    MINUS           reduce using rule 115 (push_poper -> .)
    ID              reduce using rule 115 (push_poper -> .)
    CTE_I           reduce using rule 115 (push_poper -> .)
    CTE_F           reduce using rule 115 (push_poper -> .)
    CTE_STRING      reduce using rule 115 (push_poper -> .)

    factor                         shift and go to state 90
    termino                        shift and go to state 87
    exp                            shift and go to state 165
    factorAux                      shift and go to state 98
    var_cte                        shift and go to state 86

state 132

    (96) comp -> LOWEREQUAL . push_poper
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)
    PLUS            reduce using rule 116 (push_poper -> .)
    MINUS           reduce using rule 116 (push_poper -> .)
    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 166

state 133

    (93) comp -> MORETHAN . push_poper
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)
    PLUS            reduce using rule 116 (push_poper -> .)
    MINUS           reduce using rule 116 (push_poper -> .)
    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 167

state 134

    (90) expresion -> exp comp . exp quad_comp
    (98) exp -> . termino quad_term
    (99) exp -> . termino quad_term exp1
    (104) termino -> . factor quad_fact
    (105) termino -> . factor quad_fact termino1
    (108) factor -> . LPAREN expresion RPAREN
    (109) factor -> . factorAux
    (110) factorAux -> . PLUS push_poper var_cte
    (111) factorAux -> . MINUS push_poper var_cte
    (112) factorAux -> . var_cte
    (116) var_cte -> . ID push_id
    (117) var_cte -> . CTE_I push_cte
    (118) var_cte -> . CTE_F push_cte
    (119) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 96
    PLUS            shift and go to state 91
    MINUS           shift and go to state 90
    ID              shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 93
    CTE_STRING      shift and go to state 94

    factor                         shift and go to state 92
    termino                        shift and go to state 89
    exp                            shift and go to state 168
    factorAux                      shift and go to state 100
    var_cte                        shift and go to state 88

state 135

    (95) comp -> LOWEREQUAL . push_poper
    (115) push_poper -> .

    LPAREN          reduce using rule 115 (push_poper -> .)
    PLUS            reduce using rule 115 (push_poper -> .)
    MINUS           reduce using rule 115 (push_poper -> .)
    ID              reduce using rule 115 (push_poper -> .)
    CTE_I           reduce using rule 115 (push_poper -> .)
    CTE_F           reduce using rule 115 (push_poper -> .)
    CTE_STRING      reduce using rule 115 (push_poper -> .)

    push_poper                     shift and go to state 169

state 136

    (92) comp -> MORETHAN . push_poper
    (115) push_poper -> .

    LPAREN          reduce using rule 115 (push_poper -> .)
    PLUS            reduce using rule 115 (push_poper -> .)
    MINUS           reduce using rule 115 (push_poper -> .)
    ID              reduce using rule 115 (push_poper -> .)
    CTE_I           reduce using rule 115 (push_poper -> .)
    CTE_F           reduce using rule 115 (push_poper -> .)
    CTE_STRING      reduce using rule 115 (push_poper -> .)

    push_poper                     shift and go to state 170

state 137

    (15) varAux1 -> tipo varAux2 SEMICOLON .
    (16) varAux1 -> tipo varAux2 SEMICOLON . varAux1
    (15) varAux1 -> . tipo varAux2 SEMICOLON
    (16) varAux1 -> . tipo varAux2 SEMICOLON varAux1
    (23) tipo -> . INT
    (24) tipo -> . FLOAT
    (25) tipo -> . CHAR

    ID              reduce using rule 15 (varAux1 -> tipo varAux2 SEMICOLON .)
    IF              reduce using rule 15 (varAux1 -> tipo varAux2 SEMICOLON .)
    PRINT           reduce using rule 15 (varAux1 -> tipo varAux2 SEMICOLON .)
    WHILE           reduce using rule 15 (varAux1 -> tipo varAux2 SEMICOLON .)
    FROM            reduce using rule 15 (varAux1 -> tipo varAux2 SEMICOLON .)
    INPUT           reduce using rule 15 (varAux1 -> tipo varAux2 SEMICOLON .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAux1                        shift and go to state 168
    tipo                           shift and go to state 72

state 138

    (19) varAux2 -> ID LCORCH . CTE_I RCORCH
    (20) varAux2 -> ID LCORCH . CTE_I RCORCH COMA varAux2
    (21) varAux2 -> ID LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH
    (22) varAux2 -> ID LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAux2

    CTE_I           shift and go to state 169


state 136

    (18) varAux2 -> ID COMA . varAux2
    (17) varAux2 -> . ID
    (18) varAux2 -> . ID COMA varAux2
    (19) varAux2 -> . ID LCORCH CTE_I RCORCH
    (20) varAux2 -> . ID LCORCH CTE_I RCORCH COMA varAux2
    (21) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (22) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAux2

    ID              shift and go to state 102

    varAux2                        shift and go to state 170

state 137

    (83) lectura -> INPUT push_poper LPAREN ID . push_id RPAREN quad_print SEMICOLON
    (114) push_id -> .

    RPAREN          reduce using rule 114 (push_id -> .)

    push_id                        shift and go to state 171

state 138

    (63) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN . paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN . paramFuncion gosub RPAREN SEMICOLON
    (68) paramFuncion -> . ID push_id2
    (69) paramFuncion -> . ID push_id2 COMA paramFuncion
    (70) paramFuncion -> . expresion
    (71) paramFuncion -> . expresion COMA paramFuncion
    (72) paramFuncion -> . empty
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (45) empty -> .
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    ID              shift and go to state 174
    RPAREN          reduce using rule 45 (empty -> .)
    LPAREN          shift and go to state 94
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 91
    CTE_STRING      shift and go to state 92

    expresion                      shift and go to state 175
    paramFuncion                   shift and go to state 172
    empty                          shift and go to state 173
    exp                            shift and go to state 97
    factorAux                      shift and go to state 98
    factor                         shift and go to state 90
    var_cte                        shift and go to state 86
    termino                        shift and go to state 87

state 139

    (76) comparacion -> ID push_id DOUBLEEQUAL push_poper . expresion SEMICOLON
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 94
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88
    ID              shift and go to state 95
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 91
    CTE_STRING      shift and go to state 92

    expresion                      shift and go to state 176
    factor                         shift and go to state 90
    var_cte                        shift and go to state 86
    termino                        shift and go to state 87
    exp                            shift and go to state 97
    factorAux                      shift and go to state 98

state 140

    (74) asignacion -> ID push_id EQUAL push_poper . expresion create_asign SEMICOLON
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    RPAREN          reduce using rule 113 (push_id -> .)

    expresion                      shift and go to state 177
    var_cte                        shift and go to state 86
    termino                        shift and go to state 87
    exp                            shift and go to state 97
    factorAux                      shift and go to state 98
    factor                         shift and go to state 90

state 141

    (54) loopFromDo -> FROM LPAREN ID EQUAL . expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    ID              shift and go to state 176
    RPAREN          reduce using rule 44 (empty -> .)
    LPAREN          shift and go to state 96
    PLUS            shift and go to state 91
    MINUS           shift and go to state 90
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 93
    CTE_STRING      shift and go to state 94

    expresion                      shift and go to state 178
    factor                         shift and go to state 90
    var_cte                        shift and go to state 86
    termino                        shift and go to state 87
    exp                            shift and go to state 97
    factorAux                      shift and go to state 98

state 142

    (50) while -> WHILE while1 LPAREN expresion . RPAREN while2 LBRACE bloqueAux RBRACE while3

    RPAREN          shift and go to state 179

    expresion                      shift and go to state 179
    var_cte                        shift and go to state 88
    termino                        shift and go to state 89
    exp                            shift and go to state 99
    factorAux                      shift and go to state 100
    factor                         shift and go to state 92

state 143

    (34) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function .

    MAIN            reduce using rule 34 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function .)


state 144

    (33) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE . endProc
    (35) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE . endProc function
    (40) endProc -> .

    FUNCTION        reduce using rule 40 (endProc -> .)
    MAIN            reduce using rule 40 (endProc -> .)

    endProc                        shift and go to state 180

state 145

    (36) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc .
    (38) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc . function
    (32) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (33) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (34) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (35) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (36) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (37) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (38) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    MAIN            reduce using rule 36 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 181

state 146

    (37) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux . RBRACE endProc
    (39) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux . RBRACE endProc function

    RBRACE          shift and go to state 182

    function                       shift and go to state 183

state 147

    (42) param -> tipo ID paramAvarTable COMA param .

    RPAREN          reduce using rule 42 (param -> tipo ID paramAvarTable COMA param .)


state 148

    (86) escrituraAux -> CTE_STRING push_cte .
    (88) escrituraAux -> CTE_STRING push_cte . COMA escrituraAux
    (120) var_cte -> CTE_STRING push_cte .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 86 (escrituraAux -> CTE_STRING push_cte .)
    RPAREN          reduce using rule 86 (escrituraAux -> CTE_STRING push_cte .)
    COMA            shift and go to state 183
    TIMES           reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    DIVIDE          reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    PLUS            reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    MINUS           reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    LOWERTHAN       reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    MORETHAN        reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    DIFFERENT       reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    DOUBLEEQUAL     reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    LOWEREQUAL      reduce using rule 120 (var_cte -> CTE_STRING push_cte .)
    MOREEQUAL       reduce using rule 120 (var_cte -> CTE_STRING push_cte .)

  ! COMA            [ reduce using rule 120 (var_cte -> CTE_STRING push_cte .) ]
  ! RPAREN          [ reduce using rule 120 (var_cte -> CTE_STRING push_cte .) ]


state 149

    (87) escrituraAux -> expresion COMA . escrituraAux
    (85) escrituraAux -> . expresion
    (86) escrituraAux -> . CTE_STRING push_cte
    (87) escrituraAux -> . expresion COMA escrituraAux
    (88) escrituraAux -> . CTE_STRING push_cte COMA escrituraAux
    (89) escrituraAux -> . llamadaAFuncion
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (63) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    RETURN          shift and go to state 83
    RBRACE          reduce using rule 44 (empty -> .)

    expresion                      shift and go to state 113
    escrituraAux                   shift and go to state 184
    llamadaAFuncion                shift and go to state 116
    var_cte                        shift and go to state 86
    termino                        shift and go to state 87
    exp                            shift and go to state 97
    factorAux                      shift and go to state 98
    factor                         shift and go to state 90

state 150

    (82) escritura -> PRINT push_poper LPAREN escrituraAux RPAREN . quad_print SEMICOLON
    (84) quad_print -> .

    SEMICOLON       reduce using rule 84 (quad_print -> .)

    quad_print                     shift and go to state 185

state 151

    (100) exp -> termino quad_term exp1 .

    LOWERTHAN       reduce using rule 100 (exp -> termino quad_term exp1 .)
    MORETHAN        reduce using rule 100 (exp -> termino quad_term exp1 .)
    DIFFERENT       reduce using rule 100 (exp -> termino quad_term exp1 .)
    DOUBLEEQUAL     reduce using rule 100 (exp -> termino quad_term exp1 .)
    LOWEREQUAL      reduce using rule 100 (exp -> termino quad_term exp1 .)
    MOREEQUAL       reduce using rule 100 (exp -> termino quad_term exp1 .)
    ID              reduce using rule 100 (exp -> termino quad_term exp1 .)
    IF              reduce using rule 100 (exp -> termino quad_term exp1 .)
    PRINT           reduce using rule 100 (exp -> termino quad_term exp1 .)
    WHILE           reduce using rule 100 (exp -> termino quad_term exp1 .)
    FROM            reduce using rule 100 (exp -> termino quad_term exp1 .)
    INPUT           reduce using rule 100 (exp -> termino quad_term exp1 .)
    RBRACE          reduce using rule 100 (exp -> termino quad_term exp1 .)
    RPAREN          reduce using rule 100 (exp -> termino quad_term exp1 .)
    COMA            reduce using rule 100 (exp -> termino quad_term exp1 .)
    SEMICOLON       reduce using rule 100 (exp -> termino quad_term exp1 .)



state 152

    (101) exp1 -> PLUS . push_poper exp
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)
    PLUS            reduce using rule 116 (push_poper -> .)
    MINUS           reduce using rule 116 (push_poper -> .)
    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 186

state 153

    (102) exp1 -> MINUS . push_poper exp
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)
    PLUS            reduce using rule 116 (push_poper -> .)
    MINUS           reduce using rule 116 (push_poper -> .)
    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 187

state 154

    (112) factorAux -> MINUS push_poper var_cte .

    TIMES           reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    DIVIDE          reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    PLUS            reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    MINUS           reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    LOWERTHAN       reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    MORETHAN        reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    DIFFERENT       reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    DOUBLEEQUAL     reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    LOWEREQUAL      reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    MOREEQUAL       reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    COMA            reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    RPAREN          reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    SEMICOLON       reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    ID              reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    IF              reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    PRINT           reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    WHILE           reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    FROM            reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    INPUT           reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)
    RBRACE          reduce using rule 112 (factorAux -> MINUS push_poper var_cte .)


state 155

    (111) factorAux -> PLUS push_poper var_cte .

    TIMES           reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    DIVIDE          reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    PLUS            reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    MINUS           reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    LOWERTHAN       reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    MORETHAN        reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    DIFFERENT       reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    DOUBLEEQUAL     reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    LOWEREQUAL      reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    MOREEQUAL       reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    COMA            reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    RPAREN          reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    SEMICOLON       reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    ID              reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    IF              reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    PRINT           reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    WHILE           reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    FROM            reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    INPUT           reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)
    RBRACE          reduce using rule 111 (factorAux -> PLUS push_poper var_cte .)


state 156

    (108) termino1 -> DIVIDE . push_poper termino
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)
    PLUS            reduce using rule 116 (push_poper -> .)
    MINUS           reduce using rule 116 (push_poper -> .)
    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 188

state 157

    (106) termino -> factor quad_fact termino1 .

    PLUS            reduce using rule 106 (termino -> factor quad_fact termino1 .)
    MINUS           reduce using rule 106 (termino -> factor quad_fact termino1 .)
    LOWERTHAN       reduce using rule 106 (termino -> factor quad_fact termino1 .)
    MORETHAN        reduce using rule 106 (termino -> factor quad_fact termino1 .)
    DIFFERENT       reduce using rule 106 (termino -> factor quad_fact termino1 .)
    DOUBLEEQUAL     reduce using rule 106 (termino -> factor quad_fact termino1 .)
    LOWEREQUAL      reduce using rule 106 (termino -> factor quad_fact termino1 .)
    MOREEQUAL       reduce using rule 106 (termino -> factor quad_fact termino1 .)
    COMA            reduce using rule 106 (termino -> factor quad_fact termino1 .)
    RPAREN          reduce using rule 106 (termino -> factor quad_fact termino1 .)
    SEMICOLON       reduce using rule 106 (termino -> factor quad_fact termino1 .)
    ID              reduce using rule 106 (termino -> factor quad_fact termino1 .)
    IF              reduce using rule 106 (termino -> factor quad_fact termino1 .)
    PRINT           reduce using rule 106 (termino -> factor quad_fact termino1 .)
    WHILE           reduce using rule 106 (termino -> factor quad_fact termino1 .)
    FROM            reduce using rule 106 (termino -> factor quad_fact termino1 .)
    INPUT           reduce using rule 106 (termino -> factor quad_fact termino1 .)
    RBRACE          reduce using rule 106 (termino -> factor quad_fact termino1 .)


state 158

    (107) termino1 -> TIMES . push_poper termino
    (116) push_poper -> .

    LPAREN          reduce using rule 116 (push_poper -> .)
    PLUS            reduce using rule 116 (push_poper -> .)
    MINUS           reduce using rule 116 (push_poper -> .)
    ID              reduce using rule 116 (push_poper -> .)
    CTE_I           reduce using rule 116 (push_poper -> .)
    CTE_F           reduce using rule 116 (push_poper -> .)
    CTE_STRING      reduce using rule 116 (push_poper -> .)

    push_poper                     shift and go to state 189

state 159

    (109) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    LOWERTHAN       reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    MORETHAN        reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    DIFFERENT       reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    DOUBLEEQUAL     reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    LOWEREQUAL      reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    MOREEQUAL       reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    COMA            reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    FROM            reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    INPUT           reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 109 (factor -> LPAREN expresion RPAREN .)


state 160

    (77) condicion -> IF LPAREN expresion RPAREN cond . bloque condFinal
    (78) condicion -> IF LPAREN expresion RPAREN cond . bloque ELSE condElse bloque condFinal
    (30) bloque -> . LBRACE RBRACE
    (31) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 190

    bloque                         shift and go to state 191

state 161

    (97) comp -> MOREEQUAL push_poper .

    LPAREN          reduce using rule 97 (comp -> MOREEQUAL push_poper .)
    PLUS            reduce using rule 97 (comp -> MOREEQUAL push_poper .)
    MINUS           reduce using rule 97 (comp -> MOREEQUAL push_poper .)
    ID              reduce using rule 97 (comp -> MOREEQUAL push_poper .)
    CTE_I           reduce using rule 97 (comp -> MOREEQUAL push_poper .)
    CTE_F           reduce using rule 97 (comp -> MOREEQUAL push_poper .)
    CTE_STRING      reduce using rule 97 (comp -> MOREEQUAL push_poper .)

    push_poper                     shift and go to state 193

state 162

    (94) comp -> DIFFERENT push_poper .

    LPAREN          reduce using rule 94 (comp -> DIFFERENT push_poper .)
    PLUS            reduce using rule 94 (comp -> DIFFERENT push_poper .)
    MINUS           reduce using rule 94 (comp -> DIFFERENT push_poper .)
    ID              reduce using rule 94 (comp -> DIFFERENT push_poper .)
    CTE_I           reduce using rule 94 (comp -> DIFFERENT push_poper .)
    CTE_F           reduce using rule 94 (comp -> DIFFERENT push_poper .)
    CTE_STRING      reduce using rule 94 (comp -> DIFFERENT push_poper .)


state 163

    (95) comp -> DOUBLEEQUAL push_poper .

    LPAREN          reduce using rule 95 (comp -> DOUBLEEQUAL push_poper .)
    PLUS            reduce using rule 95 (comp -> DOUBLEEQUAL push_poper .)
    MINUS           reduce using rule 95 (comp -> DOUBLEEQUAL push_poper .)
    ID              reduce using rule 95 (comp -> DOUBLEEQUAL push_poper .)
    CTE_I           reduce using rule 95 (comp -> DOUBLEEQUAL push_poper .)
    CTE_F           reduce using rule 95 (comp -> DOUBLEEQUAL push_poper .)
    CTE_STRING      reduce using rule 95 (comp -> DOUBLEEQUAL push_poper .)

    bloque                         shift and go to state 195

state 164

    (92) comp -> LOWERTHAN push_poper .

    LPAREN          reduce using rule 92 (comp -> LOWERTHAN push_poper .)
    PLUS            reduce using rule 92 (comp -> LOWERTHAN push_poper .)
    MINUS           reduce using rule 92 (comp -> LOWERTHAN push_poper .)
    ID              reduce using rule 92 (comp -> LOWERTHAN push_poper .)
    CTE_I           reduce using rule 92 (comp -> LOWERTHAN push_poper .)
    CTE_F           reduce using rule 92 (comp -> LOWERTHAN push_poper .)
    CTE_STRING      reduce using rule 92 (comp -> LOWERTHAN push_poper .)


state 165

    (91) expresion -> exp comp exp . quad_comp
    (98) quad_comp -> .

    RPAREN          reduce using rule 98 (quad_comp -> .)
    COMA            reduce using rule 98 (quad_comp -> .)
    SEMICOLON       reduce using rule 98 (quad_comp -> .)
    ID              reduce using rule 98 (quad_comp -> .)
    IF              reduce using rule 98 (quad_comp -> .)
    PRINT           reduce using rule 98 (quad_comp -> .)
    WHILE           reduce using rule 98 (quad_comp -> .)
    FROM            reduce using rule 98 (quad_comp -> .)
    INPUT           reduce using rule 98 (quad_comp -> .)
    RBRACE          reduce using rule 98 (quad_comp -> .)

    quad_comp                      shift and go to state 192

state 166

    (96) comp -> LOWEREQUAL push_poper .

    LPAREN          reduce using rule 96 (comp -> LOWEREQUAL push_poper .)
    PLUS            reduce using rule 96 (comp -> LOWEREQUAL push_poper .)
    MINUS           reduce using rule 96 (comp -> LOWEREQUAL push_poper .)
    ID              reduce using rule 96 (comp -> LOWEREQUAL push_poper .)
    CTE_I           reduce using rule 96 (comp -> LOWEREQUAL push_poper .)
    CTE_F           reduce using rule 96 (comp -> LOWEREQUAL push_poper .)
    CTE_STRING      reduce using rule 96 (comp -> LOWEREQUAL push_poper .)


state 167

    (93) comp -> MORETHAN push_poper .

    LPAREN          reduce using rule 93 (comp -> MORETHAN push_poper .)
    PLUS            reduce using rule 93 (comp -> MORETHAN push_poper .)
    MINUS           reduce using rule 93 (comp -> MORETHAN push_poper .)
    ID              reduce using rule 93 (comp -> MORETHAN push_poper .)
    CTE_I           reduce using rule 93 (comp -> MORETHAN push_poper .)
    CTE_F           reduce using rule 93 (comp -> MORETHAN push_poper .)
    CTE_STRING      reduce using rule 93 (comp -> MORETHAN push_poper .)


state 168

    (16) varAux1 -> tipo varAux2 SEMICOLON varAux1 .

    LPAREN          reduce using rule 91 (comp -> LOWERTHAN push_poper .)
    PLUS            reduce using rule 91 (comp -> LOWERTHAN push_poper .)
    MINUS           reduce using rule 91 (comp -> LOWERTHAN push_poper .)
    ID              reduce using rule 91 (comp -> LOWERTHAN push_poper .)
    CTE_I           reduce using rule 91 (comp -> LOWERTHAN push_poper .)
    CTE_F           reduce using rule 91 (comp -> LOWERTHAN push_poper .)
    CTE_STRING      reduce using rule 91 (comp -> LOWERTHAN push_poper .)


state 169

    (19) varAux2 -> ID LCORCH CTE_I . RCORCH
    (20) varAux2 -> ID LCORCH CTE_I . RCORCH COMA varAux2
    (21) varAux2 -> ID LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH
    (22) varAux2 -> ID LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH COMA varAux2

    RCORCH          shift and go to state 193


state 170

    (18) varAux2 -> ID COMA varAux2 .

    SEMICOLON       reduce using rule 18 (varAux2 -> ID COMA varAux2 .)


state 171

    (83) lectura -> INPUT push_poper LPAREN ID push_id . RPAREN quad_print SEMICOLON

    RPAREN          shift and go to state 194


state 172

    (63) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion . gosub RPAREN expresion
    (64) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion . gosub RPAREN SEMICOLON
    (66) gosub -> .

    RPAREN          reduce using rule 66 (gosub -> .)

    gosub                          shift and go to state 195

state 173

    (72) paramFuncion -> empty .

    RPAREN          reduce using rule 72 (paramFuncion -> empty .)


state 174

    (68) paramFuncion -> ID . push_id2
    (69) paramFuncion -> ID . push_id2 COMA paramFuncion
    (117) var_cte -> ID . push_id
    (73) push_id2 -> .
    (114) push_id -> .

  ! reduce/reduce conflict for COMA resolved using rule 73 (push_id2 -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 73 (push_id2 -> .)
    COMA            reduce using rule 73 (push_id2 -> .)
    RPAREN          reduce using rule 73 (push_id2 -> .)
    TIMES           reduce using rule 114 (push_id -> .)
    DIVIDE          reduce using rule 114 (push_id -> .)
    PLUS            reduce using rule 114 (push_id -> .)
    MINUS           reduce using rule 114 (push_id -> .)
    LOWERTHAN       reduce using rule 114 (push_id -> .)
    MORETHAN        reduce using rule 114 (push_id -> .)
    DIFFERENT       reduce using rule 114 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 114 (push_id -> .)
    LOWEREQUAL      reduce using rule 114 (push_id -> .)
    MOREEQUAL       reduce using rule 114 (push_id -> .)

  ! COMA            [ reduce using rule 114 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 114 (push_id -> .) ]

    push_id                        shift and go to state 125
    push_id2                       shift and go to state 196

state 175

    (70) paramFuncion -> expresion .
    (71) paramFuncion -> expresion . COMA paramFuncion

    RPAREN          reduce using rule 70 (paramFuncion -> expresion .)
    COMA            shift and go to state 197


state 176

    (76) comparacion -> ID push_id DOUBLEEQUAL push_poper expresion . SEMICOLON

    SEMICOLON       shift and go to state 198

  ! COMA            [ reduce using rule 113 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 113 (push_id -> .) ]

    push_id                        shift and go to state 128
    push_id2                       shift and go to state 199

state 177

    (74) asignacion -> ID push_id EQUAL push_poper expresion . create_asign SEMICOLON
    (75) create_asign -> .

    SEMICOLON       reduce using rule 75 (create_asign -> .)

    create_asign                   shift and go to state 199

state 178

    (54) loopFromDo -> FROM LPAREN ID EQUAL expresion . RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    RPAREN          shift and go to state 200


state 179

    (50) while -> WHILE while1 LPAREN expresion RPAREN . while2 LBRACE bloqueAux RBRACE while3
    (52) while2 -> .

    LBRACE          reduce using rule 52 (while2 -> .)

    while2                         shift and go to state 201

state 180

    (33) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc .
    (35) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc . function
    (32) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (33) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (34) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (35) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (36) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (37) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (38) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    MAIN            reduce using rule 33 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 202

state 181

    (38) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function .

    MAIN            reduce using rule 38 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function .)


state 182

    (37) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE . endProc
    (39) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE . endProc function
    (40) endProc -> .

    FUNCTION        reduce using rule 40 (endProc -> .)
    MAIN            reduce using rule 40 (endProc -> .)

    endProc                        shift and go to state 203

state 183

    (88) escrituraAux -> CTE_STRING push_cte COMA . escrituraAux
    (85) escrituraAux -> . expresion
    (86) escrituraAux -> . CTE_STRING push_cte
    (87) escrituraAux -> . expresion COMA escrituraAux
    (88) escrituraAux -> . CTE_STRING push_cte COMA escrituraAux
    (89) escrituraAux -> . llamadaAFuncion
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (63) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    CTE_STRING      shift and go to state 112
    ID              shift and go to state 114
    LPAREN          shift and go to state 94
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 91

    escrituraAux                   shift and go to state 204
    expresion                      shift and go to state 113
    llamadaAFuncion                shift and go to state 116
    var_cte                        shift and go to state 86
    termino                        shift and go to state 87
    exp                            shift and go to state 97
    factorAux                      shift and go to state 98
    factor                         shift and go to state 90

state 184

    (87) escrituraAux -> expresion COMA escrituraAux .

    RPAREN          reduce using rule 87 (escrituraAux -> expresion COMA escrituraAux .)

    endProc                        shift and go to state 205

state 185

    (82) escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print . SEMICOLON

    SEMICOLON       shift and go to state 205


state 186

    (101) exp1 -> PLUS push_poper . exp
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    RBRACE          reduce using rule 36 (functionReturn -> RETURN exp creaCuadReturn SEMICOLON .)

    termino                        shift and go to state 87
    exp                            shift and go to state 206
    factor                         shift and go to state 90
    factorAux                      shift and go to state 98
    var_cte                        shift and go to state 86

state 187

    (102) exp1 -> MINUS push_poper . exp
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    RBRACE          shift and go to state 206

    termino                        shift and go to state 87
    exp                            shift and go to state 207
    factor                         shift and go to state 90
    factorAux                      shift and go to state 98
    var_cte                        shift and go to state 86

state 188

    (108) termino1 -> DIVIDE push_poper . termino
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    MAIN            reduce using rule 32 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE functionReturn RBRACE endProc .)
    FUNCTION        shift and go to state 5

    termino                        shift and go to state 208
    factor                         shift and go to state 90
    factorAux                      shift and go to state 98
    var_cte                        shift and go to state 86

state 189

    (107) termino1 -> TIMES push_poper . termino
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    CTE_STRING      shift and go to state 115
    ID              shift and go to state 117
    LPAREN          shift and go to state 96
    PLUS            shift and go to state 91
    MINUS           shift and go to state 90
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 93

    termino                        shift and go to state 209
    factor                         shift and go to state 90
    factorAux                      shift and go to state 98
    var_cte                        shift and go to state 86

state 190

    (30) bloque -> LBRACE . RBRACE
    (31) bloque -> LBRACE . bloqueAux RBRACE
    (48) bloqueAux -> . estatuto
    (49) bloqueAux -> . estatuto bloqueAux
    (55) estatuto -> . asignacion
    (56) estatuto -> . condicion
    (57) estatuto -> . escritura
    (58) estatuto -> . while
    (59) estatuto -> . loopFromDo
    (60) estatuto -> . comparacion
    (61) estatuto -> . llamadaAFuncion
    (62) estatuto -> . lectura
    (74) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (78) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (82) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (50) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (54) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (76) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (63) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (83) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    RBRACE          shift and go to state 210
    ID              shift and go to state 53
    IF              shift and go to state 48
    PRINT           shift and go to state 46
    WHILE           shift and go to state 58
    FROM            shift and go to state 56
    INPUT           shift and go to state 52

    estatuto                       shift and go to state 47
    condicion                      shift and go to state 50
    lectura                        shift and go to state 49
    loopFromDo                     shift and go to state 54
    llamadaAFuncion                shift and go to state 55
    asignacion                     shift and go to state 57
    bloqueAux                      shift and go to state 211
    while                          shift and go to state 60
    comparacion                    shift and go to state 61
    escritura                      shift and go to state 62

state 191

    (77) condicion -> IF LPAREN expresion RPAREN cond bloque . condFinal
    (78) condicion -> IF LPAREN expresion RPAREN cond bloque . ELSE condElse bloque condFinal
    (81) condFinal -> .

    ELSE            shift and go to state 213
    ID              reduce using rule 81 (condFinal -> .)
    IF              reduce using rule 81 (condFinal -> .)
    PRINT           reduce using rule 81 (condFinal -> .)
    WHILE           reduce using rule 81 (condFinal -> .)
    FROM            reduce using rule 81 (condFinal -> .)
    INPUT           reduce using rule 81 (condFinal -> .)
    RBRACE          reduce using rule 81 (condFinal -> .)

    condFinal                      shift and go to state 212

state 192

    (91) expresion -> exp comp exp quad_comp .

    COMA            reduce using rule 91 (expresion -> exp comp exp quad_comp .)
    RPAREN          reduce using rule 91 (expresion -> exp comp exp quad_comp .)
    SEMICOLON       reduce using rule 91 (expresion -> exp comp exp quad_comp .)
    ID              reduce using rule 91 (expresion -> exp comp exp quad_comp .)
    IF              reduce using rule 91 (expresion -> exp comp exp quad_comp .)
    PRINT           reduce using rule 91 (expresion -> exp comp exp quad_comp .)
    WHILE           reduce using rule 91 (expresion -> exp comp exp quad_comp .)
    FROM            reduce using rule 91 (expresion -> exp comp exp quad_comp .)
    INPUT           reduce using rule 91 (expresion -> exp comp exp quad_comp .)
    RBRACE          reduce using rule 91 (expresion -> exp comp exp quad_comp .)

    termino                        shift and go to state 89
    exp                            shift and go to state 210
    factor                         shift and go to state 92
    factorAux                      shift and go to state 100
    var_cte                        shift and go to state 88

state 193

    (19) varAux2 -> ID LCORCH CTE_I RCORCH .
    (20) varAux2 -> ID LCORCH CTE_I RCORCH . COMA varAux2
    (21) varAux2 -> ID LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH
    (22) varAux2 -> ID LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH COMA varAux2

    SEMICOLON       reduce using rule 19 (varAux2 -> ID LCORCH CTE_I RCORCH .)
    COMA            shift and go to state 215
    LCORCH          shift and go to state 214


state 194

    (83) lectura -> INPUT push_poper LPAREN ID push_id RPAREN . quad_print SEMICOLON
    (84) quad_print -> .

    SEMICOLON       reduce using rule 84 (quad_print -> .)

    quad_print                     shift and go to state 216

state 195

    (63) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub . RPAREN expresion
    (64) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub . RPAREN SEMICOLON

    RPAREN          shift and go to state 217

    termino                        shift and go to state 213
    factor                         shift and go to state 92
    factorAux                      shift and go to state 100
    var_cte                        shift and go to state 88

state 196

    (68) paramFuncion -> ID push_id2 .
    (69) paramFuncion -> ID push_id2 . COMA paramFuncion

    RPAREN          reduce using rule 68 (paramFuncion -> ID push_id2 .)
    COMA            shift and go to state 218


state 197

    (71) paramFuncion -> expresion COMA . paramFuncion
    (68) paramFuncion -> . ID push_id2
    (69) paramFuncion -> . ID push_id2 COMA paramFuncion
    (70) paramFuncion -> . expresion
    (71) paramFuncion -> . expresion COMA paramFuncion
    (72) paramFuncion -> . empty
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (45) empty -> .
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    ID              shift and go to state 174
    RPAREN          reduce using rule 45 (empty -> .)
    LPAREN          shift and go to state 94
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 91
    CTE_STRING      shift and go to state 92

    expresion                      shift and go to state 175
    paramFuncion                   shift and go to state 219
    termino                        shift and go to state 87
    exp                            shift and go to state 97
    factorAux                      shift and go to state 98
    factor                         shift and go to state 90
    var_cte                        shift and go to state 86
    empty                          shift and go to state 173

state 198

    (76) comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .

    ID              reduce using rule 76 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    IF              reduce using rule 76 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    PRINT           reduce using rule 76 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    WHILE           reduce using rule 76 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    FROM            reduce using rule 76 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    INPUT           reduce using rule 76 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    RBRACE          reduce using rule 76 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)


state 199

    (74) asignacion -> ID push_id EQUAL push_poper expresion create_asign . SEMICOLON

    SEMICOLON       shift and go to state 220


state 200

    (54) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN . TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    TO              shift and go to state 221


state 201

    (50) while -> WHILE while1 LPAREN expresion RPAREN while2 . LBRACE bloqueAux RBRACE while3

    LBRACE          shift and go to state 222


state 202

    (35) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function .

    MAIN            reduce using rule 35 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function .)


state 203

    (37) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc .
    (39) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc . function
    (32) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (33) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (34) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (35) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (36) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (37) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (38) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    MAIN            reduce using rule 37 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 223

state 204

    (88) escrituraAux -> CTE_STRING push_cte COMA escrituraAux .

    RPAREN          reduce using rule 88 (escrituraAux -> CTE_STRING push_cte COMA escrituraAux .)


state 205

    (82) escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .

    ID              reduce using rule 82 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    IF              reduce using rule 82 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    PRINT           reduce using rule 82 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    WHILE           reduce using rule 82 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    FROM            reduce using rule 82 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    INPUT           reduce using rule 82 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    RBRACE          reduce using rule 82 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)

    function                       shift and go to state 225

state 206

    (101) exp1 -> PLUS push_poper exp .

    LOWERTHAN       reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    MORETHAN        reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    DIFFERENT       reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    DOUBLEEQUAL     reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    LOWEREQUAL      reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    MOREEQUAL       reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    RPAREN          reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    COMA            reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    SEMICOLON       reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    ID              reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    IF              reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    PRINT           reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    WHILE           reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    FROM            reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    INPUT           reduce using rule 101 (exp1 -> PLUS push_poper exp .)
    RBRACE          reduce using rule 101 (exp1 -> PLUS push_poper exp .)

    endProc                        shift and go to state 226

state 207

    (102) exp1 -> MINUS push_poper exp .

    LOWERTHAN       reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    MORETHAN        reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    DIFFERENT       reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    DOUBLEEQUAL     reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    LOWEREQUAL      reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    MOREEQUAL       reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    RPAREN          reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    COMA            reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    SEMICOLON       reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    ID              reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    IF              reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    PRINT           reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    WHILE           reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    FROM            reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    INPUT           reduce using rule 102 (exp1 -> MINUS push_poper exp .)
    RBRACE          reduce using rule 102 (exp1 -> MINUS push_poper exp .)


state 208

    (108) termino1 -> DIVIDE push_poper termino .

    PLUS            reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    MINUS           reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    LOWERTHAN       reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    MORETHAN        reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    DIFFERENT       reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    DOUBLEEQUAL     reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    LOWEREQUAL      reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    MOREEQUAL       reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    RPAREN          reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    COMA            reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    SEMICOLON       reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    ID              reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    IF              reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    PRINT           reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    WHILE           reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    FROM            reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    INPUT           reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)
    RBRACE          reduce using rule 108 (termino1 -> DIVIDE push_poper termino .)


state 209

    (107) termino1 -> TIMES push_poper termino .

    PLUS            reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    MINUS           reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    LOWERTHAN       reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    MORETHAN        reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    DIFFERENT       reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    DOUBLEEQUAL     reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    LOWEREQUAL      reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    MOREEQUAL       reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    RPAREN          reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    COMA            reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    SEMICOLON       reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    ID              reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    IF              reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    PRINT           reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    WHILE           reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    FROM            reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    INPUT           reduce using rule 107 (termino1 -> TIMES push_poper termino .)
    RBRACE          reduce using rule 107 (termino1 -> TIMES push_poper termino .)


state 210

    (30) bloque -> LBRACE RBRACE .

    ELSE            reduce using rule 30 (bloque -> LBRACE RBRACE .)
    ID              reduce using rule 30 (bloque -> LBRACE RBRACE .)
    IF              reduce using rule 30 (bloque -> LBRACE RBRACE .)
    PRINT           reduce using rule 30 (bloque -> LBRACE RBRACE .)
    WHILE           reduce using rule 30 (bloque -> LBRACE RBRACE .)
    FROM            reduce using rule 30 (bloque -> LBRACE RBRACE .)
    INPUT           reduce using rule 30 (bloque -> LBRACE RBRACE .)
    RBRACE          reduce using rule 30 (bloque -> LBRACE RBRACE .)


state 211

    (31) bloque -> LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 224


state 212

    (77) condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .

    ID              reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    IF              reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    PRINT           reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    WHILE           reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    FROM            reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    INPUT           reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    RBRACE          reduce using rule 77 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)


state 213

    (78) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE . condElse bloque condFinal
    (80) condElse -> .

    LBRACE          reduce using rule 80 (condElse -> .)

    condElse                       shift and go to state 225

state 214

    (21) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH
    (22) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH COMA varAux2

    CTE_I           shift and go to state 226


state 215

    (20) varAux2 -> ID LCORCH CTE_I RCORCH COMA . varAux2
    (17) varAux2 -> . ID
    (18) varAux2 -> . ID COMA varAux2
    (19) varAux2 -> . ID LCORCH CTE_I RCORCH
    (20) varAux2 -> . ID LCORCH CTE_I RCORCH COMA varAux2
    (21) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (22) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAux2

    ID              shift and go to state 100

    varAux2                        shift and go to state 227

state 216

    (83) lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print . SEMICOLON

    SEMICOLON       shift and go to state 228


state 217

    (63) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN . expresion
    (64) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN . SEMICOLON
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    SEMICOLON       shift and go to state 229
    LPAREN          shift and go to state 94
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88
    ID              shift and go to state 95
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 91
    CTE_STRING      shift and go to state 92

    expresion                      shift and go to state 230
    termino                        shift and go to state 87
    exp                            shift and go to state 97
    factorAux                      shift and go to state 98
    factor                         shift and go to state 90
    var_cte                        shift and go to state 86

state 218

    (69) paramFuncion -> ID push_id2 COMA . paramFuncion
    (68) paramFuncion -> . ID push_id2
    (69) paramFuncion -> . ID push_id2 COMA paramFuncion
    (70) paramFuncion -> . expresion
    (71) paramFuncion -> . expresion COMA paramFuncion
    (72) paramFuncion -> . empty
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (45) empty -> .
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    ID              shift and go to state 174
    RPAREN          reduce using rule 45 (empty -> .)
    LPAREN          shift and go to state 94
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 91
    CTE_STRING      shift and go to state 92

    expresion                      shift and go to state 175
    paramFuncion                   shift and go to state 231
    termino                        shift and go to state 87
    exp                            shift and go to state 97
    factorAux                      shift and go to state 98
    factor                         shift and go to state 90
    var_cte                        shift and go to state 86
    empty                          shift and go to state 173

state 219

    (71) paramFuncion -> expresion COMA paramFuncion .

    RPAREN          reduce using rule 71 (paramFuncion -> expresion COMA paramFuncion .)


state 220

    (74) asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .

    ID              reduce using rule 74 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    IF              reduce using rule 74 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    PRINT           reduce using rule 74 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    WHILE           reduce using rule 74 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    FROM            reduce using rule 74 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    INPUT           reduce using rule 74 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    RBRACE          reduce using rule 74 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)


state 221

    (54) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO . LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    LPAREN          shift and go to state 232


state 222

    (50) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE . bloqueAux RBRACE while3
    (48) bloqueAux -> . estatuto
    (49) bloqueAux -> . estatuto bloqueAux
    (55) estatuto -> . asignacion
    (56) estatuto -> . condicion
    (57) estatuto -> . escritura
    (58) estatuto -> . while
    (59) estatuto -> . loopFromDo
    (60) estatuto -> . comparacion
    (61) estatuto -> . llamadaAFuncion
    (62) estatuto -> . lectura
    (74) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (78) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (82) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (50) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (54) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (76) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (63) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (83) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    LBRACE          reduce using rule 79 (condElse -> .)

    condElse                       shift and go to state 228

state 218

    (82) lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print . SEMICOLON

    SEMICOLON       shift and go to state 229


state 219

    (62) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN . expresion
    (63) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN . SEMICOLON
    (89) expresion -> . exp
    (90) expresion -> . exp comp exp quad_comp
    (98) exp -> . termino quad_term
    (99) exp -> . termino quad_term exp1
    (104) termino -> . factor quad_fact
    (105) termino -> . factor quad_fact termino1
    (108) factor -> . LPAREN expresion RPAREN
    (109) factor -> . factorAux
    (110) factorAux -> . PLUS push_poper var_cte
    (111) factorAux -> . MINUS push_poper var_cte
    (112) factorAux -> . var_cte
    (116) var_cte -> . ID push_id
    (117) var_cte -> . CTE_I push_cte
    (118) var_cte -> . CTE_F push_cte
    (119) var_cte -> . CTE_STRING push_cte

    SEMICOLON       shift and go to state 230
    LPAREN          shift and go to state 96
    PLUS            shift and go to state 91
    MINUS           shift and go to state 90
    ID              shift and go to state 97
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 93
    CTE_STRING      shift and go to state 94

    expresion                      shift and go to state 231
    termino                        shift and go to state 89
    exp                            shift and go to state 99
    factorAux                      shift and go to state 100
    factor                         shift and go to state 92
    var_cte                        shift and go to state 88

state 220

    (68) paramFuncion -> ID push_id2 COMA . paramFuncion
    (67) paramFuncion -> . ID push_id2
    (68) paramFuncion -> . ID push_id2 COMA paramFuncion
    (69) paramFuncion -> . expresion
    (70) paramFuncion -> . expresion COMA paramFuncion
    (71) paramFuncion -> . empty
    (89) expresion -> . exp
    (90) expresion -> . exp comp exp quad_comp
    (44) empty -> .
    (98) exp -> . termino quad_term
    (99) exp -> . termino quad_term exp1
    (104) termino -> . factor quad_fact
    (105) termino -> . factor quad_fact termino1
    (108) factor -> . LPAREN expresion RPAREN
    (109) factor -> . factorAux
    (110) factorAux -> . PLUS push_poper var_cte
    (111) factorAux -> . MINUS push_poper var_cte
    (112) factorAux -> . var_cte
    (116) var_cte -> . ID push_id
    (117) var_cte -> . CTE_I push_cte
    (118) var_cte -> . CTE_F push_cte
    (119) var_cte -> . CTE_STRING push_cte

    ID              shift and go to state 176
    RPAREN          reduce using rule 44 (empty -> .)
    LPAREN          shift and go to state 96
    PLUS            shift and go to state 91
    MINUS           shift and go to state 90
    CTE_I           shift and go to state 95
    CTE_F           shift and go to state 93
    CTE_STRING      shift and go to state 94

    expresion                      shift and go to state 177
    paramFuncion                   shift and go to state 232
    termino                        shift and go to state 89
    exp                            shift and go to state 99
    factorAux                      shift and go to state 100
    factor                         shift and go to state 92
    var_cte                        shift and go to state 88
    empty                          shift and go to state 175

state 221

    (70) paramFuncion -> expresion COMA paramFuncion .

    RPAREN          reduce using rule 70 (paramFuncion -> expresion COMA paramFuncion .)


state 222

    (73) asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .

    ID              reduce using rule 73 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    IF              reduce using rule 73 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    PRINT           reduce using rule 73 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    WHILE           reduce using rule 73 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    FROM            reduce using rule 73 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    INPUT           reduce using rule 73 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    RETURN          reduce using rule 73 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    RBRACE          reduce using rule 73 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)


state 223

    (53) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO . LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    LPAREN          shift and go to state 233


state 224

    (49) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE . bloqueAux RBRACE while3
    (47) bloqueAux -> . estatuto
    (48) bloqueAux -> . estatuto bloqueAux
    (54) estatuto -> . asignacion
    (55) estatuto -> . condicion
    (56) estatuto -> . escritura
    (57) estatuto -> . while
    (58) estatuto -> . loopFromDo
    (59) estatuto -> . comparacion
    (60) estatuto -> . llamadaAFuncion
    (61) estatuto -> . lectura
    (73) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (76) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (77) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (81) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (49) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (53) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (75) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (62) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (63) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (82) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 53
    IF              shift and go to state 48
    PRINT           shift and go to state 46
    WHILE           shift and go to state 58
    FROM            shift and go to state 56
    INPUT           shift and go to state 52

    estatuto                       shift and go to state 47
    condicion                      shift and go to state 50
    lectura                        shift and go to state 49
    loopFromDo                     shift and go to state 54
    llamadaAFuncion                shift and go to state 55
    asignacion                     shift and go to state 57
    bloqueAux                      shift and go to state 233
    while                          shift and go to state 60
    comparacion                    shift and go to state 61
    escritura                      shift and go to state 62

state 223

    (39) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function .

    MAIN            reduce using rule 39 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function .)


state 224

    (31) bloque -> LBRACE bloqueAux RBRACE .

    ELSE            reduce using rule 31 (bloque -> LBRACE bloqueAux RBRACE .)
    ID              reduce using rule 31 (bloque -> LBRACE bloqueAux RBRACE .)
    IF              reduce using rule 31 (bloque -> LBRACE bloqueAux RBRACE .)
    PRINT           reduce using rule 31 (bloque -> LBRACE bloqueAux RBRACE .)
    WHILE           reduce using rule 31 (bloque -> LBRACE bloqueAux RBRACE .)
    FROM            reduce using rule 31 (bloque -> LBRACE bloqueAux RBRACE .)
    INPUT           reduce using rule 31 (bloque -> LBRACE bloqueAux RBRACE .)
    RBRACE          reduce using rule 31 (bloque -> LBRACE bloqueAux RBRACE .)


state 225

    (78) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse . bloque condFinal
    (30) bloque -> . LBRACE RBRACE
    (31) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 190

    bloque                         shift and go to state 234

state 226

    (21) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH
    (22) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH COMA varAux2

    RCORCH          shift and go to state 235


state 227

    (20) varAux2 -> ID LCORCH CTE_I RCORCH COMA varAux2 .

    SEMICOLON       reduce using rule 20 (varAux2 -> ID LCORCH CTE_I RCORCH COMA varAux2 .)


state 228

    (83) lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .

    ID              reduce using rule 83 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    IF              reduce using rule 83 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    PRINT           reduce using rule 83 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    WHILE           reduce using rule 83 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    FROM            reduce using rule 83 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    INPUT           reduce using rule 83 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    RBRACE          reduce using rule 83 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)


state 229

    (64) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .

    RPAREN          reduce using rule 64 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    ID              reduce using rule 64 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    IF              reduce using rule 64 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    PRINT           reduce using rule 64 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    WHILE           reduce using rule 64 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    FROM            reduce using rule 64 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    INPUT           reduce using rule 64 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    RBRACE          reduce using rule 64 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)


state 230

    (63) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .

    RPAREN          reduce using rule 63 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    ID              reduce using rule 63 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    IF              reduce using rule 63 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    PRINT           reduce using rule 63 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    WHILE           reduce using rule 63 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    FROM            reduce using rule 63 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    INPUT           reduce using rule 63 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    RBRACE          reduce using rule 63 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)


state 231

    (69) paramFuncion -> ID push_id2 COMA paramFuncion .

    RPAREN          reduce using rule 69 (paramFuncion -> ID push_id2 COMA paramFuncion .)


state 232

    (54) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN . expresion RPAREN DO LBRACE bloqueAux RBRACE
    (90) expresion -> . exp
    (91) expresion -> . exp comp exp quad_comp
    (99) exp -> . termino quad_term
    (100) exp -> . termino quad_term exp1
    (105) termino -> . factor quad_fact
    (106) termino -> . factor quad_fact termino1
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . factorAux
    (111) factorAux -> . PLUS push_poper var_cte
    (112) factorAux -> . MINUS push_poper var_cte
    (113) factorAux -> . var_cte
    (117) var_cte -> . ID push_id
    (118) var_cte -> . CTE_I push_cte
    (119) var_cte -> . CTE_F push_cte
    (120) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 94
    PLUS            shift and go to state 89
    MINUS           shift and go to state 88
    ID              shift and go to state 95
    CTE_I           shift and go to state 93
    CTE_F           shift and go to state 91
    CTE_STRING      shift and go to state 92

    expresion                      shift and go to state 236
    factor                         shift and go to state 90
    var_cte                        shift and go to state 86
    termino                        shift and go to state 87
    exp                            shift and go to state 97
    factorAux                      shift and go to state 98

state 233

    (50) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux . RBRACE while3

    RBRACE          shift and go to state 237


state 234

    (78) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque . condFinal
    (81) condFinal -> .

    ID              reduce using rule 81 (condFinal -> .)
    IF              reduce using rule 81 (condFinal -> .)
    PRINT           reduce using rule 81 (condFinal -> .)
    WHILE           reduce using rule 81 (condFinal -> .)
    FROM            reduce using rule 81 (condFinal -> .)
    INPUT           reduce using rule 81 (condFinal -> .)
    RBRACE          reduce using rule 81 (condFinal -> .)

    condFinal                      shift and go to state 238

state 235

    (21) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH .
    (22) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH . COMA varAux2

    SEMICOLON       reduce using rule 21 (varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH .)
    COMA            shift and go to state 239

    condFinal                      shift and go to state 239

state 236

    (54) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion . RPAREN DO LBRACE bloqueAux RBRACE

    RPAREN          shift and go to state 240


state 237

    (50) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE . while3
    (53) while3 -> .

    ID              reduce using rule 53 (while3 -> .)
    IF              reduce using rule 53 (while3 -> .)
    PRINT           reduce using rule 53 (while3 -> .)
    WHILE           reduce using rule 53 (while3 -> .)
    FROM            reduce using rule 53 (while3 -> .)
    INPUT           reduce using rule 53 (while3 -> .)
    RBRACE          reduce using rule 53 (while3 -> .)

    while3                         shift and go to state 241

state 238

    (78) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .

    ID              reduce using rule 78 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    IF              reduce using rule 78 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    PRINT           reduce using rule 78 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    WHILE           reduce using rule 78 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    FROM            reduce using rule 78 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    INPUT           reduce using rule 78 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    RBRACE          reduce using rule 78 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)


state 239

    (22) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA . varAux2
    (17) varAux2 -> . ID
    (18) varAux2 -> . ID COMA varAux2
    (19) varAux2 -> . ID LCORCH CTE_I RCORCH
    (20) varAux2 -> . ID LCORCH CTE_I RCORCH COMA varAux2
    (21) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (22) varAux2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAux2

    ID              shift and go to state 100

    varAux2                        shift and go to state 242

state 240

    (54) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN . DO LBRACE bloqueAux RBRACE

    DO              shift and go to state 243


state 241

    (50) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .

    ID              reduce using rule 50 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    IF              reduce using rule 50 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    PRINT           reduce using rule 50 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    WHILE           reduce using rule 50 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    FROM            reduce using rule 50 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    INPUT           reduce using rule 50 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    RBRACE          reduce using rule 50 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)


state 242

    (22) varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAux2 .

    SEMICOLON       reduce using rule 22 (varAux2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAux2 .)


state 243

    (54) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 244


state 244

    (54) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE . bloqueAux RBRACE
    (48) bloqueAux -> . estatuto
    (49) bloqueAux -> . estatuto bloqueAux
    (55) estatuto -> . asignacion
    (56) estatuto -> . condicion
    (57) estatuto -> . escritura
    (58) estatuto -> . while
    (59) estatuto -> . loopFromDo
    (60) estatuto -> . comparacion
    (61) estatuto -> . llamadaAFuncion
    (62) estatuto -> . lectura
    (74) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (77) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (78) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (82) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (50) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (54) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (76) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (63) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (64) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (83) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 53
    IF              shift and go to state 48
    PRINT           shift and go to state 46
    WHILE           shift and go to state 58
    FROM            shift and go to state 56
    INPUT           shift and go to state 52

    estatuto                       shift and go to state 47
    condicion                      shift and go to state 50
    lectura                        shift and go to state 49
    loopFromDo                     shift and go to state 54
    llamadaAFuncion                shift and go to state 55
    asignacion                     shift and go to state 57
    bloqueAux                      shift and go to state 245
    while                          shift and go to state 60
    comparacion                    shift and go to state 61
    escritura                      shift and go to state 62

state 245

    (54) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 246


state 246

    (54) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .

    ID              reduce using rule 54 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    IF              reduce using rule 54 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    PRINT           reduce using rule 54 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    WHILE           reduce using rule 54 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    FROM            reduce using rule 54 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    INPUT           reduce using rule 54 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    RBRACE          reduce using rule 54 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 35 resolved as shift
WARNING: shift/reduce conflict for COMA in state 148 resolved as shift
WARNING: reduce/reduce conflict in state 148 resolved using rule (escrituraAux -> CTE_STRING push_cte)
WARNING: rejected rule (var_cte -> CTE_STRING push_cte) in state 148
WARNING: reduce/reduce conflict in state 174 resolved using rule (push_id2 -> <empty>)
WARNING: rejected rule (push_id -> <empty>) in state 174
