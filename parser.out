Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FOR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID COLON vars main function
Rule 2     program -> PROGRAM ID COLON main function
Rule 3     program -> PROGRAM ID COLON vars main
Rule 4     program -> PROGRAM ID COLON main
Rule 5     main -> MAIN LPAREN RPAREN LBRACE bloqueAux RBRACE
Rule 6     main -> MAIN LPAREN RPAREN LBRACE vars bloqueAux RBRACE
Rule 7     vars -> VAR varAux1
Rule 8     varAux1 -> tipo varAux2 SEMICOLON
Rule 9     varAux1 -> tipo varAux2 SEMICOLON varAux1
Rule 10    varAux2 -> ID
Rule 11    varAux2 -> ID COMA varAux2
Rule 12    tipo -> INT
Rule 13    tipo -> FLOAT
Rule 14    tipo -> CHAR
Rule 15    tipoFunc -> INT
Rule 16    tipoFunc -> FLOAT
Rule 17    tipoFunc -> CHAR
Rule 18    tipoFunc -> VOID
Rule 19    bloque -> LBRACE RBRACE
Rule 20    bloque -> LBRACE bloqueAux RBRACE
Rule 21    function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE
Rule 22    function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE
Rule 23    function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE
Rule 24    function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE
Rule 25    function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE function
Rule 26    function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function
Rule 27    function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function
Rule 28    function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function
Rule 29    bloqueAux -> estatuto
Rule 30    bloqueAux -> estatuto bloqueAux
Rule 31    while -> WHILE LPAREN expresion RPAREN bloque
Rule 32    estatuto -> asignacion
Rule 33    estatuto -> condicion
Rule 34    estatuto -> escritura
Rule 35    estatuto -> while
Rule 36    estatuto -> comparacion
Rule 37    asignacion -> ID EQUAL expresion SEMICOLON
Rule 38    comparacion -> ID EQUAL EQUAL expresion SEMICOLON
Rule 39    condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON
Rule 40    condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
Rule 41    escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON
Rule 42    escrituraAux -> expresion
Rule 43    escrituraAux -> CTE_STRING
Rule 44    escrituraAux -> expresion COMA escrituraAux
Rule 45    escrituraAux -> CTE_STRING COMA escrituraAux
Rule 46    expresion -> exp
Rule 47    expresion -> exp LOWERTHAN exp
Rule 48    expresion -> exp MORETHAN exp
Rule 49    expresion -> exp DIFFERENT exp
Rule 50    exp -> termino
Rule 51    exp -> termino PLUS exp
Rule 52    exp -> termino MINUS exp
Rule 53    termino -> factor
Rule 54    termino -> factor TIMES termino
Rule 55    termino -> factor DIVIDE termino
Rule 56    factor -> LPAREN expresion RPAREN
Rule 57    factor -> factorAux
Rule 58    factorAux -> PLUS var_cte
Rule 59    factorAux -> MINUS var_cte
Rule 60    factorAux -> var_cte
Rule 61    var_cte -> ID
Rule 62    var_cte -> CTE_I
Rule 63    var_cte -> CTE_F

Terminals, with rules where they appear

CHAR                 : 14 17
COLON                : 1 2 3 4
COMA                 : 11 44 45
CTE_F                : 63
CTE_I                : 62
CTE_STRING           : 43 45
DIFFERENT            : 49
DIVIDE               : 55
ELSE                 : 40
EQUAL                : 37 38 38
FLOAT                : 13 16
FOR                  : 
FUNCTION             : 21 22 23 24 25 26 27 28
ID                   : 1 2 3 4 10 11 21 22 23 24 25 26 27 28 37 38 61
IF                   : 39 40
INT                  : 12 15
LBRACE               : 5 6 19 20 21 22 23 24 25 26 27 28
LOWERTHAN            : 47
LPAREN               : 5 6 21 22 23 24 25 26 27 28 31 39 40 41 56
MAIN                 : 5 6
MINUS                : 52 59
MORETHAN             : 48
PLUS                 : 51 58
PRINT                : 41
PROGRAM              : 1 2 3 4
RBRACE               : 5 6 19 20 21 22 23 24 25 26 27 28
RPAREN               : 5 6 21 22 23 24 25 26 27 28 31 39 40 41 56
SEMICOLON            : 8 9 37 38 39 40 41
TIMES                : 54
VAR                  : 7
VOID                 : 18
WHILE                : 31
error                : 

Nonterminals, with rules where they appear

asignacion           : 32
bloque               : 31 39 40 40
bloqueAux            : 5 6 20 22 23 24 26 27 28 30
comparacion          : 36
condicion            : 33
escritura            : 34
escrituraAux         : 41 44 45
estatuto             : 29 30
exp                  : 46 47 47 48 48 49 49 51 52
expresion            : 31 37 38 39 40 42 44 56
factor               : 53 54 55
factorAux            : 57
function             : 1 2 25 26 27 28
main                 : 1 2 3 4
program              : 0
termino              : 50 51 52 54 55
tipo                 : 8 9
tipoFunc             : 21 22 23 24 25 26 27 28
varAux1              : 7 9
varAux2              : 8 9 11
var_cte              : 58 59 60
vars                 : 1 3 6 22 23 24 24 26 27 28 28
while                : 35

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID COLON vars main function
    (2) program -> . PROGRAM ID COLON main function
    (3) program -> . PROGRAM ID COLON vars main
    (4) program -> . PROGRAM ID COLON main

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID COLON vars main function
    (2) program -> PROGRAM . ID COLON main function
    (3) program -> PROGRAM . ID COLON vars main
    (4) program -> PROGRAM . ID COLON main

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . COLON vars main function
    (2) program -> PROGRAM ID . COLON main function
    (3) program -> PROGRAM ID . COLON vars main
    (4) program -> PROGRAM ID . COLON main

    COLON           shift and go to state 4


state 4

    (1) program -> PROGRAM ID COLON . vars main function
    (2) program -> PROGRAM ID COLON . main function
    (3) program -> PROGRAM ID COLON . vars main
    (4) program -> PROGRAM ID COLON . main
    (7) vars -> . VAR varAux1
    (5) main -> . MAIN LPAREN RPAREN LBRACE bloqueAux RBRACE
    (6) main -> . MAIN LPAREN RPAREN LBRACE vars bloqueAux RBRACE

    VAR             shift and go to state 7
    MAIN            shift and go to state 5

    main                           shift and go to state 8
    vars                           shift and go to state 6

state 5

    (5) main -> MAIN . LPAREN RPAREN LBRACE bloqueAux RBRACE
    (6) main -> MAIN . LPAREN RPAREN LBRACE vars bloqueAux RBRACE

    LPAREN          shift and go to state 9


state 6

    (1) program -> PROGRAM ID COLON vars . main function
    (3) program -> PROGRAM ID COLON vars . main
    (5) main -> . MAIN LPAREN RPAREN LBRACE bloqueAux RBRACE
    (6) main -> . MAIN LPAREN RPAREN LBRACE vars bloqueAux RBRACE

    MAIN            shift and go to state 5

    main                           shift and go to state 10

state 7

    (7) vars -> VAR . varAux1
    (8) varAux1 -> . tipo varAux2 SEMICOLON
    (9) varAux1 -> . tipo varAux2 SEMICOLON varAux1
    (12) tipo -> . INT
    (13) tipo -> . FLOAT
    (14) tipo -> . CHAR

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 11

    varAux1                        shift and go to state 15
    tipo                           shift and go to state 12

state 8

    (2) program -> PROGRAM ID COLON main . function
    (4) program -> PROGRAM ID COLON main .
    (21) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE
    (22) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (23) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE
    (24) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE
    (25) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE function
    (26) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function
    (27) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function
    (28) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function

    $end            reduce using rule 4 (program -> PROGRAM ID COLON main .)
    FUNCTION        shift and go to state 17

    function                       shift and go to state 16

state 9

    (5) main -> MAIN LPAREN . RPAREN LBRACE bloqueAux RBRACE
    (6) main -> MAIN LPAREN . RPAREN LBRACE vars bloqueAux RBRACE

    RPAREN          shift and go to state 18


state 10

    (1) program -> PROGRAM ID COLON vars main . function
    (3) program -> PROGRAM ID COLON vars main .
    (21) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE
    (22) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (23) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE
    (24) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE
    (25) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE function
    (26) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function
    (27) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function
    (28) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function

    $end            reduce using rule 3 (program -> PROGRAM ID COLON vars main .)
    FUNCTION        shift and go to state 17

    function                       shift and go to state 19

state 11

    (14) tipo -> CHAR .

    ID              reduce using rule 14 (tipo -> CHAR .)


state 12

    (8) varAux1 -> tipo . varAux2 SEMICOLON
    (9) varAux1 -> tipo . varAux2 SEMICOLON varAux1
    (10) varAux2 -> . ID
    (11) varAux2 -> . ID COMA varAux2

    ID              shift and go to state 21

    varAux2                        shift and go to state 20

state 13

    (12) tipo -> INT .

    ID              reduce using rule 12 (tipo -> INT .)


state 14

    (13) tipo -> FLOAT .

    ID              reduce using rule 13 (tipo -> FLOAT .)


state 15

    (7) vars -> VAR varAux1 .

    ID              reduce using rule 7 (vars -> VAR varAux1 .)
    IF              reduce using rule 7 (vars -> VAR varAux1 .)
    PRINT           reduce using rule 7 (vars -> VAR varAux1 .)
    WHILE           reduce using rule 7 (vars -> VAR varAux1 .)
    MAIN            reduce using rule 7 (vars -> VAR varAux1 .)
    RPAREN          reduce using rule 7 (vars -> VAR varAux1 .)


state 16

    (2) program -> PROGRAM ID COLON main function .

    $end            reduce using rule 2 (program -> PROGRAM ID COLON main function .)


state 17

    (21) function -> FUNCTION . tipoFunc ID LPAREN RPAREN LBRACE RBRACE
    (22) function -> FUNCTION . tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (23) function -> FUNCTION . tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE
    (24) function -> FUNCTION . tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE
    (25) function -> FUNCTION . tipoFunc ID LPAREN RPAREN LBRACE RBRACE function
    (26) function -> FUNCTION . tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function
    (27) function -> FUNCTION . tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function
    (28) function -> FUNCTION . tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function
    (15) tipoFunc -> . INT
    (16) tipoFunc -> . FLOAT
    (17) tipoFunc -> . CHAR
    (18) tipoFunc -> . VOID

    INT             shift and go to state 22
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    VOID            shift and go to state 23

    tipoFunc                       shift and go to state 26

state 18

    (5) main -> MAIN LPAREN RPAREN . LBRACE bloqueAux RBRACE
    (6) main -> MAIN LPAREN RPAREN . LBRACE vars bloqueAux RBRACE

    LBRACE          shift and go to state 27


state 19

    (1) program -> PROGRAM ID COLON vars main function .

    $end            reduce using rule 1 (program -> PROGRAM ID COLON vars main function .)


state 20

    (8) varAux1 -> tipo varAux2 . SEMICOLON
    (9) varAux1 -> tipo varAux2 . SEMICOLON varAux1

    SEMICOLON       shift and go to state 28


state 21

    (10) varAux2 -> ID .
    (11) varAux2 -> ID . COMA varAux2

    SEMICOLON       reduce using rule 10 (varAux2 -> ID .)
    COMA            shift and go to state 29


state 22

    (15) tipoFunc -> INT .

    ID              reduce using rule 15 (tipoFunc -> INT .)


state 23

    (18) tipoFunc -> VOID .

    ID              reduce using rule 18 (tipoFunc -> VOID .)


state 24

    (16) tipoFunc -> FLOAT .

    ID              reduce using rule 16 (tipoFunc -> FLOAT .)


state 25

    (17) tipoFunc -> CHAR .

    ID              reduce using rule 17 (tipoFunc -> CHAR .)


state 26

    (21) function -> FUNCTION tipoFunc . ID LPAREN RPAREN LBRACE RBRACE
    (22) function -> FUNCTION tipoFunc . ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (23) function -> FUNCTION tipoFunc . ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE
    (24) function -> FUNCTION tipoFunc . ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE
    (25) function -> FUNCTION tipoFunc . ID LPAREN RPAREN LBRACE RBRACE function
    (26) function -> FUNCTION tipoFunc . ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function
    (27) function -> FUNCTION tipoFunc . ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function
    (28) function -> FUNCTION tipoFunc . ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function

    ID              shift and go to state 30


state 27

    (5) main -> MAIN LPAREN RPAREN LBRACE . bloqueAux RBRACE
    (6) main -> MAIN LPAREN RPAREN LBRACE . vars bloqueAux RBRACE
    (29) bloqueAux -> . estatuto
    (30) bloqueAux -> . estatuto bloqueAux
    (7) vars -> . VAR varAux1
    (32) estatuto -> . asignacion
    (33) estatuto -> . condicion
    (34) estatuto -> . escritura
    (35) estatuto -> . while
    (36) estatuto -> . comparacion
    (37) asignacion -> . ID EQUAL expresion SEMICOLON
    (39) condicion -> . IF LPAREN expresion RPAREN bloque SEMICOLON
    (40) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
    (41) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (31) while -> . WHILE LPAREN expresion RPAREN bloque
    (38) comparacion -> . ID EQUAL EQUAL expresion SEMICOLON

    VAR             shift and go to state 7
    ID              shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 33
    WHILE           shift and go to state 32

    vars                           shift and go to state 31
    asignacion                     shift and go to state 38
    estatuto                       shift and go to state 34
    bloqueAux                      shift and go to state 39
    while                          shift and go to state 40
    condicion                      shift and go to state 35
    comparacion                    shift and go to state 41
    escritura                      shift and go to state 42

state 28

    (8) varAux1 -> tipo varAux2 SEMICOLON .
    (9) varAux1 -> tipo varAux2 SEMICOLON . varAux1
    (8) varAux1 -> . tipo varAux2 SEMICOLON
    (9) varAux1 -> . tipo varAux2 SEMICOLON varAux1
    (12) tipo -> . INT
    (13) tipo -> . FLOAT
    (14) tipo -> . CHAR

    MAIN            reduce using rule 8 (varAux1 -> tipo varAux2 SEMICOLON .)
    ID              reduce using rule 8 (varAux1 -> tipo varAux2 SEMICOLON .)
    IF              reduce using rule 8 (varAux1 -> tipo varAux2 SEMICOLON .)
    PRINT           reduce using rule 8 (varAux1 -> tipo varAux2 SEMICOLON .)
    WHILE           reduce using rule 8 (varAux1 -> tipo varAux2 SEMICOLON .)
    RPAREN          reduce using rule 8 (varAux1 -> tipo varAux2 SEMICOLON .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 11

    varAux1                        shift and go to state 43
    tipo                           shift and go to state 12

state 29

    (11) varAux2 -> ID COMA . varAux2
    (10) varAux2 -> . ID
    (11) varAux2 -> . ID COMA varAux2

    ID              shift and go to state 21

    varAux2                        shift and go to state 44

state 30

    (21) function -> FUNCTION tipoFunc ID . LPAREN RPAREN LBRACE RBRACE
    (22) function -> FUNCTION tipoFunc ID . LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (23) function -> FUNCTION tipoFunc ID . LPAREN vars RPAREN LBRACE bloqueAux RBRACE
    (24) function -> FUNCTION tipoFunc ID . LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE
    (25) function -> FUNCTION tipoFunc ID . LPAREN RPAREN LBRACE RBRACE function
    (26) function -> FUNCTION tipoFunc ID . LPAREN RPAREN LBRACE vars bloqueAux RBRACE function
    (27) function -> FUNCTION tipoFunc ID . LPAREN vars RPAREN LBRACE bloqueAux RBRACE function
    (28) function -> FUNCTION tipoFunc ID . LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function

    LPAREN          shift and go to state 45


state 31

    (6) main -> MAIN LPAREN RPAREN LBRACE vars . bloqueAux RBRACE
    (29) bloqueAux -> . estatuto
    (30) bloqueAux -> . estatuto bloqueAux
    (32) estatuto -> . asignacion
    (33) estatuto -> . condicion
    (34) estatuto -> . escritura
    (35) estatuto -> . while
    (36) estatuto -> . comparacion
    (37) asignacion -> . ID EQUAL expresion SEMICOLON
    (39) condicion -> . IF LPAREN expresion RPAREN bloque SEMICOLON
    (40) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
    (41) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (31) while -> . WHILE LPAREN expresion RPAREN bloque
    (38) comparacion -> . ID EQUAL EQUAL expresion SEMICOLON

    ID              shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 33
    WHILE           shift and go to state 32

    asignacion                     shift and go to state 38
    estatuto                       shift and go to state 34
    bloqueAux                      shift and go to state 46
    while                          shift and go to state 40
    condicion                      shift and go to state 35
    comparacion                    shift and go to state 41
    escritura                      shift and go to state 42

state 32

    (31) while -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 47


state 33

    (41) escritura -> PRINT . LPAREN escrituraAux RPAREN SEMICOLON

    LPAREN          shift and go to state 48


state 34

    (29) bloqueAux -> estatuto .
    (30) bloqueAux -> estatuto . bloqueAux
    (29) bloqueAux -> . estatuto
    (30) bloqueAux -> . estatuto bloqueAux
    (32) estatuto -> . asignacion
    (33) estatuto -> . condicion
    (34) estatuto -> . escritura
    (35) estatuto -> . while
    (36) estatuto -> . comparacion
    (37) asignacion -> . ID EQUAL expresion SEMICOLON
    (39) condicion -> . IF LPAREN expresion RPAREN bloque SEMICOLON
    (40) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
    (41) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (31) while -> . WHILE LPAREN expresion RPAREN bloque
    (38) comparacion -> . ID EQUAL EQUAL expresion SEMICOLON

    RBRACE          reduce using rule 29 (bloqueAux -> estatuto .)
    ID              shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 33
    WHILE           shift and go to state 32

    asignacion                     shift and go to state 38
    estatuto                       shift and go to state 34
    bloqueAux                      shift and go to state 49
    while                          shift and go to state 40
    condicion                      shift and go to state 35
    comparacion                    shift and go to state 41
    escritura                      shift and go to state 42

state 35

    (33) estatuto -> condicion .

    ID              reduce using rule 33 (estatuto -> condicion .)
    IF              reduce using rule 33 (estatuto -> condicion .)
    PRINT           reduce using rule 33 (estatuto -> condicion .)
    WHILE           reduce using rule 33 (estatuto -> condicion .)
    RBRACE          reduce using rule 33 (estatuto -> condicion .)


state 36

    (37) asignacion -> ID . EQUAL expresion SEMICOLON
    (38) comparacion -> ID . EQUAL EQUAL expresion SEMICOLON

    EQUAL           shift and go to state 50


state 37

    (39) condicion -> IF . LPAREN expresion RPAREN bloque SEMICOLON
    (40) condicion -> IF . LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON

    LPAREN          shift and go to state 51


state 38

    (32) estatuto -> asignacion .

    ID              reduce using rule 32 (estatuto -> asignacion .)
    IF              reduce using rule 32 (estatuto -> asignacion .)
    PRINT           reduce using rule 32 (estatuto -> asignacion .)
    WHILE           reduce using rule 32 (estatuto -> asignacion .)
    RBRACE          reduce using rule 32 (estatuto -> asignacion .)


state 39

    (5) main -> MAIN LPAREN RPAREN LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 52


state 40

    (35) estatuto -> while .

    ID              reduce using rule 35 (estatuto -> while .)
    IF              reduce using rule 35 (estatuto -> while .)
    PRINT           reduce using rule 35 (estatuto -> while .)
    WHILE           reduce using rule 35 (estatuto -> while .)
    RBRACE          reduce using rule 35 (estatuto -> while .)


state 41

    (36) estatuto -> comparacion .

    ID              reduce using rule 36 (estatuto -> comparacion .)
    IF              reduce using rule 36 (estatuto -> comparacion .)
    PRINT           reduce using rule 36 (estatuto -> comparacion .)
    WHILE           reduce using rule 36 (estatuto -> comparacion .)
    RBRACE          reduce using rule 36 (estatuto -> comparacion .)


state 42

    (34) estatuto -> escritura .

    ID              reduce using rule 34 (estatuto -> escritura .)
    IF              reduce using rule 34 (estatuto -> escritura .)
    PRINT           reduce using rule 34 (estatuto -> escritura .)
    WHILE           reduce using rule 34 (estatuto -> escritura .)
    RBRACE          reduce using rule 34 (estatuto -> escritura .)


state 43

    (9) varAux1 -> tipo varAux2 SEMICOLON varAux1 .

    MAIN            reduce using rule 9 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    ID              reduce using rule 9 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    IF              reduce using rule 9 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    PRINT           reduce using rule 9 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    WHILE           reduce using rule 9 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    RPAREN          reduce using rule 9 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)


state 44

    (11) varAux2 -> ID COMA varAux2 .

    SEMICOLON       reduce using rule 11 (varAux2 -> ID COMA varAux2 .)


state 45

    (21) function -> FUNCTION tipoFunc ID LPAREN . RPAREN LBRACE RBRACE
    (22) function -> FUNCTION tipoFunc ID LPAREN . RPAREN LBRACE vars bloqueAux RBRACE
    (23) function -> FUNCTION tipoFunc ID LPAREN . vars RPAREN LBRACE bloqueAux RBRACE
    (24) function -> FUNCTION tipoFunc ID LPAREN . vars RPAREN LBRACE vars bloqueAux RBRACE
    (25) function -> FUNCTION tipoFunc ID LPAREN . RPAREN LBRACE RBRACE function
    (26) function -> FUNCTION tipoFunc ID LPAREN . RPAREN LBRACE vars bloqueAux RBRACE function
    (27) function -> FUNCTION tipoFunc ID LPAREN . vars RPAREN LBRACE bloqueAux RBRACE function
    (28) function -> FUNCTION tipoFunc ID LPAREN . vars RPAREN LBRACE vars bloqueAux RBRACE function
    (7) vars -> . VAR varAux1

    RPAREN          shift and go to state 53
    VAR             shift and go to state 7

    vars                           shift and go to state 54

state 46

    (6) main -> MAIN LPAREN RPAREN LBRACE vars bloqueAux . RBRACE

    RBRACE          shift and go to state 55


state 47

    (31) while -> WHILE LPAREN . expresion RPAREN bloque
    (46) expresion -> . exp
    (47) expresion -> . exp LOWERTHAN exp
    (48) expresion -> . exp MORETHAN exp
    (49) expresion -> . exp DIFFERENT exp
    (50) exp -> . termino
    (51) exp -> . termino PLUS exp
    (52) exp -> . termino MINUS exp
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    expresion                      shift and go to state 56
    var_cte                        shift and go to state 66
    termino                        shift and go to state 62
    exp                            shift and go to state 63
    factor                         shift and go to state 64
    factorAux                      shift and go to state 65

state 48

    (41) escritura -> PRINT LPAREN . escrituraAux RPAREN SEMICOLON
    (42) escrituraAux -> . expresion
    (43) escrituraAux -> . CTE_STRING
    (44) escrituraAux -> . expresion COMA escrituraAux
    (45) escrituraAux -> . CTE_STRING COMA escrituraAux
    (46) expresion -> . exp
    (47) expresion -> . exp LOWERTHAN exp
    (48) expresion -> . exp MORETHAN exp
    (49) expresion -> . exp DIFFERENT exp
    (50) exp -> . termino
    (51) exp -> . termino PLUS exp
    (52) exp -> . termino MINUS exp
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    CTE_STRING      shift and go to state 68
    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    escrituraAux                   shift and go to state 70
    expresion                      shift and go to state 69
    var_cte                        shift and go to state 66
    termino                        shift and go to state 62
    exp                            shift and go to state 63
    factor                         shift and go to state 64
    factorAux                      shift and go to state 65

state 49

    (30) bloqueAux -> estatuto bloqueAux .

    RBRACE          reduce using rule 30 (bloqueAux -> estatuto bloqueAux .)


state 50

    (37) asignacion -> ID EQUAL . expresion SEMICOLON
    (38) comparacion -> ID EQUAL . EQUAL expresion SEMICOLON
    (46) expresion -> . exp
    (47) expresion -> . exp LOWERTHAN exp
    (48) expresion -> . exp MORETHAN exp
    (49) expresion -> . exp DIFFERENT exp
    (50) exp -> . termino
    (51) exp -> . termino PLUS exp
    (52) exp -> . termino MINUS exp
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    EQUAL           shift and go to state 72
    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    expresion                      shift and go to state 71
    var_cte                        shift and go to state 66
    termino                        shift and go to state 62
    exp                            shift and go to state 63
    factor                         shift and go to state 64
    factorAux                      shift and go to state 65

state 51

    (39) condicion -> IF LPAREN . expresion RPAREN bloque SEMICOLON
    (40) condicion -> IF LPAREN . expresion RPAREN bloque ELSE bloque SEMICOLON
    (46) expresion -> . exp
    (47) expresion -> . exp LOWERTHAN exp
    (48) expresion -> . exp MORETHAN exp
    (49) expresion -> . exp DIFFERENT exp
    (50) exp -> . termino
    (51) exp -> . termino PLUS exp
    (52) exp -> . termino MINUS exp
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    expresion                      shift and go to state 73
    var_cte                        shift and go to state 66
    termino                        shift and go to state 62
    exp                            shift and go to state 63
    factor                         shift and go to state 64
    factorAux                      shift and go to state 65

state 52

    (5) main -> MAIN LPAREN RPAREN LBRACE bloqueAux RBRACE .

    FUNCTION        reduce using rule 5 (main -> MAIN LPAREN RPAREN LBRACE bloqueAux RBRACE .)
    $end            reduce using rule 5 (main -> MAIN LPAREN RPAREN LBRACE bloqueAux RBRACE .)


state 53

    (21) function -> FUNCTION tipoFunc ID LPAREN RPAREN . LBRACE RBRACE
    (22) function -> FUNCTION tipoFunc ID LPAREN RPAREN . LBRACE vars bloqueAux RBRACE
    (25) function -> FUNCTION tipoFunc ID LPAREN RPAREN . LBRACE RBRACE function
    (26) function -> FUNCTION tipoFunc ID LPAREN RPAREN . LBRACE vars bloqueAux RBRACE function

    LBRACE          shift and go to state 74


state 54

    (23) function -> FUNCTION tipoFunc ID LPAREN vars . RPAREN LBRACE bloqueAux RBRACE
    (24) function -> FUNCTION tipoFunc ID LPAREN vars . RPAREN LBRACE vars bloqueAux RBRACE
    (27) function -> FUNCTION tipoFunc ID LPAREN vars . RPAREN LBRACE bloqueAux RBRACE function
    (28) function -> FUNCTION tipoFunc ID LPAREN vars . RPAREN LBRACE vars bloqueAux RBRACE function

    RPAREN          shift and go to state 75


state 55

    (6) main -> MAIN LPAREN RPAREN LBRACE vars bloqueAux RBRACE .

    FUNCTION        reduce using rule 6 (main -> MAIN LPAREN RPAREN LBRACE vars bloqueAux RBRACE .)
    $end            reduce using rule 6 (main -> MAIN LPAREN RPAREN LBRACE vars bloqueAux RBRACE .)


state 56

    (31) while -> WHILE LPAREN expresion . RPAREN bloque

    RPAREN          shift and go to state 76


state 57

    (56) factor -> LPAREN . expresion RPAREN
    (46) expresion -> . exp
    (47) expresion -> . exp LOWERTHAN exp
    (48) expresion -> . exp MORETHAN exp
    (49) expresion -> . exp DIFFERENT exp
    (50) exp -> . termino
    (51) exp -> . termino PLUS exp
    (52) exp -> . termino MINUS exp
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    expresion                      shift and go to state 77
    var_cte                        shift and go to state 66
    termino                        shift and go to state 62
    exp                            shift and go to state 63
    factor                         shift and go to state 64
    factorAux                      shift and go to state 65

state 58

    (62) var_cte -> CTE_I .

    TIMES           reduce using rule 62 (var_cte -> CTE_I .)
    DIVIDE          reduce using rule 62 (var_cte -> CTE_I .)
    PLUS            reduce using rule 62 (var_cte -> CTE_I .)
    MINUS           reduce using rule 62 (var_cte -> CTE_I .)
    LOWERTHAN       reduce using rule 62 (var_cte -> CTE_I .)
    MORETHAN        reduce using rule 62 (var_cte -> CTE_I .)
    DIFFERENT       reduce using rule 62 (var_cte -> CTE_I .)
    COMA            reduce using rule 62 (var_cte -> CTE_I .)
    RPAREN          reduce using rule 62 (var_cte -> CTE_I .)
    SEMICOLON       reduce using rule 62 (var_cte -> CTE_I .)


state 59

    (59) factorAux -> MINUS . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    var_cte                        shift and go to state 78

state 60

    (63) var_cte -> CTE_F .

    TIMES           reduce using rule 63 (var_cte -> CTE_F .)
    DIVIDE          reduce using rule 63 (var_cte -> CTE_F .)
    PLUS            reduce using rule 63 (var_cte -> CTE_F .)
    MINUS           reduce using rule 63 (var_cte -> CTE_F .)
    LOWERTHAN       reduce using rule 63 (var_cte -> CTE_F .)
    MORETHAN        reduce using rule 63 (var_cte -> CTE_F .)
    DIFFERENT       reduce using rule 63 (var_cte -> CTE_F .)
    COMA            reduce using rule 63 (var_cte -> CTE_F .)
    RPAREN          reduce using rule 63 (var_cte -> CTE_F .)
    SEMICOLON       reduce using rule 63 (var_cte -> CTE_F .)


state 61

    (58) factorAux -> PLUS . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    var_cte                        shift and go to state 79

state 62

    (50) exp -> termino .
    (51) exp -> termino . PLUS exp
    (52) exp -> termino . MINUS exp

    LOWERTHAN       reduce using rule 50 (exp -> termino .)
    MORETHAN        reduce using rule 50 (exp -> termino .)
    DIFFERENT       reduce using rule 50 (exp -> termino .)
    SEMICOLON       reduce using rule 50 (exp -> termino .)
    RPAREN          reduce using rule 50 (exp -> termino .)
    COMA            reduce using rule 50 (exp -> termino .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81


state 63

    (46) expresion -> exp .
    (47) expresion -> exp . LOWERTHAN exp
    (48) expresion -> exp . MORETHAN exp
    (49) expresion -> exp . DIFFERENT exp

    SEMICOLON       reduce using rule 46 (expresion -> exp .)
    RPAREN          reduce using rule 46 (expresion -> exp .)
    COMA            reduce using rule 46 (expresion -> exp .)
    LOWERTHAN       shift and go to state 84
    MORETHAN        shift and go to state 82
    DIFFERENT       shift and go to state 83


state 64

    (53) termino -> factor .
    (54) termino -> factor . TIMES termino
    (55) termino -> factor . DIVIDE termino

    PLUS            reduce using rule 53 (termino -> factor .)
    MINUS           reduce using rule 53 (termino -> factor .)
    RPAREN          reduce using rule 53 (termino -> factor .)
    COMA            reduce using rule 53 (termino -> factor .)
    SEMICOLON       reduce using rule 53 (termino -> factor .)
    LOWERTHAN       reduce using rule 53 (termino -> factor .)
    MORETHAN        reduce using rule 53 (termino -> factor .)
    DIFFERENT       reduce using rule 53 (termino -> factor .)
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 85


state 65

    (57) factor -> factorAux .

    TIMES           reduce using rule 57 (factor -> factorAux .)
    DIVIDE          reduce using rule 57 (factor -> factorAux .)
    PLUS            reduce using rule 57 (factor -> factorAux .)
    MINUS           reduce using rule 57 (factor -> factorAux .)
    RPAREN          reduce using rule 57 (factor -> factorAux .)
    COMA            reduce using rule 57 (factor -> factorAux .)
    SEMICOLON       reduce using rule 57 (factor -> factorAux .)
    LOWERTHAN       reduce using rule 57 (factor -> factorAux .)
    MORETHAN        reduce using rule 57 (factor -> factorAux .)
    DIFFERENT       reduce using rule 57 (factor -> factorAux .)


state 66

    (60) factorAux -> var_cte .

    TIMES           reduce using rule 60 (factorAux -> var_cte .)
    DIVIDE          reduce using rule 60 (factorAux -> var_cte .)
    PLUS            reduce using rule 60 (factorAux -> var_cte .)
    MINUS           reduce using rule 60 (factorAux -> var_cte .)
    RPAREN          reduce using rule 60 (factorAux -> var_cte .)
    COMA            reduce using rule 60 (factorAux -> var_cte .)
    SEMICOLON       reduce using rule 60 (factorAux -> var_cte .)
    LOWERTHAN       reduce using rule 60 (factorAux -> var_cte .)
    MORETHAN        reduce using rule 60 (factorAux -> var_cte .)
    DIFFERENT       reduce using rule 60 (factorAux -> var_cte .)


state 67

    (61) var_cte -> ID .

    TIMES           reduce using rule 61 (var_cte -> ID .)
    DIVIDE          reduce using rule 61 (var_cte -> ID .)
    PLUS            reduce using rule 61 (var_cte -> ID .)
    MINUS           reduce using rule 61 (var_cte -> ID .)
    LOWERTHAN       reduce using rule 61 (var_cte -> ID .)
    MORETHAN        reduce using rule 61 (var_cte -> ID .)
    DIFFERENT       reduce using rule 61 (var_cte -> ID .)
    COMA            reduce using rule 61 (var_cte -> ID .)
    RPAREN          reduce using rule 61 (var_cte -> ID .)
    SEMICOLON       reduce using rule 61 (var_cte -> ID .)


state 68

    (43) escrituraAux -> CTE_STRING .
    (45) escrituraAux -> CTE_STRING . COMA escrituraAux

    RPAREN          reduce using rule 43 (escrituraAux -> CTE_STRING .)
    COMA            shift and go to state 87


state 69

    (42) escrituraAux -> expresion .
    (44) escrituraAux -> expresion . COMA escrituraAux

    RPAREN          reduce using rule 42 (escrituraAux -> expresion .)
    COMA            shift and go to state 88


state 70

    (41) escritura -> PRINT LPAREN escrituraAux . RPAREN SEMICOLON

    RPAREN          shift and go to state 89


state 71

    (37) asignacion -> ID EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 90


state 72

    (38) comparacion -> ID EQUAL EQUAL . expresion SEMICOLON
    (46) expresion -> . exp
    (47) expresion -> . exp LOWERTHAN exp
    (48) expresion -> . exp MORETHAN exp
    (49) expresion -> . exp DIFFERENT exp
    (50) exp -> . termino
    (51) exp -> . termino PLUS exp
    (52) exp -> . termino MINUS exp
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    expresion                      shift and go to state 91
    var_cte                        shift and go to state 66
    termino                        shift and go to state 62
    exp                            shift and go to state 63
    factor                         shift and go to state 64
    factorAux                      shift and go to state 65

state 73

    (39) condicion -> IF LPAREN expresion . RPAREN bloque SEMICOLON
    (40) condicion -> IF LPAREN expresion . RPAREN bloque ELSE bloque SEMICOLON

    RPAREN          shift and go to state 92


state 74

    (21) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE . RBRACE
    (22) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE . vars bloqueAux RBRACE
    (25) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE . RBRACE function
    (26) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE . vars bloqueAux RBRACE function
    (7) vars -> . VAR varAux1

    RBRACE          shift and go to state 93
    VAR             shift and go to state 7

    vars                           shift and go to state 94

state 75

    (23) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN . LBRACE bloqueAux RBRACE
    (24) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN . LBRACE vars bloqueAux RBRACE
    (27) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN . LBRACE bloqueAux RBRACE function
    (28) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN . LBRACE vars bloqueAux RBRACE function

    LBRACE          shift and go to state 95


state 76

    (31) while -> WHILE LPAREN expresion RPAREN . bloque
    (19) bloque -> . LBRACE RBRACE
    (20) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 96

    bloque                         shift and go to state 97

state 77

    (56) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 98


state 78

    (59) factorAux -> MINUS var_cte .

    TIMES           reduce using rule 59 (factorAux -> MINUS var_cte .)
    DIVIDE          reduce using rule 59 (factorAux -> MINUS var_cte .)
    PLUS            reduce using rule 59 (factorAux -> MINUS var_cte .)
    MINUS           reduce using rule 59 (factorAux -> MINUS var_cte .)
    RPAREN          reduce using rule 59 (factorAux -> MINUS var_cte .)
    COMA            reduce using rule 59 (factorAux -> MINUS var_cte .)
    SEMICOLON       reduce using rule 59 (factorAux -> MINUS var_cte .)
    LOWERTHAN       reduce using rule 59 (factorAux -> MINUS var_cte .)
    MORETHAN        reduce using rule 59 (factorAux -> MINUS var_cte .)
    DIFFERENT       reduce using rule 59 (factorAux -> MINUS var_cte .)


state 79

    (58) factorAux -> PLUS var_cte .

    TIMES           reduce using rule 58 (factorAux -> PLUS var_cte .)
    DIVIDE          reduce using rule 58 (factorAux -> PLUS var_cte .)
    PLUS            reduce using rule 58 (factorAux -> PLUS var_cte .)
    MINUS           reduce using rule 58 (factorAux -> PLUS var_cte .)
    RPAREN          reduce using rule 58 (factorAux -> PLUS var_cte .)
    COMA            reduce using rule 58 (factorAux -> PLUS var_cte .)
    SEMICOLON       reduce using rule 58 (factorAux -> PLUS var_cte .)
    LOWERTHAN       reduce using rule 58 (factorAux -> PLUS var_cte .)
    MORETHAN        reduce using rule 58 (factorAux -> PLUS var_cte .)
    DIFFERENT       reduce using rule 58 (factorAux -> PLUS var_cte .)


state 80

    (51) exp -> termino PLUS . exp
    (50) exp -> . termino
    (51) exp -> . termino PLUS exp
    (52) exp -> . termino MINUS exp
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    var_cte                        shift and go to state 66
    termino                        shift and go to state 62
    exp                            shift and go to state 99
    factor                         shift and go to state 64
    factorAux                      shift and go to state 65

state 81

    (52) exp -> termino MINUS . exp
    (50) exp -> . termino
    (51) exp -> . termino PLUS exp
    (52) exp -> . termino MINUS exp
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    var_cte                        shift and go to state 66
    termino                        shift and go to state 62
    exp                            shift and go to state 100
    factor                         shift and go to state 64
    factorAux                      shift and go to state 65

state 82

    (48) expresion -> exp MORETHAN . exp
    (50) exp -> . termino
    (51) exp -> . termino PLUS exp
    (52) exp -> . termino MINUS exp
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    var_cte                        shift and go to state 66
    termino                        shift and go to state 62
    exp                            shift and go to state 101
    factor                         shift and go to state 64
    factorAux                      shift and go to state 65

state 83

    (49) expresion -> exp DIFFERENT . exp
    (50) exp -> . termino
    (51) exp -> . termino PLUS exp
    (52) exp -> . termino MINUS exp
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    var_cte                        shift and go to state 66
    termino                        shift and go to state 62
    exp                            shift and go to state 102
    factor                         shift and go to state 64
    factorAux                      shift and go to state 65

state 84

    (47) expresion -> exp LOWERTHAN . exp
    (50) exp -> . termino
    (51) exp -> . termino PLUS exp
    (52) exp -> . termino MINUS exp
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    var_cte                        shift and go to state 66
    termino                        shift and go to state 62
    exp                            shift and go to state 103
    factor                         shift and go to state 64
    factorAux                      shift and go to state 65

state 85

    (55) termino -> factor DIVIDE . termino
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    factorAux                      shift and go to state 65
    var_cte                        shift and go to state 66
    termino                        shift and go to state 104
    factor                         shift and go to state 64

state 86

    (54) termino -> factor TIMES . termino
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    factorAux                      shift and go to state 65
    var_cte                        shift and go to state 66
    termino                        shift and go to state 105
    factor                         shift and go to state 64

state 87

    (45) escrituraAux -> CTE_STRING COMA . escrituraAux
    (42) escrituraAux -> . expresion
    (43) escrituraAux -> . CTE_STRING
    (44) escrituraAux -> . expresion COMA escrituraAux
    (45) escrituraAux -> . CTE_STRING COMA escrituraAux
    (46) expresion -> . exp
    (47) expresion -> . exp LOWERTHAN exp
    (48) expresion -> . exp MORETHAN exp
    (49) expresion -> . exp DIFFERENT exp
    (50) exp -> . termino
    (51) exp -> . termino PLUS exp
    (52) exp -> . termino MINUS exp
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    CTE_STRING      shift and go to state 68
    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    escrituraAux                   shift and go to state 106
    expresion                      shift and go to state 69
    var_cte                        shift and go to state 66
    termino                        shift and go to state 62
    exp                            shift and go to state 63
    factor                         shift and go to state 64
    factorAux                      shift and go to state 65

state 88

    (44) escrituraAux -> expresion COMA . escrituraAux
    (42) escrituraAux -> . expresion
    (43) escrituraAux -> . CTE_STRING
    (44) escrituraAux -> . expresion COMA escrituraAux
    (45) escrituraAux -> . CTE_STRING COMA escrituraAux
    (46) expresion -> . exp
    (47) expresion -> . exp LOWERTHAN exp
    (48) expresion -> . exp MORETHAN exp
    (49) expresion -> . exp DIFFERENT exp
    (50) exp -> . termino
    (51) exp -> . termino PLUS exp
    (52) exp -> . termino MINUS exp
    (53) termino -> . factor
    (54) termino -> . factor TIMES termino
    (55) termino -> . factor DIVIDE termino
    (56) factor -> . LPAREN expresion RPAREN
    (57) factor -> . factorAux
    (58) factorAux -> . PLUS var_cte
    (59) factorAux -> . MINUS var_cte
    (60) factorAux -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F

    CTE_STRING      shift and go to state 68
    LPAREN          shift and go to state 57
    PLUS            shift and go to state 61
    MINUS           shift and go to state 59
    ID              shift and go to state 67
    CTE_I           shift and go to state 58
    CTE_F           shift and go to state 60

    expresion                      shift and go to state 69
    escrituraAux                   shift and go to state 107
    var_cte                        shift and go to state 66
    termino                        shift and go to state 62
    exp                            shift and go to state 63
    factor                         shift and go to state 64
    factorAux                      shift and go to state 65

state 89

    (41) escritura -> PRINT LPAREN escrituraAux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 108


state 90

    (37) asignacion -> ID EQUAL expresion SEMICOLON .

    ID              reduce using rule 37 (asignacion -> ID EQUAL expresion SEMICOLON .)
    IF              reduce using rule 37 (asignacion -> ID EQUAL expresion SEMICOLON .)
    PRINT           reduce using rule 37 (asignacion -> ID EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 37 (asignacion -> ID EQUAL expresion SEMICOLON .)
    RBRACE          reduce using rule 37 (asignacion -> ID EQUAL expresion SEMICOLON .)


state 91

    (38) comparacion -> ID EQUAL EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 109


state 92

    (39) condicion -> IF LPAREN expresion RPAREN . bloque SEMICOLON
    (40) condicion -> IF LPAREN expresion RPAREN . bloque ELSE bloque SEMICOLON
    (19) bloque -> . LBRACE RBRACE
    (20) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 96

    bloque                         shift and go to state 110

state 93

    (21) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE .
    (25) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE . function
    (21) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE
    (22) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (23) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE
    (24) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE
    (25) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE function
    (26) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function
    (27) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function
    (28) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function

    $end            reduce using rule 21 (function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE .)
    FUNCTION        shift and go to state 17

    function                       shift and go to state 111

state 94

    (22) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars . bloqueAux RBRACE
    (26) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars . bloqueAux RBRACE function
    (29) bloqueAux -> . estatuto
    (30) bloqueAux -> . estatuto bloqueAux
    (32) estatuto -> . asignacion
    (33) estatuto -> . condicion
    (34) estatuto -> . escritura
    (35) estatuto -> . while
    (36) estatuto -> . comparacion
    (37) asignacion -> . ID EQUAL expresion SEMICOLON
    (39) condicion -> . IF LPAREN expresion RPAREN bloque SEMICOLON
    (40) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
    (41) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (31) while -> . WHILE LPAREN expresion RPAREN bloque
    (38) comparacion -> . ID EQUAL EQUAL expresion SEMICOLON

    ID              shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 33
    WHILE           shift and go to state 32

    asignacion                     shift and go to state 38
    estatuto                       shift and go to state 34
    bloqueAux                      shift and go to state 112
    while                          shift and go to state 40
    condicion                      shift and go to state 35
    comparacion                    shift and go to state 41
    escritura                      shift and go to state 42

state 95

    (23) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE . bloqueAux RBRACE
    (24) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE . vars bloqueAux RBRACE
    (27) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE . bloqueAux RBRACE function
    (28) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE . vars bloqueAux RBRACE function
    (29) bloqueAux -> . estatuto
    (30) bloqueAux -> . estatuto bloqueAux
    (7) vars -> . VAR varAux1
    (32) estatuto -> . asignacion
    (33) estatuto -> . condicion
    (34) estatuto -> . escritura
    (35) estatuto -> . while
    (36) estatuto -> . comparacion
    (37) asignacion -> . ID EQUAL expresion SEMICOLON
    (39) condicion -> . IF LPAREN expresion RPAREN bloque SEMICOLON
    (40) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
    (41) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (31) while -> . WHILE LPAREN expresion RPAREN bloque
    (38) comparacion -> . ID EQUAL EQUAL expresion SEMICOLON

    VAR             shift and go to state 7
    ID              shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 33
    WHILE           shift and go to state 32

    asignacion                     shift and go to state 38
    vars                           shift and go to state 113
    estatuto                       shift and go to state 34
    bloqueAux                      shift and go to state 114
    while                          shift and go to state 40
    condicion                      shift and go to state 35
    comparacion                    shift and go to state 41
    escritura                      shift and go to state 42

state 96

    (19) bloque -> LBRACE . RBRACE
    (20) bloque -> LBRACE . bloqueAux RBRACE
    (29) bloqueAux -> . estatuto
    (30) bloqueAux -> . estatuto bloqueAux
    (32) estatuto -> . asignacion
    (33) estatuto -> . condicion
    (34) estatuto -> . escritura
    (35) estatuto -> . while
    (36) estatuto -> . comparacion
    (37) asignacion -> . ID EQUAL expresion SEMICOLON
    (39) condicion -> . IF LPAREN expresion RPAREN bloque SEMICOLON
    (40) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
    (41) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (31) while -> . WHILE LPAREN expresion RPAREN bloque
    (38) comparacion -> . ID EQUAL EQUAL expresion SEMICOLON

    RBRACE          shift and go to state 115
    ID              shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 33
    WHILE           shift and go to state 32

    asignacion                     shift and go to state 38
    estatuto                       shift and go to state 34
    bloqueAux                      shift and go to state 116
    while                          shift and go to state 40
    condicion                      shift and go to state 35
    comparacion                    shift and go to state 41
    escritura                      shift and go to state 42

state 97

    (31) while -> WHILE LPAREN expresion RPAREN bloque .

    ID              reduce using rule 31 (while -> WHILE LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 31 (while -> WHILE LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 31 (while -> WHILE LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 31 (while -> WHILE LPAREN expresion RPAREN bloque .)
    RBRACE          reduce using rule 31 (while -> WHILE LPAREN expresion RPAREN bloque .)


state 98

    (56) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 56 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 56 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 56 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 56 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 56 (factor -> LPAREN expresion RPAREN .)
    COMA            reduce using rule 56 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 56 (factor -> LPAREN expresion RPAREN .)
    LOWERTHAN       reduce using rule 56 (factor -> LPAREN expresion RPAREN .)
    MORETHAN        reduce using rule 56 (factor -> LPAREN expresion RPAREN .)
    DIFFERENT       reduce using rule 56 (factor -> LPAREN expresion RPAREN .)


state 99

    (51) exp -> termino PLUS exp .

    LOWERTHAN       reduce using rule 51 (exp -> termino PLUS exp .)
    MORETHAN        reduce using rule 51 (exp -> termino PLUS exp .)
    DIFFERENT       reduce using rule 51 (exp -> termino PLUS exp .)
    SEMICOLON       reduce using rule 51 (exp -> termino PLUS exp .)
    RPAREN          reduce using rule 51 (exp -> termino PLUS exp .)
    COMA            reduce using rule 51 (exp -> termino PLUS exp .)


state 100

    (52) exp -> termino MINUS exp .

    LOWERTHAN       reduce using rule 52 (exp -> termino MINUS exp .)
    MORETHAN        reduce using rule 52 (exp -> termino MINUS exp .)
    DIFFERENT       reduce using rule 52 (exp -> termino MINUS exp .)
    SEMICOLON       reduce using rule 52 (exp -> termino MINUS exp .)
    RPAREN          reduce using rule 52 (exp -> termino MINUS exp .)
    COMA            reduce using rule 52 (exp -> termino MINUS exp .)


state 101

    (48) expresion -> exp MORETHAN exp .

    SEMICOLON       reduce using rule 48 (expresion -> exp MORETHAN exp .)
    RPAREN          reduce using rule 48 (expresion -> exp MORETHAN exp .)
    COMA            reduce using rule 48 (expresion -> exp MORETHAN exp .)


state 102

    (49) expresion -> exp DIFFERENT exp .

    SEMICOLON       reduce using rule 49 (expresion -> exp DIFFERENT exp .)
    RPAREN          reduce using rule 49 (expresion -> exp DIFFERENT exp .)
    COMA            reduce using rule 49 (expresion -> exp DIFFERENT exp .)


state 103

    (47) expresion -> exp LOWERTHAN exp .

    SEMICOLON       reduce using rule 47 (expresion -> exp LOWERTHAN exp .)
    RPAREN          reduce using rule 47 (expresion -> exp LOWERTHAN exp .)
    COMA            reduce using rule 47 (expresion -> exp LOWERTHAN exp .)


state 104

    (55) termino -> factor DIVIDE termino .

    PLUS            reduce using rule 55 (termino -> factor DIVIDE termino .)
    MINUS           reduce using rule 55 (termino -> factor DIVIDE termino .)
    RPAREN          reduce using rule 55 (termino -> factor DIVIDE termino .)
    COMA            reduce using rule 55 (termino -> factor DIVIDE termino .)
    SEMICOLON       reduce using rule 55 (termino -> factor DIVIDE termino .)
    LOWERTHAN       reduce using rule 55 (termino -> factor DIVIDE termino .)
    MORETHAN        reduce using rule 55 (termino -> factor DIVIDE termino .)
    DIFFERENT       reduce using rule 55 (termino -> factor DIVIDE termino .)


state 105

    (54) termino -> factor TIMES termino .

    PLUS            reduce using rule 54 (termino -> factor TIMES termino .)
    MINUS           reduce using rule 54 (termino -> factor TIMES termino .)
    RPAREN          reduce using rule 54 (termino -> factor TIMES termino .)
    COMA            reduce using rule 54 (termino -> factor TIMES termino .)
    SEMICOLON       reduce using rule 54 (termino -> factor TIMES termino .)
    LOWERTHAN       reduce using rule 54 (termino -> factor TIMES termino .)
    MORETHAN        reduce using rule 54 (termino -> factor TIMES termino .)
    DIFFERENT       reduce using rule 54 (termino -> factor TIMES termino .)


state 106

    (45) escrituraAux -> CTE_STRING COMA escrituraAux .

    RPAREN          reduce using rule 45 (escrituraAux -> CTE_STRING COMA escrituraAux .)


state 107

    (44) escrituraAux -> expresion COMA escrituraAux .

    RPAREN          reduce using rule 44 (escrituraAux -> expresion COMA escrituraAux .)


state 108

    (41) escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .

    ID              reduce using rule 41 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    IF              reduce using rule 41 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    PRINT           reduce using rule 41 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    WHILE           reduce using rule 41 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    RBRACE          reduce using rule 41 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)


state 109

    (38) comparacion -> ID EQUAL EQUAL expresion SEMICOLON .

    ID              reduce using rule 38 (comparacion -> ID EQUAL EQUAL expresion SEMICOLON .)
    IF              reduce using rule 38 (comparacion -> ID EQUAL EQUAL expresion SEMICOLON .)
    PRINT           reduce using rule 38 (comparacion -> ID EQUAL EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 38 (comparacion -> ID EQUAL EQUAL expresion SEMICOLON .)
    RBRACE          reduce using rule 38 (comparacion -> ID EQUAL EQUAL expresion SEMICOLON .)


state 110

    (39) condicion -> IF LPAREN expresion RPAREN bloque . SEMICOLON
    (40) condicion -> IF LPAREN expresion RPAREN bloque . ELSE bloque SEMICOLON

    SEMICOLON       shift and go to state 117
    ELSE            shift and go to state 118


state 111

    (25) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE function .

    $end            reduce using rule 25 (function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE function .)


state 112

    (22) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux . RBRACE
    (26) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux . RBRACE function

    RBRACE          shift and go to state 119


state 113

    (24) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars . bloqueAux RBRACE
    (28) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars . bloqueAux RBRACE function
    (29) bloqueAux -> . estatuto
    (30) bloqueAux -> . estatuto bloqueAux
    (32) estatuto -> . asignacion
    (33) estatuto -> . condicion
    (34) estatuto -> . escritura
    (35) estatuto -> . while
    (36) estatuto -> . comparacion
    (37) asignacion -> . ID EQUAL expresion SEMICOLON
    (39) condicion -> . IF LPAREN expresion RPAREN bloque SEMICOLON
    (40) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON
    (41) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (31) while -> . WHILE LPAREN expresion RPAREN bloque
    (38) comparacion -> . ID EQUAL EQUAL expresion SEMICOLON

    ID              shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 33
    WHILE           shift and go to state 32

    asignacion                     shift and go to state 38
    estatuto                       shift and go to state 34
    bloqueAux                      shift and go to state 120
    while                          shift and go to state 40
    condicion                      shift and go to state 35
    comparacion                    shift and go to state 41
    escritura                      shift and go to state 42

state 114

    (23) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux . RBRACE
    (27) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux . RBRACE function

    RBRACE          shift and go to state 121


state 115

    (19) bloque -> LBRACE RBRACE .

    ID              reduce using rule 19 (bloque -> LBRACE RBRACE .)
    IF              reduce using rule 19 (bloque -> LBRACE RBRACE .)
    PRINT           reduce using rule 19 (bloque -> LBRACE RBRACE .)
    WHILE           reduce using rule 19 (bloque -> LBRACE RBRACE .)
    RBRACE          reduce using rule 19 (bloque -> LBRACE RBRACE .)
    SEMICOLON       reduce using rule 19 (bloque -> LBRACE RBRACE .)
    ELSE            reduce using rule 19 (bloque -> LBRACE RBRACE .)


state 116

    (20) bloque -> LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 122


state 117

    (39) condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON .

    ID              reduce using rule 39 (condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON .)
    IF              reduce using rule 39 (condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON .)
    PRINT           reduce using rule 39 (condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON .)
    WHILE           reduce using rule 39 (condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON .)
    RBRACE          reduce using rule 39 (condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON .)


state 118

    (40) condicion -> IF LPAREN expresion RPAREN bloque ELSE . bloque SEMICOLON
    (19) bloque -> . LBRACE RBRACE
    (20) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 96

    bloque                         shift and go to state 123

state 119

    (22) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE .
    (26) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE . function
    (21) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE
    (22) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (23) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE
    (24) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE
    (25) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE function
    (26) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function
    (27) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function
    (28) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function

    $end            reduce using rule 22 (function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE .)
    FUNCTION        shift and go to state 17

    function                       shift and go to state 124

state 120

    (24) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux . RBRACE
    (28) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux . RBRACE function

    RBRACE          shift and go to state 125


state 121

    (23) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE .
    (27) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE . function
    (21) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE
    (22) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (23) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE
    (24) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE
    (25) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE function
    (26) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function
    (27) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function
    (28) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function

    $end            reduce using rule 23 (function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE .)
    FUNCTION        shift and go to state 17

    function                       shift and go to state 126

state 122

    (20) bloque -> LBRACE bloqueAux RBRACE .

    ID              reduce using rule 20 (bloque -> LBRACE bloqueAux RBRACE .)
    IF              reduce using rule 20 (bloque -> LBRACE bloqueAux RBRACE .)
    PRINT           reduce using rule 20 (bloque -> LBRACE bloqueAux RBRACE .)
    WHILE           reduce using rule 20 (bloque -> LBRACE bloqueAux RBRACE .)
    RBRACE          reduce using rule 20 (bloque -> LBRACE bloqueAux RBRACE .)
    SEMICOLON       reduce using rule 20 (bloque -> LBRACE bloqueAux RBRACE .)
    ELSE            reduce using rule 20 (bloque -> LBRACE bloqueAux RBRACE .)


state 123

    (40) condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque . SEMICOLON

    SEMICOLON       shift and go to state 127


state 124

    (26) function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function .

    $end            reduce using rule 26 (function -> FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function .)


state 125

    (24) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE .
    (28) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE . function
    (21) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE
    (22) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (23) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE
    (24) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE
    (25) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE RBRACE function
    (26) function -> . FUNCTION tipoFunc ID LPAREN RPAREN LBRACE vars bloqueAux RBRACE function
    (27) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function
    (28) function -> . FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function

    $end            reduce using rule 24 (function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE .)
    FUNCTION        shift and go to state 17

    function                       shift and go to state 128

state 126

    (27) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function .

    $end            reduce using rule 27 (function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE bloqueAux RBRACE function .)


state 127

    (40) condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON .

    ID              reduce using rule 40 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON .)
    IF              reduce using rule 40 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON .)
    PRINT           reduce using rule 40 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON .)
    WHILE           reduce using rule 40 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON .)
    RBRACE          reduce using rule 40 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON .)


state 128

    (28) function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function .

    $end            reduce using rule 28 (function -> FUNCTION tipoFunc ID LPAREN vars RPAREN LBRACE vars bloqueAux RBRACE function .)

