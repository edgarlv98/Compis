Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    OR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID COLON varsGlobal function main endPrograma
Rule 2     program -> PROGRAM ID COLON function main endPrograma
Rule 3     program -> PROGRAM ID COLON varsGlobal main endPrograma
Rule 4     program -> PROGRAM ID COLON main endPrograma
Rule 5     endPrograma -> <empty>
Rule 6     varsGlobal -> VAR varAuxGlobal1
Rule 7     varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON
Rule 8     varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1
Rule 9     varAuxGlobal2 -> ID
Rule 10    varAuxGlobal2 -> ID COMA varAuxGlobal2
Rule 11    varAuxGlobal2 -> ID LCORCH CTE_I RCORCH
Rule 12    varAuxGlobal2 -> ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
Rule 13    varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
Rule 14    varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2
Rule 15    main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
Rule 16    main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
Rule 17    nomMain -> MAIN
Rule 18    vars -> VAR varAux1
Rule 19    varAux1 -> tipo varAux2 SEMICOLON
Rule 20    varAux1 -> tipo varAux2 SEMICOLON varAux1
Rule 21    varAux2 -> ID push_var
Rule 22    varAux2 -> ID push_var COMA varAux2
Rule 23    varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo
Rule 24    varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
Rule 25    varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
Rule 26    varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2
Rule 27    push_var -> <empty>
Rule 28    push_arreglo -> <empty>
Rule 29    push_matriz -> <empty>
Rule 30    tipo -> INT
Rule 31    tipo -> FLOAT
Rule 32    tipo -> CHAR
Rule 33    tipoFunc -> INT
Rule 34    tipoFunc -> FLOAT
Rule 35    tipoFunc -> CHAR
Rule 36    tipoFunc -> VOID
Rule 37    bloque -> LBRACE RBRACE
Rule 38    bloque -> LBRACE bloqueAux RBRACE
Rule 39    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
Rule 40    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
Rule 41    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
Rule 42    function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
Rule 43    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
Rule 44    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
Rule 45    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
Rule 46    function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
Rule 47    endProc -> <empty>
Rule 48    param -> tipo ID paramAvarTable
Rule 49    param -> tipo ID paramAvarTable COMA param
Rule 50    param -> empty
Rule 51    paramAvarTable -> <empty>
Rule 52    empty -> <empty>
Rule 53    push_function -> <empty>
Rule 54    nomFunc -> ID push_function
Rule 55    bloqueAux -> estatuto
Rule 56    bloqueAux -> estatuto bloqueAux
Rule 57    while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
Rule 58    while1 -> <empty>
Rule 59    while2 -> <empty>
Rule 60    while3 -> <empty>
Rule 61    loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
Rule 62    estatuto -> asignacion
Rule 63    estatuto -> condicion
Rule 64    estatuto -> escritura
Rule 65    estatuto -> while
Rule 66    estatuto -> loopFromDo
Rule 67    estatuto -> comparacion
Rule 68    estatuto -> llamadaAFuncion
Rule 69    estatuto -> lectura
Rule 70    llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
Rule 71    llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
Rule 72    actualizaFuncion -> <empty>
Rule 73    gosub -> <empty>
Rule 74    generarEra -> <empty>
Rule 75    paramFuncion -> ID push_id2
Rule 76    paramFuncion -> ID push_id2 COMA paramFuncion
Rule 77    paramFuncion -> expresion
Rule 78    paramFuncion -> expresion COMA paramFuncion
Rule 79    paramFuncion -> empty
Rule 80    push_id2 -> <empty>
Rule 81    asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON
Rule 82    asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON
Rule 83    asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
Rule 84    asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
Rule 85    ver_dim -> <empty>
Rule 86    create_asign -> <empty>
Rule 87    comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
Rule 88    condicion -> IF LPAREN expresion RPAREN cond bloque condFinal
Rule 89    condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
Rule 90    cond -> <empty>
Rule 91    condElse -> <empty>
Rule 92    condFinal -> <empty>
Rule 93    escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
Rule 94    lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
Rule 95    quad_print -> <empty>
Rule 96    escrituraAux -> expresion
Rule 97    escrituraAux -> CTE_STRING push_cte
Rule 98    escrituraAux -> expresion COMA escrituraAux
Rule 99    escrituraAux -> CTE_STRING push_cte COMA escrituraAux
Rule 100   escrituraAux -> llamadaAFuncion
Rule 101   expresion -> exp
Rule 102   expresion -> exp comp exp quad_comp
Rule 103   comp -> LOWERTHAN push_poper
Rule 104   comp -> MORETHAN push_poper
Rule 105   comp -> DIFFERENT push_poper
Rule 106   comp -> DOUBLEEQUAL push_poper
Rule 107   comp -> LOWEREQUAL push_poper
Rule 108   comp -> MOREEQUAL push_poper
Rule 109   quad_comp -> <empty>
Rule 110   exp -> termino quad_term
Rule 111   exp -> termino quad_term exp1
Rule 112   exp1 -> PLUS push_poper exp
Rule 113   exp1 -> MINUS push_poper exp
Rule 114   quad_term -> <empty>
Rule 115   quad_fact -> <empty>
Rule 116   termino -> factor quad_fact
Rule 117   termino -> factor quad_fact termino1
Rule 118   termino1 -> TIMES push_poper termino
Rule 119   termino1 -> DIVIDE push_poper termino
Rule 120   factor -> LPAREN expresion RPAREN
Rule 121   factor -> factorAux
Rule 122   factorAux -> PLUS push_poper var_cte
Rule 123   factorAux -> MINUS push_poper var_cte
Rule 124   factorAux -> var_cte
Rule 125   push_id -> <empty>
Rule 126   push_cte -> <empty>
Rule 127   push_poper -> <empty>
Rule 128   var_cte -> ID push_id
Rule 129   var_cte -> CTE_I push_cte
Rule 130   var_cte -> CTE_F push_cte
Rule 131   var_cte -> CTE_STRING push_cte

Terminals, with rules where they appear

AND                  : 
CHAR                 : 32 35
COLON                : 1 2 3 4
COMA                 : 10 12 14 22 24 26 49 76 78 98 99
CTE_F                : 130
CTE_I                : 11 12 13 13 14 14 23 24 25 25 26 26 129
CTE_STRING           : 97 99 131
DIFFERENT            : 105
DIVIDE               : 119
DO                   : 61
DOUBLEEQUAL          : 87 106
ELSE                 : 89
EQUAL                : 61 81 82 83 84
FLOAT                : 31 34
FROM                 : 61
FUNCTION             : 39 40 41 42 43 44 45 46
ID                   : 1 2 3 4 9 10 11 12 13 14 21 22 23 24 25 26 48 49 54 61 70 71 75 76 81 82 83 83 84 84 87 94 128
IF                   : 88 89
INPUT                : 94
INT                  : 30 33
LBRACE               : 15 16 37 38 39 40 41 42 43 44 45 46 57 61
LCORCH               : 11 12 13 13 14 14 23 24 25 25 26 26 82 83 83 84 84 84
LOWEREQUAL           : 107
LOWERTHAN            : 103
LPAREN               : 15 16 39 40 41 42 43 44 45 46 57 61 61 70 71 88 89 93 94 120
MAIN                 : 17
MINUS                : 113 123
MOREEQUAL            : 108
MORETHAN             : 104
OR                   : 
PLUS                 : 112 122
PRINT                : 93
PROGRAM              : 1 2 3 4
RBRACE               : 15 16 37 38 39 40 41 42 43 44 45 46 57 61
RCORCH               : 11 12 13 13 14 14 23 24 25 25 26 26 82 83 83 84 84 84
RPAREN               : 15 16 39 40 41 42 43 44 45 46 57 61 61 70 71 88 89 93 94 120
SEMICOLON            : 7 8 19 20 71 81 82 83 84 87 93 94
TIMES                : 118
TO                   : 61
VAR                  : 6 18
VOID                 : 36
WHILE                : 57
error                : 

Nonterminals, with rules where they appear

actualizaFuncion     : 70 71
asignacion           : 62
bloque               : 88 89 89
bloqueAux            : 15 16 38 40 42 44 46 56 57 61
comp                 : 102
comparacion          : 67
cond                 : 88 89
condElse             : 89
condFinal            : 88 89
condicion            : 63
create_asign         : 81
empty                : 50 79
endProc              : 39 40 41 42 43 44 45 46
endPrograma          : 1 2 3 4
escritura            : 64
escrituraAux         : 93 98 99
estatuto             : 55 56
exp                  : 82 83 83 84 84 84 101 102 102 112 113
exp1                 : 111
expresion            : 57 61 61 70 77 78 81 82 87 88 89 96 98 120
factor               : 116 117
factorAux            : 121
function             : 1 2 41 42 45 46
generarEra           : 70 71
gosub                : 70 71
lectura              : 69
llamadaAFuncion      : 68 100
loopFromDo           : 66
main                 : 1 2 3 4
nomFunc              : 39 40 41 42 43 44 45 46
nomMain              : 15 16
param                : 43 44 45 46 49
paramAvarTable       : 48 49
paramFuncion         : 70 71 76 78
program              : 0
push_arreglo         : 23 24
push_cte             : 97 99 129 130 131
push_function        : 54
push_id              : 81 82 83 84 87 94 128
push_id2             : 75 76
push_matriz          : 25 26
push_poper           : 81 87 93 94 103 104 105 106 107 108 112 113 118 119 122 123
push_var             : 21 22 25 26
quad_comp            : 102
quad_fact            : 116 117
quad_print           : 93 94
quad_term            : 110 111
termino              : 110 111 118 119
termino1             : 117
tipo                 : 7 8 19 20 48 49
tipoFunc             : 39 40 41 42 43 44 45 46
varAux1              : 18 20
varAux2              : 19 20 22 24 26
varAuxGlobal1        : 6 8
varAuxGlobal2        : 7 8 10 12 14
var_cte              : 122 123 124
vars                 : 16 40 42 44 46
varsGlobal           : 1 3
ver_dim              : 82 83 84
while                : 65
while1               : 57
while2               : 57
while3               : 57

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID COLON varsGlobal function main endPrograma
    (2) program -> . PROGRAM ID COLON function main endPrograma
    (3) program -> . PROGRAM ID COLON varsGlobal main endPrograma
    (4) program -> . PROGRAM ID COLON main endPrograma

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID COLON varsGlobal function main endPrograma
    (2) program -> PROGRAM . ID COLON function main endPrograma
    (3) program -> PROGRAM . ID COLON varsGlobal main endPrograma
    (4) program -> PROGRAM . ID COLON main endPrograma

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . COLON varsGlobal function main endPrograma
    (2) program -> PROGRAM ID . COLON function main endPrograma
    (3) program -> PROGRAM ID . COLON varsGlobal main endPrograma
    (4) program -> PROGRAM ID . COLON main endPrograma

    COLON           shift and go to state 4


state 4

    (1) program -> PROGRAM ID COLON . varsGlobal function main endPrograma
    (2) program -> PROGRAM ID COLON . function main endPrograma
    (3) program -> PROGRAM ID COLON . varsGlobal main endPrograma
    (4) program -> PROGRAM ID COLON . main endPrograma
    (6) varsGlobal -> . VAR varAuxGlobal1
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (15) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (17) nomMain -> . MAIN

    VAR             shift and go to state 10
    FUNCTION        shift and go to state 5
    MAIN            shift and go to state 11

    function                       shift and go to state 9
    varsGlobal                     shift and go to state 7
    nomMain                        shift and go to state 6
    main                           shift and go to state 8

state 5

    (39) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> FUNCTION . tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> FUNCTION . tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (33) tipoFunc -> . INT
    (34) tipoFunc -> . FLOAT
    (35) tipoFunc -> . CHAR
    (36) tipoFunc -> . VOID

    INT             shift and go to state 12
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 13

    tipoFunc                       shift and go to state 16

state 6

    (15) main -> nomMain . LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> nomMain . LPAREN RPAREN LBRACE vars bloqueAux RBRACE

    LPAREN          shift and go to state 17


state 7

    (1) program -> PROGRAM ID COLON varsGlobal . function main endPrograma
    (3) program -> PROGRAM ID COLON varsGlobal . main endPrograma
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (15) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (17) nomMain -> . MAIN

    FUNCTION        shift and go to state 5
    MAIN            shift and go to state 11

    function                       shift and go to state 18
    nomMain                        shift and go to state 6
    main                           shift and go to state 19

state 8

    (4) program -> PROGRAM ID COLON main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 20

state 9

    (2) program -> PROGRAM ID COLON function . main endPrograma
    (15) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (17) nomMain -> . MAIN

    MAIN            shift and go to state 11

    nomMain                        shift and go to state 6
    main                           shift and go to state 21

state 10

    (6) varsGlobal -> VAR . varAuxGlobal1
    (7) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON
    (8) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON varAuxGlobal1
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAuxGlobal1                  shift and go to state 26
    tipo                           shift and go to state 22

state 11

    (17) nomMain -> MAIN .

    LPAREN          reduce using rule 17 (nomMain -> MAIN .)


state 12

    (33) tipoFunc -> INT .

    ID              reduce using rule 33 (tipoFunc -> INT .)


state 13

    (36) tipoFunc -> VOID .

    ID              reduce using rule 36 (tipoFunc -> VOID .)


state 14

    (34) tipoFunc -> FLOAT .

    ID              reduce using rule 34 (tipoFunc -> FLOAT .)


state 15

    (35) tipoFunc -> CHAR .

    ID              reduce using rule 35 (tipoFunc -> CHAR .)


state 16

    (39) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> FUNCTION tipoFunc . nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> FUNCTION tipoFunc . nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (54) nomFunc -> . ID push_function

    ID              shift and go to state 28

    nomFunc                        shift and go to state 27

state 17

    (15) main -> nomMain LPAREN . RPAREN LBRACE bloqueAux RBRACE
    (16) main -> nomMain LPAREN . RPAREN LBRACE vars bloqueAux RBRACE

    RPAREN          shift and go to state 29


state 18

    (1) program -> PROGRAM ID COLON varsGlobal function . main endPrograma
    (15) main -> . nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE
    (16) main -> . nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE
    (17) nomMain -> . MAIN

    MAIN            shift and go to state 11

    nomMain                        shift and go to state 6
    main                           shift and go to state 30

state 19

    (3) program -> PROGRAM ID COLON varsGlobal main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 31

state 20

    (4) program -> PROGRAM ID COLON main endPrograma .

    $end            reduce using rule 4 (program -> PROGRAM ID COLON main endPrograma .)


state 21

    (2) program -> PROGRAM ID COLON function main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 32

state 22

    (7) varAuxGlobal1 -> tipo . varAuxGlobal2 SEMICOLON
    (8) varAuxGlobal1 -> tipo . varAuxGlobal2 SEMICOLON varAuxGlobal1
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2
    (11) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 33

state 23

    (30) tipo -> INT .

    ID              reduce using rule 30 (tipo -> INT .)


state 24

    (31) tipo -> FLOAT .

    ID              reduce using rule 31 (tipo -> FLOAT .)


state 25

    (32) tipo -> CHAR .

    ID              reduce using rule 32 (tipo -> CHAR .)


state 26

    (6) varsGlobal -> VAR varAuxGlobal1 .

    FUNCTION        reduce using rule 6 (varsGlobal -> VAR varAuxGlobal1 .)
    MAIN            reduce using rule 6 (varsGlobal -> VAR varAuxGlobal1 .)


state 27

    (39) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> FUNCTION tipoFunc nomFunc . LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> FUNCTION tipoFunc nomFunc . LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    LPAREN          shift and go to state 35


state 28

    (54) nomFunc -> ID . push_function
    (53) push_function -> .

    LPAREN          reduce using rule 53 (push_function -> .)

    push_function                  shift and go to state 36

state 29

    (15) main -> nomMain LPAREN RPAREN . LBRACE bloqueAux RBRACE
    (16) main -> nomMain LPAREN RPAREN . LBRACE vars bloqueAux RBRACE

    LBRACE          shift and go to state 37


state 30

    (1) program -> PROGRAM ID COLON varsGlobal function main . endPrograma
    (5) endPrograma -> .

    $end            reduce using rule 5 (endPrograma -> .)

    endPrograma                    shift and go to state 38

state 31

    (3) program -> PROGRAM ID COLON varsGlobal main endPrograma .

    $end            reduce using rule 3 (program -> PROGRAM ID COLON varsGlobal main endPrograma .)


state 32

    (2) program -> PROGRAM ID COLON function main endPrograma .

    $end            reduce using rule 2 (program -> PROGRAM ID COLON function main endPrograma .)


state 33

    (7) varAuxGlobal1 -> tipo varAuxGlobal2 . SEMICOLON
    (8) varAuxGlobal1 -> tipo varAuxGlobal2 . SEMICOLON varAuxGlobal1

    SEMICOLON       shift and go to state 39


state 34

    (9) varAuxGlobal2 -> ID .
    (10) varAuxGlobal2 -> ID . COMA varAuxGlobal2
    (11) varAuxGlobal2 -> ID . LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> ID . LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> ID . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> ID . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    SEMICOLON       reduce using rule 9 (varAuxGlobal2 -> ID .)
    COMA            shift and go to state 41
    LCORCH          shift and go to state 40


state 35

    (39) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE RBRACE endProc
    (40) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE RBRACE endProc function
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN . RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE RBRACE endProc
    (44) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE RBRACE endProc function
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN . param RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (48) param -> . tipo ID paramAvarTable
    (49) param -> . tipo ID paramAvarTable COMA param
    (50) param -> . empty
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (52) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 42
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

  ! RPAREN          [ reduce using rule 52 (empty -> .) ]

    tipo                           shift and go to state 45
    param                          shift and go to state 43
    empty                          shift and go to state 44

state 36

    (54) nomFunc -> ID push_function .

    LPAREN          reduce using rule 54 (nomFunc -> ID push_function .)


state 37

    (15) main -> nomMain LPAREN RPAREN LBRACE . bloqueAux RBRACE
    (16) main -> nomMain LPAREN RPAREN LBRACE . vars bloqueAux RBRACE
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (18) vars -> . VAR varAux1
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (81) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (82) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON
    (83) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (88) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (93) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (87) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (94) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    VAR             shift and go to state 52
    ID              shift and go to state 54
    IF              shift and go to state 49
    PRINT           shift and go to state 47
    WHILE           shift and go to state 59
    FROM            shift and go to state 57
    INPUT           shift and go to state 53

    vars                           shift and go to state 46
    estatuto                       shift and go to state 48
    lectura                        shift and go to state 50
    condicion                      shift and go to state 51
    loopFromDo                     shift and go to state 55
    llamadaAFuncion                shift and go to state 56
    asignacion                     shift and go to state 58
    bloqueAux                      shift and go to state 60
    while                          shift and go to state 61
    comparacion                    shift and go to state 62
    escritura                      shift and go to state 63

state 38

    (1) program -> PROGRAM ID COLON varsGlobal function main endPrograma .

    $end            reduce using rule 1 (program -> PROGRAM ID COLON varsGlobal function main endPrograma .)


state 39

    (7) varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON .
    (8) varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON . varAuxGlobal1
    (7) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON
    (8) varAuxGlobal1 -> . tipo varAuxGlobal2 SEMICOLON varAuxGlobal1
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR

    FUNCTION        reduce using rule 7 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON .)
    MAIN            reduce using rule 7 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAuxGlobal1                  shift and go to state 64
    tipo                           shift and go to state 22

state 40

    (11) varAuxGlobal2 -> ID LCORCH . CTE_I RCORCH
    (12) varAuxGlobal2 -> ID LCORCH . CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> ID LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> ID LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    CTE_I           shift and go to state 65


state 41

    (10) varAuxGlobal2 -> ID COMA . varAuxGlobal2
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2
    (11) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 66

state 42

    (39) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE RBRACE endProc
    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE vars bloqueAux RBRACE endProc
    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE RBRACE endProc function
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN . LBRACE vars bloqueAux RBRACE endProc function

    LBRACE          shift and go to state 67


state 43

    (43) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE RBRACE endProc
    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE RBRACE endProc function
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param . RPAREN LBRACE vars bloqueAux RBRACE endProc function

    RPAREN          shift and go to state 68


state 44

    (50) param -> empty .

    RPAREN          reduce using rule 50 (param -> empty .)


state 45

    (48) param -> tipo . ID paramAvarTable
    (49) param -> tipo . ID paramAvarTable COMA param

    ID              shift and go to state 69


state 46

    (16) main -> nomMain LPAREN RPAREN LBRACE vars . bloqueAux RBRACE
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (81) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (82) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON
    (83) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (88) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (93) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (87) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (94) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 54
    IF              shift and go to state 49
    PRINT           shift and go to state 47
    WHILE           shift and go to state 59
    FROM            shift and go to state 57
    INPUT           shift and go to state 53

    estatuto                       shift and go to state 48
    condicion                      shift and go to state 51
    lectura                        shift and go to state 50
    loopFromDo                     shift and go to state 55
    llamadaAFuncion                shift and go to state 56
    asignacion                     shift and go to state 58
    bloqueAux                      shift and go to state 70
    while                          shift and go to state 61
    comparacion                    shift and go to state 62
    escritura                      shift and go to state 63

state 47

    (93) escritura -> PRINT . push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 71

state 48

    (55) bloqueAux -> estatuto .
    (56) bloqueAux -> estatuto . bloqueAux
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (81) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (82) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON
    (83) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (88) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (93) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (87) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (94) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    RBRACE          reduce using rule 55 (bloqueAux -> estatuto .)
    ID              shift and go to state 54
    IF              shift and go to state 49
    PRINT           shift and go to state 47
    WHILE           shift and go to state 59
    FROM            shift and go to state 57
    INPUT           shift and go to state 53

    estatuto                       shift and go to state 48
    condicion                      shift and go to state 51
    lectura                        shift and go to state 50
    loopFromDo                     shift and go to state 55
    llamadaAFuncion                shift and go to state 56
    asignacion                     shift and go to state 58
    bloqueAux                      shift and go to state 72
    while                          shift and go to state 61
    comparacion                    shift and go to state 62
    escritura                      shift and go to state 63

state 49

    (88) condicion -> IF . LPAREN expresion RPAREN cond bloque condFinal
    (89) condicion -> IF . LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal

    LPAREN          shift and go to state 73


state 50

    (69) estatuto -> lectura .

    ID              reduce using rule 69 (estatuto -> lectura .)
    IF              reduce using rule 69 (estatuto -> lectura .)
    PRINT           reduce using rule 69 (estatuto -> lectura .)
    WHILE           reduce using rule 69 (estatuto -> lectura .)
    FROM            reduce using rule 69 (estatuto -> lectura .)
    INPUT           reduce using rule 69 (estatuto -> lectura .)
    RBRACE          reduce using rule 69 (estatuto -> lectura .)


state 51

    (63) estatuto -> condicion .

    ID              reduce using rule 63 (estatuto -> condicion .)
    IF              reduce using rule 63 (estatuto -> condicion .)
    PRINT           reduce using rule 63 (estatuto -> condicion .)
    WHILE           reduce using rule 63 (estatuto -> condicion .)
    FROM            reduce using rule 63 (estatuto -> condicion .)
    INPUT           reduce using rule 63 (estatuto -> condicion .)
    RBRACE          reduce using rule 63 (estatuto -> condicion .)


state 52

    (18) vars -> VAR . varAux1
    (19) varAux1 -> . tipo varAux2 SEMICOLON
    (20) varAux1 -> . tipo varAux2 SEMICOLON varAux1
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAux1                        shift and go to state 75
    tipo                           shift and go to state 74

state 53

    (94) lectura -> INPUT . push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 76

state 54

    (81) asignacion -> ID . push_id EQUAL push_poper expresion create_asign SEMICOLON
    (82) asignacion -> ID . push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON
    (83) asignacion -> ID . push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> ID . push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (87) comparacion -> ID . push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (125) push_id -> .
    (72) actualizaFuncion -> .

    EQUAL           reduce using rule 125 (push_id -> .)
    LCORCH          reduce using rule 125 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 125 (push_id -> .)
    LPAREN          reduce using rule 72 (actualizaFuncion -> .)

    actualizaFuncion               shift and go to state 77
    push_id                        shift and go to state 78

state 55

    (66) estatuto -> loopFromDo .

    ID              reduce using rule 66 (estatuto -> loopFromDo .)
    IF              reduce using rule 66 (estatuto -> loopFromDo .)
    PRINT           reduce using rule 66 (estatuto -> loopFromDo .)
    WHILE           reduce using rule 66 (estatuto -> loopFromDo .)
    FROM            reduce using rule 66 (estatuto -> loopFromDo .)
    INPUT           reduce using rule 66 (estatuto -> loopFromDo .)
    RBRACE          reduce using rule 66 (estatuto -> loopFromDo .)


state 56

    (68) estatuto -> llamadaAFuncion .

    ID              reduce using rule 68 (estatuto -> llamadaAFuncion .)
    IF              reduce using rule 68 (estatuto -> llamadaAFuncion .)
    PRINT           reduce using rule 68 (estatuto -> llamadaAFuncion .)
    WHILE           reduce using rule 68 (estatuto -> llamadaAFuncion .)
    FROM            reduce using rule 68 (estatuto -> llamadaAFuncion .)
    INPUT           reduce using rule 68 (estatuto -> llamadaAFuncion .)
    RBRACE          reduce using rule 68 (estatuto -> llamadaAFuncion .)


state 57

    (61) loopFromDo -> FROM . LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    LPAREN          shift and go to state 79


state 58

    (62) estatuto -> asignacion .

    ID              reduce using rule 62 (estatuto -> asignacion .)
    IF              reduce using rule 62 (estatuto -> asignacion .)
    PRINT           reduce using rule 62 (estatuto -> asignacion .)
    WHILE           reduce using rule 62 (estatuto -> asignacion .)
    FROM            reduce using rule 62 (estatuto -> asignacion .)
    INPUT           reduce using rule 62 (estatuto -> asignacion .)
    RBRACE          reduce using rule 62 (estatuto -> asignacion .)


state 59

    (57) while -> WHILE . while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (58) while1 -> .

    LPAREN          reduce using rule 58 (while1 -> .)

    while1                         shift and go to state 80

state 60

    (15) main -> nomMain LPAREN RPAREN LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 81


state 61

    (65) estatuto -> while .

    ID              reduce using rule 65 (estatuto -> while .)
    IF              reduce using rule 65 (estatuto -> while .)
    PRINT           reduce using rule 65 (estatuto -> while .)
    WHILE           reduce using rule 65 (estatuto -> while .)
    FROM            reduce using rule 65 (estatuto -> while .)
    INPUT           reduce using rule 65 (estatuto -> while .)
    RBRACE          reduce using rule 65 (estatuto -> while .)


state 62

    (67) estatuto -> comparacion .

    ID              reduce using rule 67 (estatuto -> comparacion .)
    IF              reduce using rule 67 (estatuto -> comparacion .)
    PRINT           reduce using rule 67 (estatuto -> comparacion .)
    WHILE           reduce using rule 67 (estatuto -> comparacion .)
    FROM            reduce using rule 67 (estatuto -> comparacion .)
    INPUT           reduce using rule 67 (estatuto -> comparacion .)
    RBRACE          reduce using rule 67 (estatuto -> comparacion .)


state 63

    (64) estatuto -> escritura .

    ID              reduce using rule 64 (estatuto -> escritura .)
    IF              reduce using rule 64 (estatuto -> escritura .)
    PRINT           reduce using rule 64 (estatuto -> escritura .)
    WHILE           reduce using rule 64 (estatuto -> escritura .)
    FROM            reduce using rule 64 (estatuto -> escritura .)
    INPUT           reduce using rule 64 (estatuto -> escritura .)
    RBRACE          reduce using rule 64 (estatuto -> escritura .)


state 64

    (8) varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1 .

    FUNCTION        reduce using rule 8 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1 .)
    MAIN            reduce using rule 8 (varAuxGlobal1 -> tipo varAuxGlobal2 SEMICOLON varAuxGlobal1 .)


state 65

    (11) varAuxGlobal2 -> ID LCORCH CTE_I . RCORCH
    (12) varAuxGlobal2 -> ID LCORCH CTE_I . RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> ID LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> ID LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    RCORCH          shift and go to state 82


state 66

    (10) varAuxGlobal2 -> ID COMA varAuxGlobal2 .

    SEMICOLON       reduce using rule 10 (varAuxGlobal2 -> ID COMA varAuxGlobal2 .)


state 67

    (39) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . RBRACE endProc
    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . vars bloqueAux RBRACE endProc
    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . RBRACE endProc function
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE . vars bloqueAux RBRACE endProc function
    (18) vars -> . VAR varAux1

    RBRACE          shift and go to state 83
    VAR             shift and go to state 52

    vars                           shift and go to state 84

state 68

    (43) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE RBRACE endProc
    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE RBRACE endProc function
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN . LBRACE vars bloqueAux RBRACE endProc function

    LBRACE          shift and go to state 85


state 69

    (48) param -> tipo ID . paramAvarTable
    (49) param -> tipo ID . paramAvarTable COMA param
    (51) paramAvarTable -> .

    COMA            reduce using rule 51 (paramAvarTable -> .)
    RPAREN          reduce using rule 51 (paramAvarTable -> .)

    paramAvarTable                 shift and go to state 86

state 70

    (16) main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux . RBRACE

    RBRACE          shift and go to state 87


state 71

    (93) escritura -> PRINT push_poper . LPAREN escrituraAux RPAREN quad_print SEMICOLON

    LPAREN          shift and go to state 88


state 72

    (56) bloqueAux -> estatuto bloqueAux .

    RBRACE          reduce using rule 56 (bloqueAux -> estatuto bloqueAux .)


state 73

    (88) condicion -> IF LPAREN . expresion RPAREN cond bloque condFinal
    (89) condicion -> IF LPAREN . expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    expresion                      shift and go to state 99
    factor                         shift and go to state 93
    termino                        shift and go to state 90
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101
    var_cte                        shift and go to state 89

state 74

    (19) varAux1 -> tipo . varAux2 SEMICOLON
    (20) varAux1 -> tipo . varAux2 SEMICOLON varAux1
    (21) varAux2 -> . ID push_var
    (22) varAux2 -> . ID push_var COMA varAux2
    (23) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo
    (24) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (25) varAux2 -> . ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> . ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    ID              shift and go to state 103

    varAux2                        shift and go to state 102

state 75

    (18) vars -> VAR varAux1 .

    ID              reduce using rule 18 (vars -> VAR varAux1 .)
    IF              reduce using rule 18 (vars -> VAR varAux1 .)
    PRINT           reduce using rule 18 (vars -> VAR varAux1 .)
    WHILE           reduce using rule 18 (vars -> VAR varAux1 .)
    FROM            reduce using rule 18 (vars -> VAR varAux1 .)
    INPUT           reduce using rule 18 (vars -> VAR varAux1 .)


state 76

    (94) lectura -> INPUT push_poper . LPAREN ID push_id RPAREN quad_print SEMICOLON

    LPAREN          shift and go to state 104


state 77

    (70) llamadaAFuncion -> ID actualizaFuncion . generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> ID actualizaFuncion . generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (74) generarEra -> .

    LPAREN          reduce using rule 74 (generarEra -> .)

    generarEra                     shift and go to state 105

state 78

    (81) asignacion -> ID push_id . EQUAL push_poper expresion create_asign SEMICOLON
    (82) asignacion -> ID push_id . LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON
    (83) asignacion -> ID push_id . LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> ID push_id . LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (87) comparacion -> ID push_id . DOUBLEEQUAL push_poper expresion SEMICOLON

    EQUAL           shift and go to state 108
    LCORCH          shift and go to state 107
    DOUBLEEQUAL     shift and go to state 106


state 79

    (61) loopFromDo -> FROM LPAREN . ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    ID              shift and go to state 109


state 80

    (57) while -> WHILE while1 . LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3

    LPAREN          shift and go to state 110


state 81

    (15) main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE .

    $end            reduce using rule 15 (main -> nomMain LPAREN RPAREN LBRACE bloqueAux RBRACE .)


state 82

    (11) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH .
    (12) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH . COMA varAuxGlobal2
    (13) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH COMA varAuxGlobal2

    SEMICOLON       reduce using rule 11 (varAuxGlobal2 -> ID LCORCH CTE_I RCORCH .)
    COMA            shift and go to state 112
    LCORCH          shift and go to state 111


state 83

    (39) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE . endProc
    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE . endProc function
    (47) endProc -> .

    FUNCTION        reduce using rule 47 (endProc -> .)
    MAIN            reduce using rule 47 (endProc -> .)

    endProc                        shift and go to state 113

state 84

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars . bloqueAux RBRACE endProc
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars . bloqueAux RBRACE endProc function
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (81) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (82) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON
    (83) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (88) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (93) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (87) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (94) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 54
    IF              shift and go to state 49
    PRINT           shift and go to state 47
    WHILE           shift and go to state 59
    FROM            shift and go to state 57
    INPUT           shift and go to state 53

    estatuto                       shift and go to state 48
    condicion                      shift and go to state 51
    lectura                        shift and go to state 50
    loopFromDo                     shift and go to state 55
    llamadaAFuncion                shift and go to state 56
    asignacion                     shift and go to state 58
    bloqueAux                      shift and go to state 114
    while                          shift and go to state 61
    comparacion                    shift and go to state 62
    escritura                      shift and go to state 63

state 85

    (43) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . RBRACE endProc
    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . vars bloqueAux RBRACE endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . RBRACE endProc function
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE . vars bloqueAux RBRACE endProc function
    (18) vars -> . VAR varAux1

    RBRACE          shift and go to state 115
    VAR             shift and go to state 52

    vars                           shift and go to state 116

state 86

    (48) param -> tipo ID paramAvarTable .
    (49) param -> tipo ID paramAvarTable . COMA param

    RPAREN          reduce using rule 48 (param -> tipo ID paramAvarTable .)
    COMA            shift and go to state 117


state 87

    (16) main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE .

    $end            reduce using rule 16 (main -> nomMain LPAREN RPAREN LBRACE vars bloqueAux RBRACE .)


state 88

    (93) escritura -> PRINT push_poper LPAREN . escrituraAux RPAREN quad_print SEMICOLON
    (96) escrituraAux -> . expresion
    (97) escrituraAux -> . CTE_STRING push_cte
    (98) escrituraAux -> . expresion COMA escrituraAux
    (99) escrituraAux -> . CTE_STRING push_cte COMA escrituraAux
    (100) escrituraAux -> . llamadaAFuncion
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    CTE_STRING      shift and go to state 118
    ID              shift and go to state 120
    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94

    termino                        shift and go to state 90
    factor                         shift and go to state 93
    expresion                      shift and go to state 119
    var_cte                        shift and go to state 89
    escrituraAux                   shift and go to state 121
    llamadaAFuncion                shift and go to state 122
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101

state 89

    (124) factorAux -> var_cte .

    TIMES           reduce using rule 124 (factorAux -> var_cte .)
    DIVIDE          reduce using rule 124 (factorAux -> var_cte .)
    PLUS            reduce using rule 124 (factorAux -> var_cte .)
    MINUS           reduce using rule 124 (factorAux -> var_cte .)
    LOWERTHAN       reduce using rule 124 (factorAux -> var_cte .)
    MORETHAN        reduce using rule 124 (factorAux -> var_cte .)
    DIFFERENT       reduce using rule 124 (factorAux -> var_cte .)
    DOUBLEEQUAL     reduce using rule 124 (factorAux -> var_cte .)
    LOWEREQUAL      reduce using rule 124 (factorAux -> var_cte .)
    MOREEQUAL       reduce using rule 124 (factorAux -> var_cte .)
    RPAREN          reduce using rule 124 (factorAux -> var_cte .)
    COMA            reduce using rule 124 (factorAux -> var_cte .)
    RCORCH          reduce using rule 124 (factorAux -> var_cte .)
    SEMICOLON       reduce using rule 124 (factorAux -> var_cte .)
    ID              reduce using rule 124 (factorAux -> var_cte .)
    IF              reduce using rule 124 (factorAux -> var_cte .)
    PRINT           reduce using rule 124 (factorAux -> var_cte .)
    WHILE           reduce using rule 124 (factorAux -> var_cte .)
    FROM            reduce using rule 124 (factorAux -> var_cte .)
    INPUT           reduce using rule 124 (factorAux -> var_cte .)
    RBRACE          reduce using rule 124 (factorAux -> var_cte .)


state 90

    (110) exp -> termino . quad_term
    (111) exp -> termino . quad_term exp1
    (114) quad_term -> .

    PLUS            reduce using rule 114 (quad_term -> .)
    MINUS           reduce using rule 114 (quad_term -> .)
    LOWERTHAN       reduce using rule 114 (quad_term -> .)
    MORETHAN        reduce using rule 114 (quad_term -> .)
    DIFFERENT       reduce using rule 114 (quad_term -> .)
    DOUBLEEQUAL     reduce using rule 114 (quad_term -> .)
    LOWEREQUAL      reduce using rule 114 (quad_term -> .)
    MOREEQUAL       reduce using rule 114 (quad_term -> .)
    RPAREN          reduce using rule 114 (quad_term -> .)
    COMA            reduce using rule 114 (quad_term -> .)
    RCORCH          reduce using rule 114 (quad_term -> .)
    SEMICOLON       reduce using rule 114 (quad_term -> .)
    ID              reduce using rule 114 (quad_term -> .)
    IF              reduce using rule 114 (quad_term -> .)
    PRINT           reduce using rule 114 (quad_term -> .)
    WHILE           reduce using rule 114 (quad_term -> .)
    FROM            reduce using rule 114 (quad_term -> .)
    INPUT           reduce using rule 114 (quad_term -> .)
    RBRACE          reduce using rule 114 (quad_term -> .)

    quad_term                      shift and go to state 123

state 91

    (123) factorAux -> MINUS . push_poper var_cte
    (127) push_poper -> .

    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 124

state 92

    (122) factorAux -> PLUS . push_poper var_cte
    (127) push_poper -> .

    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 125

state 93

    (116) termino -> factor . quad_fact
    (117) termino -> factor . quad_fact termino1
    (115) quad_fact -> .

    TIMES           reduce using rule 115 (quad_fact -> .)
    DIVIDE          reduce using rule 115 (quad_fact -> .)
    PLUS            reduce using rule 115 (quad_fact -> .)
    MINUS           reduce using rule 115 (quad_fact -> .)
    LOWERTHAN       reduce using rule 115 (quad_fact -> .)
    MORETHAN        reduce using rule 115 (quad_fact -> .)
    DIFFERENT       reduce using rule 115 (quad_fact -> .)
    DOUBLEEQUAL     reduce using rule 115 (quad_fact -> .)
    LOWEREQUAL      reduce using rule 115 (quad_fact -> .)
    MOREEQUAL       reduce using rule 115 (quad_fact -> .)
    RPAREN          reduce using rule 115 (quad_fact -> .)
    COMA            reduce using rule 115 (quad_fact -> .)
    RCORCH          reduce using rule 115 (quad_fact -> .)
    SEMICOLON       reduce using rule 115 (quad_fact -> .)
    ID              reduce using rule 115 (quad_fact -> .)
    IF              reduce using rule 115 (quad_fact -> .)
    PRINT           reduce using rule 115 (quad_fact -> .)
    WHILE           reduce using rule 115 (quad_fact -> .)
    FROM            reduce using rule 115 (quad_fact -> .)
    INPUT           reduce using rule 115 (quad_fact -> .)
    RBRACE          reduce using rule 115 (quad_fact -> .)

    quad_fact                      shift and go to state 126

state 94

    (130) var_cte -> CTE_F . push_cte
    (126) push_cte -> .

    TIMES           reduce using rule 126 (push_cte -> .)
    DIVIDE          reduce using rule 126 (push_cte -> .)
    PLUS            reduce using rule 126 (push_cte -> .)
    MINUS           reduce using rule 126 (push_cte -> .)
    LOWERTHAN       reduce using rule 126 (push_cte -> .)
    MORETHAN        reduce using rule 126 (push_cte -> .)
    DIFFERENT       reduce using rule 126 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 126 (push_cte -> .)
    LOWEREQUAL      reduce using rule 126 (push_cte -> .)
    MOREEQUAL       reduce using rule 126 (push_cte -> .)
    RPAREN          reduce using rule 126 (push_cte -> .)
    COMA            reduce using rule 126 (push_cte -> .)
    RCORCH          reduce using rule 126 (push_cte -> .)
    SEMICOLON       reduce using rule 126 (push_cte -> .)
    ID              reduce using rule 126 (push_cte -> .)
    IF              reduce using rule 126 (push_cte -> .)
    PRINT           reduce using rule 126 (push_cte -> .)
    WHILE           reduce using rule 126 (push_cte -> .)
    FROM            reduce using rule 126 (push_cte -> .)
    INPUT           reduce using rule 126 (push_cte -> .)
    RBRACE          reduce using rule 126 (push_cte -> .)

    push_cte                       shift and go to state 127

state 95

    (131) var_cte -> CTE_STRING . push_cte
    (126) push_cte -> .

    TIMES           reduce using rule 126 (push_cte -> .)
    DIVIDE          reduce using rule 126 (push_cte -> .)
    PLUS            reduce using rule 126 (push_cte -> .)
    MINUS           reduce using rule 126 (push_cte -> .)
    LOWERTHAN       reduce using rule 126 (push_cte -> .)
    MORETHAN        reduce using rule 126 (push_cte -> .)
    DIFFERENT       reduce using rule 126 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 126 (push_cte -> .)
    LOWEREQUAL      reduce using rule 126 (push_cte -> .)
    MOREEQUAL       reduce using rule 126 (push_cte -> .)
    RPAREN          reduce using rule 126 (push_cte -> .)
    RCORCH          reduce using rule 126 (push_cte -> .)
    COMA            reduce using rule 126 (push_cte -> .)
    SEMICOLON       reduce using rule 126 (push_cte -> .)
    ID              reduce using rule 126 (push_cte -> .)
    IF              reduce using rule 126 (push_cte -> .)
    PRINT           reduce using rule 126 (push_cte -> .)
    WHILE           reduce using rule 126 (push_cte -> .)
    FROM            reduce using rule 126 (push_cte -> .)
    INPUT           reduce using rule 126 (push_cte -> .)
    RBRACE          reduce using rule 126 (push_cte -> .)

    push_cte                       shift and go to state 128

state 96

    (129) var_cte -> CTE_I . push_cte
    (126) push_cte -> .

    TIMES           reduce using rule 126 (push_cte -> .)
    DIVIDE          reduce using rule 126 (push_cte -> .)
    PLUS            reduce using rule 126 (push_cte -> .)
    MINUS           reduce using rule 126 (push_cte -> .)
    LOWERTHAN       reduce using rule 126 (push_cte -> .)
    MORETHAN        reduce using rule 126 (push_cte -> .)
    DIFFERENT       reduce using rule 126 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 126 (push_cte -> .)
    LOWEREQUAL      reduce using rule 126 (push_cte -> .)
    MOREEQUAL       reduce using rule 126 (push_cte -> .)
    RPAREN          reduce using rule 126 (push_cte -> .)
    COMA            reduce using rule 126 (push_cte -> .)
    RCORCH          reduce using rule 126 (push_cte -> .)
    SEMICOLON       reduce using rule 126 (push_cte -> .)
    ID              reduce using rule 126 (push_cte -> .)
    IF              reduce using rule 126 (push_cte -> .)
    PRINT           reduce using rule 126 (push_cte -> .)
    WHILE           reduce using rule 126 (push_cte -> .)
    FROM            reduce using rule 126 (push_cte -> .)
    INPUT           reduce using rule 126 (push_cte -> .)
    RBRACE          reduce using rule 126 (push_cte -> .)

    push_cte                       shift and go to state 129

state 97

    (120) factor -> LPAREN . expresion RPAREN
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    expresion                      shift and go to state 130
    factor                         shift and go to state 93
    termino                        shift and go to state 90
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101
    var_cte                        shift and go to state 89

state 98

    (128) var_cte -> ID . push_id
    (125) push_id -> .

    TIMES           reduce using rule 125 (push_id -> .)
    DIVIDE          reduce using rule 125 (push_id -> .)
    PLUS            reduce using rule 125 (push_id -> .)
    MINUS           reduce using rule 125 (push_id -> .)
    LOWERTHAN       reduce using rule 125 (push_id -> .)
    MORETHAN        reduce using rule 125 (push_id -> .)
    DIFFERENT       reduce using rule 125 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 125 (push_id -> .)
    LOWEREQUAL      reduce using rule 125 (push_id -> .)
    MOREEQUAL       reduce using rule 125 (push_id -> .)
    RPAREN          reduce using rule 125 (push_id -> .)
    RCORCH          reduce using rule 125 (push_id -> .)
    COMA            reduce using rule 125 (push_id -> .)
    SEMICOLON       reduce using rule 125 (push_id -> .)
    ID              reduce using rule 125 (push_id -> .)
    IF              reduce using rule 125 (push_id -> .)
    PRINT           reduce using rule 125 (push_id -> .)
    WHILE           reduce using rule 125 (push_id -> .)
    FROM            reduce using rule 125 (push_id -> .)
    INPUT           reduce using rule 125 (push_id -> .)
    RBRACE          reduce using rule 125 (push_id -> .)

    push_id                        shift and go to state 131

state 99

    (88) condicion -> IF LPAREN expresion . RPAREN cond bloque condFinal
    (89) condicion -> IF LPAREN expresion . RPAREN cond bloque ELSE condElse bloque condFinal

    RPAREN          shift and go to state 132


state 100

    (101) expresion -> exp .
    (102) expresion -> exp . comp exp quad_comp
    (103) comp -> . LOWERTHAN push_poper
    (104) comp -> . MORETHAN push_poper
    (105) comp -> . DIFFERENT push_poper
    (106) comp -> . DOUBLEEQUAL push_poper
    (107) comp -> . LOWEREQUAL push_poper
    (108) comp -> . MOREEQUAL push_poper

    SEMICOLON       reduce using rule 101 (expresion -> exp .)
    RPAREN          reduce using rule 101 (expresion -> exp .)
    COMA            reduce using rule 101 (expresion -> exp .)
    ID              reduce using rule 101 (expresion -> exp .)
    IF              reduce using rule 101 (expresion -> exp .)
    PRINT           reduce using rule 101 (expresion -> exp .)
    WHILE           reduce using rule 101 (expresion -> exp .)
    FROM            reduce using rule 101 (expresion -> exp .)
    INPUT           reduce using rule 101 (expresion -> exp .)
    RBRACE          reduce using rule 101 (expresion -> exp .)
    LOWERTHAN       shift and go to state 136
    MORETHAN        shift and go to state 139
    DIFFERENT       shift and go to state 134
    DOUBLEEQUAL     shift and go to state 135
    LOWEREQUAL      shift and go to state 138
    MOREEQUAL       shift and go to state 133

    comp                           shift and go to state 137

state 101

    (121) factor -> factorAux .

    TIMES           reduce using rule 121 (factor -> factorAux .)
    DIVIDE          reduce using rule 121 (factor -> factorAux .)
    PLUS            reduce using rule 121 (factor -> factorAux .)
    MINUS           reduce using rule 121 (factor -> factorAux .)
    RCORCH          reduce using rule 121 (factor -> factorAux .)
    RPAREN          reduce using rule 121 (factor -> factorAux .)
    COMA            reduce using rule 121 (factor -> factorAux .)
    SEMICOLON       reduce using rule 121 (factor -> factorAux .)
    ID              reduce using rule 121 (factor -> factorAux .)
    IF              reduce using rule 121 (factor -> factorAux .)
    PRINT           reduce using rule 121 (factor -> factorAux .)
    WHILE           reduce using rule 121 (factor -> factorAux .)
    FROM            reduce using rule 121 (factor -> factorAux .)
    INPUT           reduce using rule 121 (factor -> factorAux .)
    RBRACE          reduce using rule 121 (factor -> factorAux .)
    LOWERTHAN       reduce using rule 121 (factor -> factorAux .)
    MORETHAN        reduce using rule 121 (factor -> factorAux .)
    DIFFERENT       reduce using rule 121 (factor -> factorAux .)
    DOUBLEEQUAL     reduce using rule 121 (factor -> factorAux .)
    LOWEREQUAL      reduce using rule 121 (factor -> factorAux .)
    MOREEQUAL       reduce using rule 121 (factor -> factorAux .)


state 102

    (19) varAux1 -> tipo varAux2 . SEMICOLON
    (20) varAux1 -> tipo varAux2 . SEMICOLON varAux1

    SEMICOLON       shift and go to state 140


state 103

    (21) varAux2 -> ID . push_var
    (22) varAux2 -> ID . push_var COMA varAux2
    (23) varAux2 -> ID . LCORCH CTE_I RCORCH push_arreglo
    (24) varAux2 -> ID . LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (25) varAux2 -> ID . push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> ID . push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2
    (27) push_var -> .

  ! shift/reduce conflict for LCORCH resolved as shift
    LCORCH          shift and go to state 141
    COMA            reduce using rule 27 (push_var -> .)
    SEMICOLON       reduce using rule 27 (push_var -> .)

  ! LCORCH          [ reduce using rule 27 (push_var -> .) ]

    push_var                       shift and go to state 142

state 104

    (94) lectura -> INPUT push_poper LPAREN . ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 143


state 105

    (70) llamadaAFuncion -> ID actualizaFuncion generarEra . LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> ID actualizaFuncion generarEra . LPAREN paramFuncion gosub RPAREN SEMICOLON

    LPAREN          shift and go to state 144


state 106

    (87) comparacion -> ID push_id DOUBLEEQUAL . push_poper expresion SEMICOLON
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)
    PLUS            reduce using rule 127 (push_poper -> .)
    MINUS           reduce using rule 127 (push_poper -> .)
    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 145

state 107

    (82) asignacion -> ID push_id LCORCH . exp RCORCH ver_dim EQUAL expresion SEMICOLON
    (83) asignacion -> ID push_id LCORCH . exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> ID push_id LCORCH . exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    factor                         shift and go to state 93
    termino                        shift and go to state 90
    exp                            shift and go to state 146
    factorAux                      shift and go to state 101
    var_cte                        shift and go to state 89

state 108

    (81) asignacion -> ID push_id EQUAL . push_poper expresion create_asign SEMICOLON
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)
    PLUS            reduce using rule 127 (push_poper -> .)
    MINUS           reduce using rule 127 (push_poper -> .)
    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 147

state 109

    (61) loopFromDo -> FROM LPAREN ID . EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    EQUAL           shift and go to state 148


state 110

    (57) while -> WHILE while1 LPAREN . expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    expresion                      shift and go to state 149
    factor                         shift and go to state 93
    var_cte                        shift and go to state 89
    termino                        shift and go to state 90
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101

state 111

    (13) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH
    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH COMA varAuxGlobal2

    CTE_I           shift and go to state 150


state 112

    (12) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH COMA . varAuxGlobal2
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2
    (11) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 151

state 113

    (39) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc .
    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc . function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    MAIN            reduce using rule 39 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 152

state 114

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux . RBRACE endProc
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux . RBRACE endProc function

    RBRACE          shift and go to state 153


state 115

    (43) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE . endProc
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE . endProc function
    (47) endProc -> .

    FUNCTION        reduce using rule 47 (endProc -> .)
    MAIN            reduce using rule 47 (endProc -> .)

    endProc                        shift and go to state 154

state 116

    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars . bloqueAux RBRACE endProc
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars . bloqueAux RBRACE endProc function
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (81) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (82) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON
    (83) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (88) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (93) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (87) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (94) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 54
    IF              shift and go to state 49
    PRINT           shift and go to state 47
    WHILE           shift and go to state 59
    FROM            shift and go to state 57
    INPUT           shift and go to state 53

    estatuto                       shift and go to state 48
    condicion                      shift and go to state 51
    lectura                        shift and go to state 50
    loopFromDo                     shift and go to state 55
    llamadaAFuncion                shift and go to state 56
    asignacion                     shift and go to state 58
    bloqueAux                      shift and go to state 155
    while                          shift and go to state 61
    comparacion                    shift and go to state 62
    escritura                      shift and go to state 63

state 117

    (49) param -> tipo ID paramAvarTable COMA . param
    (48) param -> . tipo ID paramAvarTable
    (49) param -> . tipo ID paramAvarTable COMA param
    (50) param -> . empty
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (52) empty -> .

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    RPAREN          reduce using rule 52 (empty -> .)

    empty                          shift and go to state 44
    param                          shift and go to state 156
    tipo                           shift and go to state 45

state 118

    (97) escrituraAux -> CTE_STRING . push_cte
    (99) escrituraAux -> CTE_STRING . push_cte COMA escrituraAux
    (131) var_cte -> CTE_STRING . push_cte
    (126) push_cte -> .

    COMA            reduce using rule 126 (push_cte -> .)
    RPAREN          reduce using rule 126 (push_cte -> .)
    TIMES           reduce using rule 126 (push_cte -> .)
    DIVIDE          reduce using rule 126 (push_cte -> .)
    PLUS            reduce using rule 126 (push_cte -> .)
    MINUS           reduce using rule 126 (push_cte -> .)
    LOWERTHAN       reduce using rule 126 (push_cte -> .)
    MORETHAN        reduce using rule 126 (push_cte -> .)
    DIFFERENT       reduce using rule 126 (push_cte -> .)
    DOUBLEEQUAL     reduce using rule 126 (push_cte -> .)
    LOWEREQUAL      reduce using rule 126 (push_cte -> .)
    MOREEQUAL       reduce using rule 126 (push_cte -> .)

    push_cte                       shift and go to state 157

state 119

    (96) escrituraAux -> expresion .
    (98) escrituraAux -> expresion . COMA escrituraAux

    RPAREN          reduce using rule 96 (escrituraAux -> expresion .)
    COMA            shift and go to state 158


state 120

    (70) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> ID . actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (128) var_cte -> ID . push_id
    (72) actualizaFuncion -> .
    (125) push_id -> .

    LPAREN          reduce using rule 72 (actualizaFuncion -> .)
    TIMES           reduce using rule 125 (push_id -> .)
    DIVIDE          reduce using rule 125 (push_id -> .)
    PLUS            reduce using rule 125 (push_id -> .)
    MINUS           reduce using rule 125 (push_id -> .)
    LOWERTHAN       reduce using rule 125 (push_id -> .)
    MORETHAN        reduce using rule 125 (push_id -> .)
    DIFFERENT       reduce using rule 125 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 125 (push_id -> .)
    LOWEREQUAL      reduce using rule 125 (push_id -> .)
    MOREEQUAL       reduce using rule 125 (push_id -> .)
    COMA            reduce using rule 125 (push_id -> .)
    RPAREN          reduce using rule 125 (push_id -> .)

    actualizaFuncion               shift and go to state 77
    push_id                        shift and go to state 131

state 121

    (93) escritura -> PRINT push_poper LPAREN escrituraAux . RPAREN quad_print SEMICOLON

    RPAREN          shift and go to state 159


state 122

    (100) escrituraAux -> llamadaAFuncion .

    RPAREN          reduce using rule 100 (escrituraAux -> llamadaAFuncion .)


state 123

    (110) exp -> termino quad_term .
    (111) exp -> termino quad_term . exp1
    (112) exp1 -> . PLUS push_poper exp
    (113) exp1 -> . MINUS push_poper exp

    LOWERTHAN       reduce using rule 110 (exp -> termino quad_term .)
    MORETHAN        reduce using rule 110 (exp -> termino quad_term .)
    DIFFERENT       reduce using rule 110 (exp -> termino quad_term .)
    DOUBLEEQUAL     reduce using rule 110 (exp -> termino quad_term .)
    LOWEREQUAL      reduce using rule 110 (exp -> termino quad_term .)
    MOREEQUAL       reduce using rule 110 (exp -> termino quad_term .)
    COMA            reduce using rule 110 (exp -> termino quad_term .)
    RPAREN          reduce using rule 110 (exp -> termino quad_term .)
    RCORCH          reduce using rule 110 (exp -> termino quad_term .)
    SEMICOLON       reduce using rule 110 (exp -> termino quad_term .)
    ID              reduce using rule 110 (exp -> termino quad_term .)
    IF              reduce using rule 110 (exp -> termino quad_term .)
    PRINT           reduce using rule 110 (exp -> termino quad_term .)
    WHILE           reduce using rule 110 (exp -> termino quad_term .)
    FROM            reduce using rule 110 (exp -> termino quad_term .)
    INPUT           reduce using rule 110 (exp -> termino quad_term .)
    RBRACE          reduce using rule 110 (exp -> termino quad_term .)
    PLUS            shift and go to state 161
    MINUS           shift and go to state 162

    exp1                           shift and go to state 160

state 124

    (123) factorAux -> MINUS push_poper . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    var_cte                        shift and go to state 163

state 125

    (122) factorAux -> PLUS push_poper . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    var_cte                        shift and go to state 164

state 126

    (116) termino -> factor quad_fact .
    (117) termino -> factor quad_fact . termino1
    (118) termino1 -> . TIMES push_poper termino
    (119) termino1 -> . DIVIDE push_poper termino

    PLUS            reduce using rule 116 (termino -> factor quad_fact .)
    MINUS           reduce using rule 116 (termino -> factor quad_fact .)
    LOWERTHAN       reduce using rule 116 (termino -> factor quad_fact .)
    MORETHAN        reduce using rule 116 (termino -> factor quad_fact .)
    DIFFERENT       reduce using rule 116 (termino -> factor quad_fact .)
    DOUBLEEQUAL     reduce using rule 116 (termino -> factor quad_fact .)
    LOWEREQUAL      reduce using rule 116 (termino -> factor quad_fact .)
    MOREEQUAL       reduce using rule 116 (termino -> factor quad_fact .)
    COMA            reduce using rule 116 (termino -> factor quad_fact .)
    RPAREN          reduce using rule 116 (termino -> factor quad_fact .)
    RCORCH          reduce using rule 116 (termino -> factor quad_fact .)
    ID              reduce using rule 116 (termino -> factor quad_fact .)
    IF              reduce using rule 116 (termino -> factor quad_fact .)
    PRINT           reduce using rule 116 (termino -> factor quad_fact .)
    WHILE           reduce using rule 116 (termino -> factor quad_fact .)
    FROM            reduce using rule 116 (termino -> factor quad_fact .)
    INPUT           reduce using rule 116 (termino -> factor quad_fact .)
    RBRACE          reduce using rule 116 (termino -> factor quad_fact .)
    SEMICOLON       reduce using rule 116 (termino -> factor quad_fact .)
    TIMES           shift and go to state 167
    DIVIDE          shift and go to state 165

    termino1                       shift and go to state 166

state 127

    (130) var_cte -> CTE_F push_cte .

    TIMES           reduce using rule 130 (var_cte -> CTE_F push_cte .)
    DIVIDE          reduce using rule 130 (var_cte -> CTE_F push_cte .)
    PLUS            reduce using rule 130 (var_cte -> CTE_F push_cte .)
    MINUS           reduce using rule 130 (var_cte -> CTE_F push_cte .)
    LOWERTHAN       reduce using rule 130 (var_cte -> CTE_F push_cte .)
    MORETHAN        reduce using rule 130 (var_cte -> CTE_F push_cte .)
    DIFFERENT       reduce using rule 130 (var_cte -> CTE_F push_cte .)
    DOUBLEEQUAL     reduce using rule 130 (var_cte -> CTE_F push_cte .)
    LOWEREQUAL      reduce using rule 130 (var_cte -> CTE_F push_cte .)
    MOREEQUAL       reduce using rule 130 (var_cte -> CTE_F push_cte .)
    SEMICOLON       reduce using rule 130 (var_cte -> CTE_F push_cte .)
    ID              reduce using rule 130 (var_cte -> CTE_F push_cte .)
    IF              reduce using rule 130 (var_cte -> CTE_F push_cte .)
    PRINT           reduce using rule 130 (var_cte -> CTE_F push_cte .)
    WHILE           reduce using rule 130 (var_cte -> CTE_F push_cte .)
    FROM            reduce using rule 130 (var_cte -> CTE_F push_cte .)
    INPUT           reduce using rule 130 (var_cte -> CTE_F push_cte .)
    RBRACE          reduce using rule 130 (var_cte -> CTE_F push_cte .)
    RPAREN          reduce using rule 130 (var_cte -> CTE_F push_cte .)
    COMA            reduce using rule 130 (var_cte -> CTE_F push_cte .)
    RCORCH          reduce using rule 130 (var_cte -> CTE_F push_cte .)


state 128

    (131) var_cte -> CTE_STRING push_cte .

    TIMES           reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    DIVIDE          reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    PLUS            reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    MINUS           reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    LOWERTHAN       reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    MORETHAN        reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    DIFFERENT       reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    DOUBLEEQUAL     reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    LOWEREQUAL      reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    MOREEQUAL       reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    SEMICOLON       reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    ID              reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    IF              reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    PRINT           reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    WHILE           reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    FROM            reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    INPUT           reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    RBRACE          reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    RPAREN          reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    COMA            reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    RCORCH          reduce using rule 131 (var_cte -> CTE_STRING push_cte .)


state 129

    (129) var_cte -> CTE_I push_cte .

    TIMES           reduce using rule 129 (var_cte -> CTE_I push_cte .)
    DIVIDE          reduce using rule 129 (var_cte -> CTE_I push_cte .)
    PLUS            reduce using rule 129 (var_cte -> CTE_I push_cte .)
    MINUS           reduce using rule 129 (var_cte -> CTE_I push_cte .)
    LOWERTHAN       reduce using rule 129 (var_cte -> CTE_I push_cte .)
    MORETHAN        reduce using rule 129 (var_cte -> CTE_I push_cte .)
    DIFFERENT       reduce using rule 129 (var_cte -> CTE_I push_cte .)
    DOUBLEEQUAL     reduce using rule 129 (var_cte -> CTE_I push_cte .)
    LOWEREQUAL      reduce using rule 129 (var_cte -> CTE_I push_cte .)
    MOREEQUAL       reduce using rule 129 (var_cte -> CTE_I push_cte .)
    SEMICOLON       reduce using rule 129 (var_cte -> CTE_I push_cte .)
    ID              reduce using rule 129 (var_cte -> CTE_I push_cte .)
    IF              reduce using rule 129 (var_cte -> CTE_I push_cte .)
    PRINT           reduce using rule 129 (var_cte -> CTE_I push_cte .)
    WHILE           reduce using rule 129 (var_cte -> CTE_I push_cte .)
    FROM            reduce using rule 129 (var_cte -> CTE_I push_cte .)
    INPUT           reduce using rule 129 (var_cte -> CTE_I push_cte .)
    RBRACE          reduce using rule 129 (var_cte -> CTE_I push_cte .)
    RPAREN          reduce using rule 129 (var_cte -> CTE_I push_cte .)
    COMA            reduce using rule 129 (var_cte -> CTE_I push_cte .)
    RCORCH          reduce using rule 129 (var_cte -> CTE_I push_cte .)


state 130

    (120) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 168


state 131

    (128) var_cte -> ID push_id .

    TIMES           reduce using rule 128 (var_cte -> ID push_id .)
    DIVIDE          reduce using rule 128 (var_cte -> ID push_id .)
    PLUS            reduce using rule 128 (var_cte -> ID push_id .)
    MINUS           reduce using rule 128 (var_cte -> ID push_id .)
    LOWERTHAN       reduce using rule 128 (var_cte -> ID push_id .)
    MORETHAN        reduce using rule 128 (var_cte -> ID push_id .)
    DIFFERENT       reduce using rule 128 (var_cte -> ID push_id .)
    DOUBLEEQUAL     reduce using rule 128 (var_cte -> ID push_id .)
    LOWEREQUAL      reduce using rule 128 (var_cte -> ID push_id .)
    MOREEQUAL       reduce using rule 128 (var_cte -> ID push_id .)
    SEMICOLON       reduce using rule 128 (var_cte -> ID push_id .)
    ID              reduce using rule 128 (var_cte -> ID push_id .)
    IF              reduce using rule 128 (var_cte -> ID push_id .)
    PRINT           reduce using rule 128 (var_cte -> ID push_id .)
    WHILE           reduce using rule 128 (var_cte -> ID push_id .)
    FROM            reduce using rule 128 (var_cte -> ID push_id .)
    INPUT           reduce using rule 128 (var_cte -> ID push_id .)
    RBRACE          reduce using rule 128 (var_cte -> ID push_id .)
    RPAREN          reduce using rule 128 (var_cte -> ID push_id .)
    COMA            reduce using rule 128 (var_cte -> ID push_id .)
    RCORCH          reduce using rule 128 (var_cte -> ID push_id .)


state 132

    (88) condicion -> IF LPAREN expresion RPAREN . cond bloque condFinal
    (89) condicion -> IF LPAREN expresion RPAREN . cond bloque ELSE condElse bloque condFinal
    (90) cond -> .

    LBRACE          reduce using rule 90 (cond -> .)

    cond                           shift and go to state 169

state 133

    (108) comp -> MOREEQUAL . push_poper
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)
    PLUS            reduce using rule 127 (push_poper -> .)
    MINUS           reduce using rule 127 (push_poper -> .)
    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 170

state 134

    (105) comp -> DIFFERENT . push_poper
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)
    PLUS            reduce using rule 127 (push_poper -> .)
    MINUS           reduce using rule 127 (push_poper -> .)
    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 171

state 135

    (106) comp -> DOUBLEEQUAL . push_poper
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)
    PLUS            reduce using rule 127 (push_poper -> .)
    MINUS           reduce using rule 127 (push_poper -> .)
    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 172

state 136

    (103) comp -> LOWERTHAN . push_poper
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)
    PLUS            reduce using rule 127 (push_poper -> .)
    MINUS           reduce using rule 127 (push_poper -> .)
    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 173

state 137

    (102) expresion -> exp comp . exp quad_comp
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    factor                         shift and go to state 93
    termino                        shift and go to state 90
    exp                            shift and go to state 174
    factorAux                      shift and go to state 101
    var_cte                        shift and go to state 89

state 138

    (107) comp -> LOWEREQUAL . push_poper
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)
    PLUS            reduce using rule 127 (push_poper -> .)
    MINUS           reduce using rule 127 (push_poper -> .)
    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 175

state 139

    (104) comp -> MORETHAN . push_poper
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)
    PLUS            reduce using rule 127 (push_poper -> .)
    MINUS           reduce using rule 127 (push_poper -> .)
    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 176

state 140

    (19) varAux1 -> tipo varAux2 SEMICOLON .
    (20) varAux1 -> tipo varAux2 SEMICOLON . varAux1
    (19) varAux1 -> . tipo varAux2 SEMICOLON
    (20) varAux1 -> . tipo varAux2 SEMICOLON varAux1
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR

    ID              reduce using rule 19 (varAux1 -> tipo varAux2 SEMICOLON .)
    IF              reduce using rule 19 (varAux1 -> tipo varAux2 SEMICOLON .)
    PRINT           reduce using rule 19 (varAux1 -> tipo varAux2 SEMICOLON .)
    WHILE           reduce using rule 19 (varAux1 -> tipo varAux2 SEMICOLON .)
    FROM            reduce using rule 19 (varAux1 -> tipo varAux2 SEMICOLON .)
    INPUT           reduce using rule 19 (varAux1 -> tipo varAux2 SEMICOLON .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    varAux1                        shift and go to state 177
    tipo                           shift and go to state 74

state 141

    (23) varAux2 -> ID LCORCH . CTE_I RCORCH push_arreglo
    (24) varAux2 -> ID LCORCH . CTE_I RCORCH push_arreglo COMA varAux2

    CTE_I           shift and go to state 178


state 142

    (21) varAux2 -> ID push_var .
    (22) varAux2 -> ID push_var . COMA varAux2
    (25) varAux2 -> ID push_var . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> ID push_var . LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    SEMICOLON       reduce using rule 21 (varAux2 -> ID push_var .)
    COMA            shift and go to state 180
    LCORCH          shift and go to state 179


state 143

    (94) lectura -> INPUT push_poper LPAREN ID . push_id RPAREN quad_print SEMICOLON
    (125) push_id -> .

    RPAREN          reduce using rule 125 (push_id -> .)

    push_id                        shift and go to state 181

state 144

    (70) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN . paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN . paramFuncion gosub RPAREN SEMICOLON
    (75) paramFuncion -> . ID push_id2
    (76) paramFuncion -> . ID push_id2 COMA paramFuncion
    (77) paramFuncion -> . expresion
    (78) paramFuncion -> . expresion COMA paramFuncion
    (79) paramFuncion -> . empty
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (52) empty -> .
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    ID              shift and go to state 184
    RPAREN          reduce using rule 52 (empty -> .)
    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    expresion                      shift and go to state 185
    paramFuncion                   shift and go to state 182
    empty                          shift and go to state 183
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101
    factor                         shift and go to state 93
    var_cte                        shift and go to state 89
    termino                        shift and go to state 90

state 145

    (87) comparacion -> ID push_id DOUBLEEQUAL push_poper . expresion SEMICOLON
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    expresion                      shift and go to state 186
    factor                         shift and go to state 93
    var_cte                        shift and go to state 89
    termino                        shift and go to state 90
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101

state 146

    (82) asignacion -> ID push_id LCORCH exp . RCORCH ver_dim EQUAL expresion SEMICOLON
    (83) asignacion -> ID push_id LCORCH exp . RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> ID push_id LCORCH exp . RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON

    RCORCH          shift and go to state 187


state 147

    (81) asignacion -> ID push_id EQUAL push_poper . expresion create_asign SEMICOLON
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    expresion                      shift and go to state 188
    var_cte                        shift and go to state 89
    termino                        shift and go to state 90
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101
    factor                         shift and go to state 93

state 148

    (61) loopFromDo -> FROM LPAREN ID EQUAL . expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    expresion                      shift and go to state 189
    factor                         shift and go to state 93
    var_cte                        shift and go to state 89
    termino                        shift and go to state 90
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101

state 149

    (57) while -> WHILE while1 LPAREN expresion . RPAREN while2 LBRACE bloqueAux RBRACE while3

    RPAREN          shift and go to state 190


state 150

    (13) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH
    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH COMA varAuxGlobal2

    RCORCH          shift and go to state 191


state 151

    (12) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH COMA varAuxGlobal2 .

    SEMICOLON       reduce using rule 12 (varAuxGlobal2 -> ID LCORCH CTE_I RCORCH COMA varAuxGlobal2 .)


state 152

    (41) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function .

    MAIN            reduce using rule 41 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function .)


state 153

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE . endProc
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE . endProc function
    (47) endProc -> .

    FUNCTION        reduce using rule 47 (endProc -> .)
    MAIN            reduce using rule 47 (endProc -> .)

    endProc                        shift and go to state 192

state 154

    (43) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc .
    (45) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc . function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    MAIN            reduce using rule 43 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 193

state 155

    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux . RBRACE endProc
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux . RBRACE endProc function

    RBRACE          shift and go to state 194


state 156

    (49) param -> tipo ID paramAvarTable COMA param .

    RPAREN          reduce using rule 49 (param -> tipo ID paramAvarTable COMA param .)


state 157

    (97) escrituraAux -> CTE_STRING push_cte .
    (99) escrituraAux -> CTE_STRING push_cte . COMA escrituraAux
    (131) var_cte -> CTE_STRING push_cte .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 97 (escrituraAux -> CTE_STRING push_cte .)
    RPAREN          reduce using rule 97 (escrituraAux -> CTE_STRING push_cte .)
    COMA            shift and go to state 195
    TIMES           reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    DIVIDE          reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    PLUS            reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    MINUS           reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    LOWERTHAN       reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    MORETHAN        reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    DIFFERENT       reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    DOUBLEEQUAL     reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    LOWEREQUAL      reduce using rule 131 (var_cte -> CTE_STRING push_cte .)
    MOREEQUAL       reduce using rule 131 (var_cte -> CTE_STRING push_cte .)

  ! COMA            [ reduce using rule 131 (var_cte -> CTE_STRING push_cte .) ]
  ! RPAREN          [ reduce using rule 131 (var_cte -> CTE_STRING push_cte .) ]


state 158

    (98) escrituraAux -> expresion COMA . escrituraAux
    (96) escrituraAux -> . expresion
    (97) escrituraAux -> . CTE_STRING push_cte
    (98) escrituraAux -> . expresion COMA escrituraAux
    (99) escrituraAux -> . CTE_STRING push_cte COMA escrituraAux
    (100) escrituraAux -> . llamadaAFuncion
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    CTE_STRING      shift and go to state 118
    ID              shift and go to state 120
    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94

    expresion                      shift and go to state 119
    escrituraAux                   shift and go to state 196
    llamadaAFuncion                shift and go to state 122
    var_cte                        shift and go to state 89
    termino                        shift and go to state 90
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101
    factor                         shift and go to state 93

state 159

    (93) escritura -> PRINT push_poper LPAREN escrituraAux RPAREN . quad_print SEMICOLON
    (95) quad_print -> .

    SEMICOLON       reduce using rule 95 (quad_print -> .)

    quad_print                     shift and go to state 197

state 160

    (111) exp -> termino quad_term exp1 .

    LOWERTHAN       reduce using rule 111 (exp -> termino quad_term exp1 .)
    MORETHAN        reduce using rule 111 (exp -> termino quad_term exp1 .)
    DIFFERENT       reduce using rule 111 (exp -> termino quad_term exp1 .)
    DOUBLEEQUAL     reduce using rule 111 (exp -> termino quad_term exp1 .)
    LOWEREQUAL      reduce using rule 111 (exp -> termino quad_term exp1 .)
    MOREEQUAL       reduce using rule 111 (exp -> termino quad_term exp1 .)
    COMA            reduce using rule 111 (exp -> termino quad_term exp1 .)
    RPAREN          reduce using rule 111 (exp -> termino quad_term exp1 .)
    RCORCH          reduce using rule 111 (exp -> termino quad_term exp1 .)
    SEMICOLON       reduce using rule 111 (exp -> termino quad_term exp1 .)
    ID              reduce using rule 111 (exp -> termino quad_term exp1 .)
    IF              reduce using rule 111 (exp -> termino quad_term exp1 .)
    PRINT           reduce using rule 111 (exp -> termino quad_term exp1 .)
    WHILE           reduce using rule 111 (exp -> termino quad_term exp1 .)
    FROM            reduce using rule 111 (exp -> termino quad_term exp1 .)
    INPUT           reduce using rule 111 (exp -> termino quad_term exp1 .)
    RBRACE          reduce using rule 111 (exp -> termino quad_term exp1 .)


state 161

    (112) exp1 -> PLUS . push_poper exp
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)
    PLUS            reduce using rule 127 (push_poper -> .)
    MINUS           reduce using rule 127 (push_poper -> .)
    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 198

state 162

    (113) exp1 -> MINUS . push_poper exp
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)
    PLUS            reduce using rule 127 (push_poper -> .)
    MINUS           reduce using rule 127 (push_poper -> .)
    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 199

state 163

    (123) factorAux -> MINUS push_poper var_cte .

    TIMES           reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    DIVIDE          reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    PLUS            reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    MINUS           reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    LOWERTHAN       reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    MORETHAN        reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    DIFFERENT       reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    DOUBLEEQUAL     reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    LOWEREQUAL      reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    MOREEQUAL       reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    RPAREN          reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    COMA            reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    RCORCH          reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    SEMICOLON       reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    ID              reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    IF              reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    PRINT           reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    WHILE           reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    FROM            reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    INPUT           reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)
    RBRACE          reduce using rule 123 (factorAux -> MINUS push_poper var_cte .)


state 164

    (122) factorAux -> PLUS push_poper var_cte .

    TIMES           reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    DIVIDE          reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    PLUS            reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    MINUS           reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    LOWERTHAN       reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    MORETHAN        reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    DIFFERENT       reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    DOUBLEEQUAL     reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    LOWEREQUAL      reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    MOREEQUAL       reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    RPAREN          reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    COMA            reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    RCORCH          reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    SEMICOLON       reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    ID              reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    IF              reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    PRINT           reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    WHILE           reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    FROM            reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    INPUT           reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)
    RBRACE          reduce using rule 122 (factorAux -> PLUS push_poper var_cte .)


state 165

    (119) termino1 -> DIVIDE . push_poper termino
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)
    PLUS            reduce using rule 127 (push_poper -> .)
    MINUS           reduce using rule 127 (push_poper -> .)
    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 200

state 166

    (117) termino -> factor quad_fact termino1 .

    PLUS            reduce using rule 117 (termino -> factor quad_fact termino1 .)
    MINUS           reduce using rule 117 (termino -> factor quad_fact termino1 .)
    LOWERTHAN       reduce using rule 117 (termino -> factor quad_fact termino1 .)
    MORETHAN        reduce using rule 117 (termino -> factor quad_fact termino1 .)
    DIFFERENT       reduce using rule 117 (termino -> factor quad_fact termino1 .)
    DOUBLEEQUAL     reduce using rule 117 (termino -> factor quad_fact termino1 .)
    LOWEREQUAL      reduce using rule 117 (termino -> factor quad_fact termino1 .)
    MOREEQUAL       reduce using rule 117 (termino -> factor quad_fact termino1 .)
    COMA            reduce using rule 117 (termino -> factor quad_fact termino1 .)
    RPAREN          reduce using rule 117 (termino -> factor quad_fact termino1 .)
    RCORCH          reduce using rule 117 (termino -> factor quad_fact termino1 .)
    ID              reduce using rule 117 (termino -> factor quad_fact termino1 .)
    IF              reduce using rule 117 (termino -> factor quad_fact termino1 .)
    PRINT           reduce using rule 117 (termino -> factor quad_fact termino1 .)
    WHILE           reduce using rule 117 (termino -> factor quad_fact termino1 .)
    FROM            reduce using rule 117 (termino -> factor quad_fact termino1 .)
    INPUT           reduce using rule 117 (termino -> factor quad_fact termino1 .)
    RBRACE          reduce using rule 117 (termino -> factor quad_fact termino1 .)
    SEMICOLON       reduce using rule 117 (termino -> factor quad_fact termino1 .)


state 167

    (118) termino1 -> TIMES . push_poper termino
    (127) push_poper -> .

    LPAREN          reduce using rule 127 (push_poper -> .)
    PLUS            reduce using rule 127 (push_poper -> .)
    MINUS           reduce using rule 127 (push_poper -> .)
    ID              reduce using rule 127 (push_poper -> .)
    CTE_I           reduce using rule 127 (push_poper -> .)
    CTE_F           reduce using rule 127 (push_poper -> .)
    CTE_STRING      reduce using rule 127 (push_poper -> .)

    push_poper                     shift and go to state 201

state 168

    (120) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    RCORCH          reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    COMA            reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    FROM            reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    INPUT           reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    LOWERTHAN       reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    MORETHAN        reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    DIFFERENT       reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    DOUBLEEQUAL     reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    LOWEREQUAL      reduce using rule 120 (factor -> LPAREN expresion RPAREN .)
    MOREEQUAL       reduce using rule 120 (factor -> LPAREN expresion RPAREN .)


state 169

    (88) condicion -> IF LPAREN expresion RPAREN cond . bloque condFinal
    (89) condicion -> IF LPAREN expresion RPAREN cond . bloque ELSE condElse bloque condFinal
    (37) bloque -> . LBRACE RBRACE
    (38) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 202

    bloque                         shift and go to state 203

state 170

    (108) comp -> MOREEQUAL push_poper .

    LPAREN          reduce using rule 108 (comp -> MOREEQUAL push_poper .)
    PLUS            reduce using rule 108 (comp -> MOREEQUAL push_poper .)
    MINUS           reduce using rule 108 (comp -> MOREEQUAL push_poper .)
    ID              reduce using rule 108 (comp -> MOREEQUAL push_poper .)
    CTE_I           reduce using rule 108 (comp -> MOREEQUAL push_poper .)
    CTE_F           reduce using rule 108 (comp -> MOREEQUAL push_poper .)
    CTE_STRING      reduce using rule 108 (comp -> MOREEQUAL push_poper .)


state 171

    (105) comp -> DIFFERENT push_poper .

    LPAREN          reduce using rule 105 (comp -> DIFFERENT push_poper .)
    PLUS            reduce using rule 105 (comp -> DIFFERENT push_poper .)
    MINUS           reduce using rule 105 (comp -> DIFFERENT push_poper .)
    ID              reduce using rule 105 (comp -> DIFFERENT push_poper .)
    CTE_I           reduce using rule 105 (comp -> DIFFERENT push_poper .)
    CTE_F           reduce using rule 105 (comp -> DIFFERENT push_poper .)
    CTE_STRING      reduce using rule 105 (comp -> DIFFERENT push_poper .)


state 172

    (106) comp -> DOUBLEEQUAL push_poper .

    LPAREN          reduce using rule 106 (comp -> DOUBLEEQUAL push_poper .)
    PLUS            reduce using rule 106 (comp -> DOUBLEEQUAL push_poper .)
    MINUS           reduce using rule 106 (comp -> DOUBLEEQUAL push_poper .)
    ID              reduce using rule 106 (comp -> DOUBLEEQUAL push_poper .)
    CTE_I           reduce using rule 106 (comp -> DOUBLEEQUAL push_poper .)
    CTE_F           reduce using rule 106 (comp -> DOUBLEEQUAL push_poper .)
    CTE_STRING      reduce using rule 106 (comp -> DOUBLEEQUAL push_poper .)


state 173

    (103) comp -> LOWERTHAN push_poper .

    LPAREN          reduce using rule 103 (comp -> LOWERTHAN push_poper .)
    PLUS            reduce using rule 103 (comp -> LOWERTHAN push_poper .)
    MINUS           reduce using rule 103 (comp -> LOWERTHAN push_poper .)
    ID              reduce using rule 103 (comp -> LOWERTHAN push_poper .)
    CTE_I           reduce using rule 103 (comp -> LOWERTHAN push_poper .)
    CTE_F           reduce using rule 103 (comp -> LOWERTHAN push_poper .)
    CTE_STRING      reduce using rule 103 (comp -> LOWERTHAN push_poper .)


state 174

    (102) expresion -> exp comp exp . quad_comp
    (109) quad_comp -> .

    RPAREN          reduce using rule 109 (quad_comp -> .)
    COMA            reduce using rule 109 (quad_comp -> .)
    SEMICOLON       reduce using rule 109 (quad_comp -> .)
    ID              reduce using rule 109 (quad_comp -> .)
    IF              reduce using rule 109 (quad_comp -> .)
    PRINT           reduce using rule 109 (quad_comp -> .)
    WHILE           reduce using rule 109 (quad_comp -> .)
    FROM            reduce using rule 109 (quad_comp -> .)
    INPUT           reduce using rule 109 (quad_comp -> .)
    RBRACE          reduce using rule 109 (quad_comp -> .)

    quad_comp                      shift and go to state 204

state 175

    (107) comp -> LOWEREQUAL push_poper .

    LPAREN          reduce using rule 107 (comp -> LOWEREQUAL push_poper .)
    PLUS            reduce using rule 107 (comp -> LOWEREQUAL push_poper .)
    MINUS           reduce using rule 107 (comp -> LOWEREQUAL push_poper .)
    ID              reduce using rule 107 (comp -> LOWEREQUAL push_poper .)
    CTE_I           reduce using rule 107 (comp -> LOWEREQUAL push_poper .)
    CTE_F           reduce using rule 107 (comp -> LOWEREQUAL push_poper .)
    CTE_STRING      reduce using rule 107 (comp -> LOWEREQUAL push_poper .)


state 176

    (104) comp -> MORETHAN push_poper .

    LPAREN          reduce using rule 104 (comp -> MORETHAN push_poper .)
    PLUS            reduce using rule 104 (comp -> MORETHAN push_poper .)
    MINUS           reduce using rule 104 (comp -> MORETHAN push_poper .)
    ID              reduce using rule 104 (comp -> MORETHAN push_poper .)
    CTE_I           reduce using rule 104 (comp -> MORETHAN push_poper .)
    CTE_F           reduce using rule 104 (comp -> MORETHAN push_poper .)
    CTE_STRING      reduce using rule 104 (comp -> MORETHAN push_poper .)


state 177

    (20) varAux1 -> tipo varAux2 SEMICOLON varAux1 .

    ID              reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    IF              reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    PRINT           reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    WHILE           reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    FROM            reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)
    INPUT           reduce using rule 20 (varAux1 -> tipo varAux2 SEMICOLON varAux1 .)


state 178

    (23) varAux2 -> ID LCORCH CTE_I . RCORCH push_arreglo
    (24) varAux2 -> ID LCORCH CTE_I . RCORCH push_arreglo COMA varAux2

    RCORCH          shift and go to state 205


state 179

    (25) varAux2 -> ID push_var LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> ID push_var LCORCH . CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    CTE_I           shift and go to state 206


state 180

    (22) varAux2 -> ID push_var COMA . varAux2
    (21) varAux2 -> . ID push_var
    (22) varAux2 -> . ID push_var COMA varAux2
    (23) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo
    (24) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (25) varAux2 -> . ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> . ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    ID              shift and go to state 103

    varAux2                        shift and go to state 207

state 181

    (94) lectura -> INPUT push_poper LPAREN ID push_id . RPAREN quad_print SEMICOLON

    RPAREN          shift and go to state 208


state 182

    (70) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion . gosub RPAREN expresion
    (71) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion . gosub RPAREN SEMICOLON
    (73) gosub -> .

    RPAREN          reduce using rule 73 (gosub -> .)

    gosub                          shift and go to state 209

state 183

    (79) paramFuncion -> empty .

    RPAREN          reduce using rule 79 (paramFuncion -> empty .)


state 184

    (75) paramFuncion -> ID . push_id2
    (76) paramFuncion -> ID . push_id2 COMA paramFuncion
    (128) var_cte -> ID . push_id
    (80) push_id2 -> .
    (125) push_id -> .

  ! reduce/reduce conflict for COMA resolved using rule 80 (push_id2 -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 80 (push_id2 -> .)
    COMA            reduce using rule 80 (push_id2 -> .)
    RPAREN          reduce using rule 80 (push_id2 -> .)
    TIMES           reduce using rule 125 (push_id -> .)
    DIVIDE          reduce using rule 125 (push_id -> .)
    PLUS            reduce using rule 125 (push_id -> .)
    MINUS           reduce using rule 125 (push_id -> .)
    LOWERTHAN       reduce using rule 125 (push_id -> .)
    MORETHAN        reduce using rule 125 (push_id -> .)
    DIFFERENT       reduce using rule 125 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 125 (push_id -> .)
    LOWEREQUAL      reduce using rule 125 (push_id -> .)
    MOREEQUAL       reduce using rule 125 (push_id -> .)

  ! COMA            [ reduce using rule 125 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 125 (push_id -> .) ]

    push_id                        shift and go to state 131
    push_id2                       shift and go to state 210

state 185

    (77) paramFuncion -> expresion .
    (78) paramFuncion -> expresion . COMA paramFuncion

    RPAREN          reduce using rule 77 (paramFuncion -> expresion .)
    COMA            shift and go to state 211


state 186

    (87) comparacion -> ID push_id DOUBLEEQUAL push_poper expresion . SEMICOLON

    SEMICOLON       shift and go to state 212


state 187

    (82) asignacion -> ID push_id LCORCH exp RCORCH . ver_dim EQUAL expresion SEMICOLON
    (83) asignacion -> ID push_id LCORCH exp RCORCH . ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> ID push_id LCORCH exp RCORCH . ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (85) ver_dim -> .

    EQUAL           reduce using rule 85 (ver_dim -> .)

    ver_dim                        shift and go to state 213

state 188

    (81) asignacion -> ID push_id EQUAL push_poper expresion . create_asign SEMICOLON
    (86) create_asign -> .

    SEMICOLON       reduce using rule 86 (create_asign -> .)

    create_asign                   shift and go to state 214

state 189

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion . RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    RPAREN          shift and go to state 215


state 190

    (57) while -> WHILE while1 LPAREN expresion RPAREN . while2 LBRACE bloqueAux RBRACE while3
    (59) while2 -> .

    LBRACE          reduce using rule 59 (while2 -> .)

    while2                         shift and go to state 216

state 191

    (13) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH .
    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH . COMA varAuxGlobal2

    SEMICOLON       reduce using rule 13 (varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH .)
    COMA            shift and go to state 217


state 192

    (40) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc .
    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc . function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    MAIN            reduce using rule 40 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 218

state 193

    (45) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function .

    MAIN            reduce using rule 45 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function .)


state 194

    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE . endProc
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE . endProc function
    (47) endProc -> .

    FUNCTION        reduce using rule 47 (endProc -> .)
    MAIN            reduce using rule 47 (endProc -> .)

    endProc                        shift and go to state 219

state 195

    (99) escrituraAux -> CTE_STRING push_cte COMA . escrituraAux
    (96) escrituraAux -> . expresion
    (97) escrituraAux -> . CTE_STRING push_cte
    (98) escrituraAux -> . expresion COMA escrituraAux
    (99) escrituraAux -> . CTE_STRING push_cte COMA escrituraAux
    (100) escrituraAux -> . llamadaAFuncion
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    CTE_STRING      shift and go to state 118
    ID              shift and go to state 120
    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94

    escrituraAux                   shift and go to state 220
    expresion                      shift and go to state 119
    llamadaAFuncion                shift and go to state 122
    var_cte                        shift and go to state 89
    termino                        shift and go to state 90
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101
    factor                         shift and go to state 93

state 196

    (98) escrituraAux -> expresion COMA escrituraAux .

    RPAREN          reduce using rule 98 (escrituraAux -> expresion COMA escrituraAux .)


state 197

    (93) escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print . SEMICOLON

    SEMICOLON       shift and go to state 221


state 198

    (112) exp1 -> PLUS push_poper . exp
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    termino                        shift and go to state 90
    exp                            shift and go to state 222
    factor                         shift and go to state 93
    factorAux                      shift and go to state 101
    var_cte                        shift and go to state 89

state 199

    (113) exp1 -> MINUS push_poper . exp
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    termino                        shift and go to state 90
    exp                            shift and go to state 223
    factor                         shift and go to state 93
    factorAux                      shift and go to state 101
    var_cte                        shift and go to state 89

state 200

    (119) termino1 -> DIVIDE push_poper . termino
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    termino                        shift and go to state 224
    factor                         shift and go to state 93
    factorAux                      shift and go to state 101
    var_cte                        shift and go to state 89

state 201

    (118) termino1 -> TIMES push_poper . termino
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    termino                        shift and go to state 225
    factor                         shift and go to state 93
    factorAux                      shift and go to state 101
    var_cte                        shift and go to state 89

state 202

    (37) bloque -> LBRACE . RBRACE
    (38) bloque -> LBRACE . bloqueAux RBRACE
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (81) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (82) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON
    (83) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (88) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (93) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (87) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (94) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    RBRACE          shift and go to state 226
    ID              shift and go to state 54
    IF              shift and go to state 49
    PRINT           shift and go to state 47
    WHILE           shift and go to state 59
    FROM            shift and go to state 57
    INPUT           shift and go to state 53

    estatuto                       shift and go to state 48
    condicion                      shift and go to state 51
    lectura                        shift and go to state 50
    loopFromDo                     shift and go to state 55
    llamadaAFuncion                shift and go to state 56
    asignacion                     shift and go to state 58
    bloqueAux                      shift and go to state 227
    while                          shift and go to state 61
    comparacion                    shift and go to state 62
    escritura                      shift and go to state 63

state 203

    (88) condicion -> IF LPAREN expresion RPAREN cond bloque . condFinal
    (89) condicion -> IF LPAREN expresion RPAREN cond bloque . ELSE condElse bloque condFinal
    (92) condFinal -> .

    ELSE            shift and go to state 229
    ID              reduce using rule 92 (condFinal -> .)
    IF              reduce using rule 92 (condFinal -> .)
    PRINT           reduce using rule 92 (condFinal -> .)
    WHILE           reduce using rule 92 (condFinal -> .)
    FROM            reduce using rule 92 (condFinal -> .)
    INPUT           reduce using rule 92 (condFinal -> .)
    RBRACE          reduce using rule 92 (condFinal -> .)

    condFinal                      shift and go to state 228

state 204

    (102) expresion -> exp comp exp quad_comp .

    SEMICOLON       reduce using rule 102 (expresion -> exp comp exp quad_comp .)
    RPAREN          reduce using rule 102 (expresion -> exp comp exp quad_comp .)
    COMA            reduce using rule 102 (expresion -> exp comp exp quad_comp .)
    ID              reduce using rule 102 (expresion -> exp comp exp quad_comp .)
    IF              reduce using rule 102 (expresion -> exp comp exp quad_comp .)
    PRINT           reduce using rule 102 (expresion -> exp comp exp quad_comp .)
    WHILE           reduce using rule 102 (expresion -> exp comp exp quad_comp .)
    FROM            reduce using rule 102 (expresion -> exp comp exp quad_comp .)
    INPUT           reduce using rule 102 (expresion -> exp comp exp quad_comp .)
    RBRACE          reduce using rule 102 (expresion -> exp comp exp quad_comp .)


state 205

    (23) varAux2 -> ID LCORCH CTE_I RCORCH . push_arreglo
    (24) varAux2 -> ID LCORCH CTE_I RCORCH . push_arreglo COMA varAux2
    (28) push_arreglo -> .

    COMA            reduce using rule 28 (push_arreglo -> .)
    SEMICOLON       reduce using rule 28 (push_arreglo -> .)

    push_arreglo                   shift and go to state 230

state 206

    (25) varAux2 -> ID push_var LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> ID push_var LCORCH CTE_I . RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    RCORCH          shift and go to state 231


state 207

    (22) varAux2 -> ID push_var COMA varAux2 .

    SEMICOLON       reduce using rule 22 (varAux2 -> ID push_var COMA varAux2 .)


state 208

    (94) lectura -> INPUT push_poper LPAREN ID push_id RPAREN . quad_print SEMICOLON
    (95) quad_print -> .

    SEMICOLON       reduce using rule 95 (quad_print -> .)

    quad_print                     shift and go to state 232

state 209

    (70) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub . RPAREN expresion
    (71) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub . RPAREN SEMICOLON

    RPAREN          shift and go to state 233


state 210

    (75) paramFuncion -> ID push_id2 .
    (76) paramFuncion -> ID push_id2 . COMA paramFuncion

    RPAREN          reduce using rule 75 (paramFuncion -> ID push_id2 .)
    COMA            shift and go to state 234


state 211

    (78) paramFuncion -> expresion COMA . paramFuncion
    (75) paramFuncion -> . ID push_id2
    (76) paramFuncion -> . ID push_id2 COMA paramFuncion
    (77) paramFuncion -> . expresion
    (78) paramFuncion -> . expresion COMA paramFuncion
    (79) paramFuncion -> . empty
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (52) empty -> .
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    ID              shift and go to state 184
    RPAREN          reduce using rule 52 (empty -> .)
    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    expresion                      shift and go to state 185
    paramFuncion                   shift and go to state 235
    termino                        shift and go to state 90
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101
    factor                         shift and go to state 93
    var_cte                        shift and go to state 89
    empty                          shift and go to state 183

state 212

    (87) comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .

    ID              reduce using rule 87 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    IF              reduce using rule 87 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    PRINT           reduce using rule 87 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    WHILE           reduce using rule 87 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    FROM            reduce using rule 87 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    INPUT           reduce using rule 87 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)
    RBRACE          reduce using rule 87 (comparacion -> ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON .)


state 213

    (82) asignacion -> ID push_id LCORCH exp RCORCH ver_dim . EQUAL expresion SEMICOLON
    (83) asignacion -> ID push_id LCORCH exp RCORCH ver_dim . EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> ID push_id LCORCH exp RCORCH ver_dim . EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON

    EQUAL           shift and go to state 236


state 214

    (81) asignacion -> ID push_id EQUAL push_poper expresion create_asign . SEMICOLON

    SEMICOLON       shift and go to state 237


state 215

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN . TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    TO              shift and go to state 238


state 216

    (57) while -> WHILE while1 LPAREN expresion RPAREN while2 . LBRACE bloqueAux RBRACE while3

    LBRACE          shift and go to state 239


state 217

    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA . varAuxGlobal2
    (9) varAuxGlobal2 -> . ID
    (10) varAuxGlobal2 -> . ID COMA varAuxGlobal2
    (11) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH
    (12) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH COMA varAuxGlobal2
    (13) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH
    (14) varAuxGlobal2 -> . ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2

    ID              shift and go to state 34

    varAuxGlobal2                  shift and go to state 240

state 218

    (42) function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function .

    MAIN            reduce using rule 42 (function -> FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function .)


state 219

    (44) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc .
    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc . function
    (39) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc
    (40) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc
    (41) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE RBRACE endProc function
    (42) function -> . FUNCTION tipoFunc nomFunc LPAREN RPAREN LBRACE vars bloqueAux RBRACE endProc function
    (43) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc
    (44) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc
    (45) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE RBRACE endProc function
    (46) function -> . FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function

    MAIN            reduce using rule 44 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc .)
    FUNCTION        shift and go to state 5

    function                       shift and go to state 241

state 220

    (99) escrituraAux -> CTE_STRING push_cte COMA escrituraAux .

    RPAREN          reduce using rule 99 (escrituraAux -> CTE_STRING push_cte COMA escrituraAux .)


state 221

    (93) escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .

    ID              reduce using rule 93 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    IF              reduce using rule 93 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    PRINT           reduce using rule 93 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    WHILE           reduce using rule 93 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    FROM            reduce using rule 93 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    INPUT           reduce using rule 93 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)
    RBRACE          reduce using rule 93 (escritura -> PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON .)


state 222

    (112) exp1 -> PLUS push_poper exp .

    LOWERTHAN       reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    MORETHAN        reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    DIFFERENT       reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    DOUBLEEQUAL     reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    LOWEREQUAL      reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    MOREEQUAL       reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    RPAREN          reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    COMA            reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    RCORCH          reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    SEMICOLON       reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    ID              reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    IF              reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    PRINT           reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    WHILE           reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    FROM            reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    INPUT           reduce using rule 112 (exp1 -> PLUS push_poper exp .)
    RBRACE          reduce using rule 112 (exp1 -> PLUS push_poper exp .)


state 223

    (113) exp1 -> MINUS push_poper exp .

    LOWERTHAN       reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    MORETHAN        reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    DIFFERENT       reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    DOUBLEEQUAL     reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    LOWEREQUAL      reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    MOREEQUAL       reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    RPAREN          reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    COMA            reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    RCORCH          reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    SEMICOLON       reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    ID              reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    IF              reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    PRINT           reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    WHILE           reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    FROM            reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    INPUT           reduce using rule 113 (exp1 -> MINUS push_poper exp .)
    RBRACE          reduce using rule 113 (exp1 -> MINUS push_poper exp .)


state 224

    (119) termino1 -> DIVIDE push_poper termino .

    PLUS            reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    MINUS           reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    LOWERTHAN       reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    MORETHAN        reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    DIFFERENT       reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    DOUBLEEQUAL     reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    LOWEREQUAL      reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    MOREEQUAL       reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    RPAREN          reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    COMA            reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    RCORCH          reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    SEMICOLON       reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    ID              reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    IF              reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    PRINT           reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    WHILE           reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    FROM            reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    INPUT           reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)
    RBRACE          reduce using rule 119 (termino1 -> DIVIDE push_poper termino .)


state 225

    (118) termino1 -> TIMES push_poper termino .

    PLUS            reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    MINUS           reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    LOWERTHAN       reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    MORETHAN        reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    DIFFERENT       reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    DOUBLEEQUAL     reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    LOWEREQUAL      reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    MOREEQUAL       reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    RPAREN          reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    COMA            reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    RCORCH          reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    SEMICOLON       reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    ID              reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    IF              reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    PRINT           reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    WHILE           reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    FROM            reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    INPUT           reduce using rule 118 (termino1 -> TIMES push_poper termino .)
    RBRACE          reduce using rule 118 (termino1 -> TIMES push_poper termino .)


state 226

    (37) bloque -> LBRACE RBRACE .

    ELSE            reduce using rule 37 (bloque -> LBRACE RBRACE .)
    ID              reduce using rule 37 (bloque -> LBRACE RBRACE .)
    IF              reduce using rule 37 (bloque -> LBRACE RBRACE .)
    PRINT           reduce using rule 37 (bloque -> LBRACE RBRACE .)
    WHILE           reduce using rule 37 (bloque -> LBRACE RBRACE .)
    FROM            reduce using rule 37 (bloque -> LBRACE RBRACE .)
    INPUT           reduce using rule 37 (bloque -> LBRACE RBRACE .)
    RBRACE          reduce using rule 37 (bloque -> LBRACE RBRACE .)


state 227

    (38) bloque -> LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 242


state 228

    (88) condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .

    ID              reduce using rule 88 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    IF              reduce using rule 88 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    PRINT           reduce using rule 88 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    WHILE           reduce using rule 88 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    FROM            reduce using rule 88 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    INPUT           reduce using rule 88 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)
    RBRACE          reduce using rule 88 (condicion -> IF LPAREN expresion RPAREN cond bloque condFinal .)


state 229

    (89) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE . condElse bloque condFinal
    (91) condElse -> .

    LBRACE          reduce using rule 91 (condElse -> .)

    condElse                       shift and go to state 243

state 230

    (23) varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo .
    (24) varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo . COMA varAux2

    SEMICOLON       reduce using rule 23 (varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo .)
    COMA            shift and go to state 244


state 231

    (25) varAux2 -> ID push_var LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> ID push_var LCORCH CTE_I RCORCH . LCORCH CTE_I RCORCH push_matriz COMA varAux2

    LCORCH          shift and go to state 245


state 232

    (94) lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print . SEMICOLON

    SEMICOLON       shift and go to state 246


state 233

    (70) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN . expresion
    (71) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN . SEMICOLON
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    SEMICOLON       shift and go to state 247
    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    expresion                      shift and go to state 248
    termino                        shift and go to state 90
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101
    factor                         shift and go to state 93
    var_cte                        shift and go to state 89

state 234

    (76) paramFuncion -> ID push_id2 COMA . paramFuncion
    (75) paramFuncion -> . ID push_id2
    (76) paramFuncion -> . ID push_id2 COMA paramFuncion
    (77) paramFuncion -> . expresion
    (78) paramFuncion -> . expresion COMA paramFuncion
    (79) paramFuncion -> . empty
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (52) empty -> .
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    ID              shift and go to state 184
    RPAREN          reduce using rule 52 (empty -> .)
    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    expresion                      shift and go to state 185
    paramFuncion                   shift and go to state 249
    termino                        shift and go to state 90
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101
    factor                         shift and go to state 93
    var_cte                        shift and go to state 89
    empty                          shift and go to state 183

state 235

    (78) paramFuncion -> expresion COMA paramFuncion .

    RPAREN          reduce using rule 78 (paramFuncion -> expresion COMA paramFuncion .)


state 236

    (82) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL . expresion SEMICOLON
    (83) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL . ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL . ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    ID              shift and go to state 250
    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    expresion                      shift and go to state 251
    factor                         shift and go to state 93
    var_cte                        shift and go to state 89
    termino                        shift and go to state 90
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101

state 237

    (81) asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .

    ID              reduce using rule 81 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    IF              reduce using rule 81 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    PRINT           reduce using rule 81 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    WHILE           reduce using rule 81 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    FROM            reduce using rule 81 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    INPUT           reduce using rule 81 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)
    RBRACE          reduce using rule 81 (asignacion -> ID push_id EQUAL push_poper expresion create_asign SEMICOLON .)


state 238

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO . LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE

    LPAREN          shift and go to state 252


state 239

    (57) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE . bloqueAux RBRACE while3
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (81) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (82) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON
    (83) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (88) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (93) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (87) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (94) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 54
    IF              shift and go to state 49
    PRINT           shift and go to state 47
    WHILE           shift and go to state 59
    FROM            shift and go to state 57
    INPUT           shift and go to state 53

    estatuto                       shift and go to state 48
    condicion                      shift and go to state 51
    lectura                        shift and go to state 50
    loopFromDo                     shift and go to state 55
    llamadaAFuncion                shift and go to state 56
    asignacion                     shift and go to state 58
    bloqueAux                      shift and go to state 253
    while                          shift and go to state 61
    comparacion                    shift and go to state 62
    escritura                      shift and go to state 63

state 240

    (14) varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2 .

    SEMICOLON       reduce using rule 14 (varAuxGlobal2 -> ID LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH COMA varAuxGlobal2 .)


state 241

    (46) function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function .

    MAIN            reduce using rule 46 (function -> FUNCTION tipoFunc nomFunc LPAREN param RPAREN LBRACE vars bloqueAux RBRACE endProc function .)


state 242

    (38) bloque -> LBRACE bloqueAux RBRACE .

    ELSE            reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    ID              reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    IF              reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    PRINT           reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    WHILE           reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    FROM            reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    INPUT           reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)
    RBRACE          reduce using rule 38 (bloque -> LBRACE bloqueAux RBRACE .)


state 243

    (89) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse . bloque condFinal
    (37) bloque -> . LBRACE RBRACE
    (38) bloque -> . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 202

    bloque                         shift and go to state 254

state 244

    (24) varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo COMA . varAux2
    (21) varAux2 -> . ID push_var
    (22) varAux2 -> . ID push_var COMA varAux2
    (23) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo
    (24) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (25) varAux2 -> . ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> . ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    ID              shift and go to state 103

    varAux2                        shift and go to state 255

state 245

    (25) varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH push_matriz
    (26) varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH . CTE_I RCORCH push_matriz COMA varAux2

    CTE_I           shift and go to state 256


state 246

    (94) lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .

    ID              reduce using rule 94 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    IF              reduce using rule 94 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    PRINT           reduce using rule 94 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    WHILE           reduce using rule 94 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    FROM            reduce using rule 94 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    INPUT           reduce using rule 94 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)
    RBRACE          reduce using rule 94 (lectura -> INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON .)


state 247

    (71) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .

    ID              reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    IF              reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    PRINT           reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    WHILE           reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    FROM            reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    INPUT           reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    RBRACE          reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)
    RPAREN          reduce using rule 71 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON .)


state 248

    (70) llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .

    ID              reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    IF              reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    PRINT           reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    WHILE           reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    FROM            reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    INPUT           reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    RBRACE          reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)
    RPAREN          reduce using rule 70 (llamadaAFuncion -> ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion .)


state 249

    (76) paramFuncion -> ID push_id2 COMA paramFuncion .

    RPAREN          reduce using rule 76 (paramFuncion -> ID push_id2 COMA paramFuncion .)


state 250

    (83) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID . LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID . LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (128) var_cte -> ID . push_id
    (125) push_id -> .

    LCORCH          shift and go to state 257
    TIMES           reduce using rule 125 (push_id -> .)
    DIVIDE          reduce using rule 125 (push_id -> .)
    PLUS            reduce using rule 125 (push_id -> .)
    MINUS           reduce using rule 125 (push_id -> .)
    LOWERTHAN       reduce using rule 125 (push_id -> .)
    MORETHAN        reduce using rule 125 (push_id -> .)
    DIFFERENT       reduce using rule 125 (push_id -> .)
    DOUBLEEQUAL     reduce using rule 125 (push_id -> .)
    LOWEREQUAL      reduce using rule 125 (push_id -> .)
    MOREEQUAL       reduce using rule 125 (push_id -> .)
    SEMICOLON       reduce using rule 125 (push_id -> .)

    push_id                        shift and go to state 131

state 251

    (82) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 258


state 252

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN . expresion RPAREN DO LBRACE bloqueAux RBRACE
    (101) expresion -> . exp
    (102) expresion -> . exp comp exp quad_comp
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    expresion                      shift and go to state 259
    factor                         shift and go to state 93
    var_cte                        shift and go to state 89
    termino                        shift and go to state 90
    exp                            shift and go to state 100
    factorAux                      shift and go to state 101

state 253

    (57) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux . RBRACE while3

    RBRACE          shift and go to state 260


state 254

    (89) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque . condFinal
    (92) condFinal -> .

    ID              reduce using rule 92 (condFinal -> .)
    IF              reduce using rule 92 (condFinal -> .)
    PRINT           reduce using rule 92 (condFinal -> .)
    WHILE           reduce using rule 92 (condFinal -> .)
    FROM            reduce using rule 92 (condFinal -> .)
    INPUT           reduce using rule 92 (condFinal -> .)
    RBRACE          reduce using rule 92 (condFinal -> .)

    condFinal                      shift and go to state 261

state 255

    (24) varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2 .

    SEMICOLON       reduce using rule 24 (varAux2 -> ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2 .)


state 256

    (25) varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH push_matriz
    (26) varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I . RCORCH push_matriz COMA varAux2

    RCORCH          shift and go to state 262


state 257

    (83) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH . exp RCORCH SEMICOLON
    (84) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH . exp RCORCH LCORCH exp RCORCH SEMICOLON
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    factor                         shift and go to state 93
    termino                        shift and go to state 90
    exp                            shift and go to state 263
    factorAux                      shift and go to state 101
    var_cte                        shift and go to state 89

state 258

    (82) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON .

    ID              reduce using rule 82 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON .)
    IF              reduce using rule 82 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON .)
    PRINT           reduce using rule 82 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 82 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON .)
    FROM            reduce using rule 82 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON .)
    INPUT           reduce using rule 82 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON .)
    RBRACE          reduce using rule 82 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON .)


state 259

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion . RPAREN DO LBRACE bloqueAux RBRACE

    RPAREN          shift and go to state 264


state 260

    (57) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE . while3
    (60) while3 -> .

    ID              reduce using rule 60 (while3 -> .)
    IF              reduce using rule 60 (while3 -> .)
    PRINT           reduce using rule 60 (while3 -> .)
    WHILE           reduce using rule 60 (while3 -> .)
    FROM            reduce using rule 60 (while3 -> .)
    INPUT           reduce using rule 60 (while3 -> .)
    RBRACE          reduce using rule 60 (while3 -> .)

    while3                         shift and go to state 265

state 261

    (89) condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .

    ID              reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    IF              reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    PRINT           reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    WHILE           reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    FROM            reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    INPUT           reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)
    RBRACE          reduce using rule 89 (condicion -> IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal .)


state 262

    (25) varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH . push_matriz
    (26) varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH . push_matriz COMA varAux2
    (29) push_matriz -> .

    COMA            reduce using rule 29 (push_matriz -> .)
    SEMICOLON       reduce using rule 29 (push_matriz -> .)

    push_matriz                    shift and go to state 266

state 263

    (83) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp . RCORCH SEMICOLON
    (84) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp . RCORCH LCORCH exp RCORCH SEMICOLON

    RCORCH          shift and go to state 267


state 264

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN . DO LBRACE bloqueAux RBRACE

    DO              shift and go to state 268


state 265

    (57) while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .

    ID              reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    IF              reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    PRINT           reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    WHILE           reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    FROM            reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    INPUT           reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)
    RBRACE          reduce using rule 57 (while -> WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3 .)


state 266

    (25) varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz .
    (26) varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz . COMA varAux2

    SEMICOLON       reduce using rule 25 (varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz .)
    COMA            shift and go to state 269


state 267

    (83) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH . SEMICOLON
    (84) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH . LCORCH exp RCORCH SEMICOLON

    SEMICOLON       shift and go to state 270
    LCORCH          shift and go to state 271


state 268

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO . LBRACE bloqueAux RBRACE

    LBRACE          shift and go to state 272


state 269

    (26) varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA . varAux2
    (21) varAux2 -> . ID push_var
    (22) varAux2 -> . ID push_var COMA varAux2
    (23) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo
    (24) varAux2 -> . ID LCORCH CTE_I RCORCH push_arreglo COMA varAux2
    (25) varAux2 -> . ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz
    (26) varAux2 -> . ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2

    ID              shift and go to state 103

    varAux2                        shift and go to state 273

state 270

    (83) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON .

    ID              reduce using rule 83 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON .)
    IF              reduce using rule 83 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON .)
    PRINT           reduce using rule 83 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON .)
    WHILE           reduce using rule 83 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON .)
    FROM            reduce using rule 83 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON .)
    INPUT           reduce using rule 83 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON .)
    RBRACE          reduce using rule 83 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON .)


state 271

    (84) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH . exp RCORCH SEMICOLON
    (110) exp -> . termino quad_term
    (111) exp -> . termino quad_term exp1
    (116) termino -> . factor quad_fact
    (117) termino -> . factor quad_fact termino1
    (120) factor -> . LPAREN expresion RPAREN
    (121) factor -> . factorAux
    (122) factorAux -> . PLUS push_poper var_cte
    (123) factorAux -> . MINUS push_poper var_cte
    (124) factorAux -> . var_cte
    (128) var_cte -> . ID push_id
    (129) var_cte -> . CTE_I push_cte
    (130) var_cte -> . CTE_F push_cte
    (131) var_cte -> . CTE_STRING push_cte

    LPAREN          shift and go to state 97
    PLUS            shift and go to state 92
    MINUS           shift and go to state 91
    ID              shift and go to state 98
    CTE_I           shift and go to state 96
    CTE_F           shift and go to state 94
    CTE_STRING      shift and go to state 95

    factor                         shift and go to state 93
    termino                        shift and go to state 90
    exp                            shift and go to state 274
    factorAux                      shift and go to state 101
    var_cte                        shift and go to state 89

state 272

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE . bloqueAux RBRACE
    (55) bloqueAux -> . estatuto
    (56) bloqueAux -> . estatuto bloqueAux
    (62) estatuto -> . asignacion
    (63) estatuto -> . condicion
    (64) estatuto -> . escritura
    (65) estatuto -> . while
    (66) estatuto -> . loopFromDo
    (67) estatuto -> . comparacion
    (68) estatuto -> . llamadaAFuncion
    (69) estatuto -> . lectura
    (81) asignacion -> . ID push_id EQUAL push_poper expresion create_asign SEMICOLON
    (82) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL expresion SEMICOLON
    (83) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH SEMICOLON
    (84) asignacion -> . ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON
    (88) condicion -> . IF LPAREN expresion RPAREN cond bloque condFinal
    (89) condicion -> . IF LPAREN expresion RPAREN cond bloque ELSE condElse bloque condFinal
    (93) escritura -> . PRINT push_poper LPAREN escrituraAux RPAREN quad_print SEMICOLON
    (57) while -> . WHILE while1 LPAREN expresion RPAREN while2 LBRACE bloqueAux RBRACE while3
    (61) loopFromDo -> . FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE
    (87) comparacion -> . ID push_id DOUBLEEQUAL push_poper expresion SEMICOLON
    (70) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN expresion
    (71) llamadaAFuncion -> . ID actualizaFuncion generarEra LPAREN paramFuncion gosub RPAREN SEMICOLON
    (94) lectura -> . INPUT push_poper LPAREN ID push_id RPAREN quad_print SEMICOLON

    ID              shift and go to state 54
    IF              shift and go to state 49
    PRINT           shift and go to state 47
    WHILE           shift and go to state 59
    FROM            shift and go to state 57
    INPUT           shift and go to state 53

    estatuto                       shift and go to state 48
    condicion                      shift and go to state 51
    lectura                        shift and go to state 50
    loopFromDo                     shift and go to state 55
    llamadaAFuncion                shift and go to state 56
    asignacion                     shift and go to state 58
    bloqueAux                      shift and go to state 275
    while                          shift and go to state 61
    comparacion                    shift and go to state 62
    escritura                      shift and go to state 63

state 273

    (26) varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2 .

    SEMICOLON       reduce using rule 26 (varAux2 -> ID push_var LCORCH CTE_I RCORCH LCORCH CTE_I RCORCH push_matriz COMA varAux2 .)


state 274

    (84) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp . RCORCH SEMICOLON

    RCORCH          shift and go to state 276


state 275

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux . RBRACE

    RBRACE          shift and go to state 277


state 276

    (84) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH . SEMICOLON

    SEMICOLON       shift and go to state 278


state 277

    (61) loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .

    ID              reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    IF              reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    PRINT           reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    WHILE           reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    FROM            reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    INPUT           reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)
    RBRACE          reduce using rule 61 (loopFromDo -> FROM LPAREN ID EQUAL expresion RPAREN TO LPAREN expresion RPAREN DO LBRACE bloqueAux RBRACE .)


state 278

    (84) asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON .

    ID              reduce using rule 84 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON .)
    IF              reduce using rule 84 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON .)
    PRINT           reduce using rule 84 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON .)
    WHILE           reduce using rule 84 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON .)
    FROM            reduce using rule 84 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON .)
    INPUT           reduce using rule 84 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON .)
    RBRACE          reduce using rule 84 (asignacion -> ID push_id LCORCH exp RCORCH ver_dim EQUAL ID LCORCH exp RCORCH LCORCH exp RCORCH SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 35 resolved as shift
WARNING: shift/reduce conflict for LCORCH in state 103 resolved as shift
WARNING: shift/reduce conflict for COMA in state 157 resolved as shift
WARNING: reduce/reduce conflict in state 157 resolved using rule (escrituraAux -> CTE_STRING push_cte)
WARNING: rejected rule (var_cte -> CTE_STRING push_cte) in state 157
WARNING: reduce/reduce conflict in state 184 resolved using rule (push_id2 -> <empty>)
WARNING: rejected rule (push_id -> <empty>) in state 184
